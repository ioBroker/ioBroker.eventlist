{
    "common": {
        "name": "eventlist",
        "version": "0.1.3",
        "news": {
            "0.1.3": {
                "en": "Implemented the alarm mode and messengers",
                "de": "Alarmmodus und Messenger implementiert",
                "ru": "Реализован режим будильника и мессенджеры.",
                "pt": "Implementado o modo de alarme e mensageiros",
                "nl": "Implementeerde de alarmmodus en boodschappers",
                "fr": "Implémentation du mode d'alarme et des messagers",
                "it": "Implementato la modalità di allarme e messenger",
                "es": "Implementado el modo de alarma y mensajeros",
                "pl": "Zaimplementowano tryb alarmowy i komunikatory",
                "zh-cn": "实施了警报模式和信使"
            },
            "0.0.3": {
                "en": "Objects with states are supported now",
                "de": "Objekte mit Status werden jetzt unterstützt",
                "ru": "Теперь поддерживаются объекты со состояниями",
                "pt": "Objetos com estados são suportados agora",
                "nl": "Objecten met statussen worden nu ondersteund",
                "fr": "Les objets avec des états sont maintenant pris en charge",
                "it": "Gli oggetti con stati sono ora supportati",
                "es": "Los objetos con estados son compatibles ahora",
                "pl": "Obiekty ze stanami są teraz obsługiwane",
                "zh-cn": "现在支持带有状态的对象"
            },
            "0.0.2": {
                "en": "initial commit",
                "de": "anfängliches Commit",
                "ru": "начальная фиксация",
                "pt": "commit inicial",
                "nl": "eerste vastlegging",
                "fr": "engagement initial",
                "it": "commit iniziale",
                "es": "Compromiso inicial",
                "pl": "wstępne zatwierdzenie",
                "zh-cn": "初次提交"
            },
            "0.0.1": {
                "en": "initial release",
                "de": "Erstveröffentlichung",
                "ru": "Начальная версия",
                "pt": "lançamento inicial",
                "nl": "Eerste uitgave",
                "fr": "Première version",
                "it": "Versione iniziale",
                "es": "Versión inicial",
                "pl": "Pierwsze wydanie",
                "zh-cn": "首次出版"
            }
        },
        "title": "Event list",
        "titleLang": {
            "en": "Event list",
            "de": "Ereignisliste",
            "ru": "Список событий",
            "pt": "Lista de evento",
            "nl": "Evenementenlijst",
            "fr": "Liste des événements",
            "it": "Elenco degli eventi",
            "es": "Lista de eventos",
            "pl": "Lista wydarzeń",
            "zh-cn": "活动列表"
        },
        "desc": {
            "en": "Builds and shows the event list from desired states in admin, web and as widget",
            "de": "Erstellt und zeigt die Ereignisliste aus den gewünschten Status in Admin, Web und als Widget an",
            "ru": "Создает и отображает список событий из желаемых состояний в админке, в Интернете и в виде виджета.",
            "pt": "Constrói e mostra a lista de eventos de estados desejados em admin, web e como widget",
            "nl": "Bouwt en toont de evenementenlijst van de gewenste staten in admin, web en als widget",
            "fr": "Construit et affiche la liste d'événements à partir des états souhaités dans admin, Web et en tant que widget",
            "it": "Crea e mostra l'elenco degli eventi dagli stati desiderati in admin, web e come widget",
            "es": "Crea y muestra la lista de eventos de los estados deseados en admin, web y como widget",
            "pl": "Tworzy i wyświetla listę wydarzeń z żądanych stanów w panelu administracyjnym, internetowym i jako widget",
            "zh-cn": "从管理员，Web和窗口小部件中的所需状态构建并显示事件列表"
        },
        "authors": [
            "bluefox <dogafox@gmail.com>"
        ],
        "keywords": [
            "event list",
            "events"
        ],
        "license": "MIT",
        "platform": "Javascript/Node.js",
        "main": "main.js",
        "icon": "eventlist.png",
        "enabled": true,
        "extIcon": "https://raw.githubusercontent.com/ioBroker/ioBroker.eventlist/master/admin/eventlist.png",
        "readme": "https://github.com/ioBroker/ioBroker.eventlist/blob/master/README.md",
        "loglevel": "info",
        "restartAdapters": [
            "vis"
        ],
        "localLink": "%web_protocol%://%ip%:%web_port%/eventlist/index.html",
        "welcomeScreen": {
            "link": "eventlist/index.html",
            "name": {
                "en": "Events list",
                "de": "Ereignisliste",
                "ru": "Список событий",
                "pt": "Lista de eventos",
                "nl": "Evenementen lijst",
                "fr": "Liste des événements",
                "it": "Elenco eventi",
                "es": "Lista de eventos",
                "pl": "Lista wydarzeń",
                "zh-cn": "活动清单"
            },
            "img": "eventlist.admin/eventlist.png",
            "color": "black",
            "order": 5
        },
        "mode": "daemon",
        "type": "visualization",
        "compact": true,
        "materialize": true,
        "materializeTab": true,
        "messagebox": true,
        "adminTab": {
            "name": {
                "en": "Event list",
                "de": "Ereignise",
                "ru": "Список событий",
                "pt": "Lista de evento",
                "nl": "Evenementenlijst",
                "fr": "Liste des événements",
                "it": "Elenco degli eventi",
                "es": "Lista de eventos",
                "pl": "Lista wydarzeń",
                "zh-cn": "活动列表"
            },
            "fa-icon": "flash_on"
        },
        "supportCustoms": true,
        "dependencies": [
            {
                "js-controller": ">=1.4.2"
            },
            "vis"
        ]
    },
    "native": {
        "maxLength": 100,
        "dateFormat": "MMM Do, HH:mm:ss",
        "relativeTime": 3600,
        "defaultBooleanTextTrue": "",
        "defaultBooleanTextFalse": "",
        "defaultBooleanText": "",
        "defaultBooleanColorTrue": "",
        "defaultBooleanColorFalse": "",
        "defaultBooleanIconTrue": "",
        "defaultBooleanIconFalse": "",
        "defaultNonBooleanText": "",
        "language": "",
        "icons": true,
        "duration": true,
        "license": "",
        "pdfButton": false,
        "pdfSettings": {
            "orientation": "portrait",
            "enabledTime": true,
            "enabledEvent": true,
            "enabledValue": true,
            "enabledDuration": true,
            "widthTime": 130,
            "widthEvent": 200,
            "widthValue": 110,
            "widthDuration": 100,
            "textTime": "Time",
            "textEvent": "Event",
            "textValue": "Value",
            "textDuration": "Duration",
            "textColor": "#000000",
            "paddingLeft": 60,
            "paddingTopFirst": 120,
            "paddingTop": 60,
            "pageWidth": 510,
            "pageHeight": 740,
            "fontSize": 10,
            "colorLineOdd": "#E8E8E8",
            "colorLineEven": "#FFFFFF",
            "enabledHeader": true,
            "fontSizeHeader": 13,
            "colorHeaderBackground": "#888888",
            "colorHeader": "#FFFFFF",
            "titleColor": "#000000",
            "titleText": "Event list",
            "titleFontSize": 18,
            "lineHeight": 18,
            "pageNumberOffsetX": 50,
            "pageNumberOffsetY": 10,
            "pageNumberFontSize": 10,
            "pageNumberColor": "#000000",
            "pageNumberEnabled": true,
            "margins": {
                "top": 30,
                "bottom": 30,
                "left": 30,
                "right": 30
            }
        },
        "defaultWhatsAppCMB": [],
        "defaultTelegram": [],
        "defaultPushover": []
    },
    "objects": [
        {
            "_id": "_design/custom",
            "language": "javascript",
            "views": {
                "state": {
                    "map": "function(doc) { doc.type === 'state' && doc.common && doc.common.custom && emit(doc._id, doc.common.custom) }"
                }
            }
        }
    ],
    "instanceObjects": [
        {
            "_id": "insert",
            "common": {
                "name": "Insert event into table",
                "write": true,
                "read": false,
                "type": "json",
                "desc": "Write following JSON object: {\"event\": \"My custom event\", \"ts\":1234455666, \"val\": \"optional value\"}"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "triggerPDF",
            "common": {
                "name": "Generate PDF file",
                "write": true,
                "read": false,
                "def": false,
                "role": "button",
                "type": "boolean"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "alarm",
            "common": {
                "name": "Switch alarm state",
                "write": true,
                "read": true,
                "type": "boolean",
                "role": "switch",
                "desc": "Toggle alarm state"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "eventListRaw",
            "common": {
                "expert": true,
                "name": "Raw events table",
                "write": false,
                "read": true,
                "def": "[]",
                "type": "json"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "eventJSONList",
            "common": {
                "name": "Event JSON table",
                "write": false,
                "read": true,
                "def": "[]",
                "type": "json"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "lastEvent",
            "common": {
                "name": "Last event"
            },
            "type": "channel",
            "native": {}
        },
        {
            "_id": "lastEvent.json",
            "common": {
                "name": "Last event as JSON",
                "write": false,
                "read": true,
                "def": "{}",
                "type": "json"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "lastEvent.event",
            "common": {
                "name": "Last event text",
                "write": false,
                "read": true,
                "def": "",
                "type": "string"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "lastEvent.ts",
            "common": {
                "name": "Last event time in ms",
                "write": false,
                "read": true,
                "def": 0,
                "role": "datetime",
                "type": "number"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "lastEvent.duration",
            "common": {
                "name": "Last event duration",
                "write": false,
                "read": true,
                "def": 0,
                "unit": "ms",
                "role": "state",
                "type": "number"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "lastEvent.val",
            "common": {
                "name": "Last event value",
                "write": false,
                "read": true,
                "role": "state",
                "type": "mixed"
            },
            "type": "state",
            "native": {}
        },
        {
            "_id": "lastEvent.id",
            "common": {
                "name": "Last event state id",
                "write": false,
                "read": true,
                "role": "state",
                "def": "",
                "type": "string"
            },
            "type": "state",
            "native": {}
        }
    ]
}