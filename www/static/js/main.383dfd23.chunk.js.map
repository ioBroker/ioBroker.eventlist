{"version":3,"sources":["Components/ColorPicker.js","Tabs/Options.js","Dialogs/AddEvent.js","Components/IconPicker.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","Tabs/Messengers.js","App.js","serviceWorker.js","index.js"],"names":["ColorPicker","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","onChange","getColor","this","style","TextField","id","width","label","name","value","margin","classes","root","textDense","e","target","IconButton","onClick","size","className","delButton","opacity","cursor","swatch","background","popover","cover","onChangeComplete","rgb","r","g","b","a","React","Component","withStyles","theme","height","borderRadius","marginTop","padding","boxShadow","display","verticalAlign","position","zIndex","top","right","bottom","left","marginBottom","Options","onAliveChanged","aliveId","isInstanceAlive","val","inAction","toast","errorWithPercent","adapterName","instance","socket","getState","then","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","key","aria-label","close","tab","common","native","onError","text","errorText","onLoad","column","columnSettings","I18n","t","input","maxLength","type","inputProps","min","max","dateFormat","Button","variant","window","relativeTime","helperText","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","defaultBooleanColorFalse","defaultNonBooleanText","FormControl","InputLabel","Select","language","MenuItem","FormControlLabel","control","Checkbox","checked","icons","duration","renderToast","minHeight","minWidth","spacing","button","card","maxWidth","textAlign","media","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","AddEventDialog","showTime","event","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","buttonIcon","disabled","IconPicker","textFieldWithButton","AddIdDialog","onStateChanged","unit","eventDefault","states","icon","changesOnly","showSelectId","unknownId","simulateState","exists","confirmExit","confirmRemove","getLanguage","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","newState","changed","JSON","parse","stringify","trueState","find","item","original","push","falseState","newVal","defText","defColor","defIcon","Array","nState","forEach","i","objStates","parseStates","Object","keys","attr","_st","readTypeTimer","clearTimeout","setTimeout","getObject","obj","getName","custom","newSettings","addBooleanStates","addNumericStates","getSettings","catch","subscribe","en","_id","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","selected","themeName","themeType","word","lang","translations","w","stateVal","undefined","defaultBooleanIconTrue","defaultBooleanIconFalse","startsWith","includes","split","shift","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","duration2text","settings","enabled","it","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","title","ok","cancel","isYes","removeSettings","narrowWidth","isBoolean","Accordion","AccordionSummary","expandIcon","Typography","heading","toUpperCase","AccordionDetails","Paper","paper","field","error","clsx","examplePaper","exampleTitle","exampleText","getExampleColor","src","getExampleIcon","alt","exampleIcon","buildExample","Switch","formControl","map","renderStateSettings","renderState","writeSettings","renderSelectId","renderConfirmExit","renderConfirmRemove","withWidth","palette","marginLeft","maxHeight","SelectStateDialog","ids","reading","filter","promises","readIds","Promise","resolve","reject","getRawSocket","emit","startkey","endkey","err","res","rows","length","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","getSelectIdIcon","ListItem","ListItemIcon","emptyIcon","ListItemText","primary","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","dialogContent","dense","renderListItem","main","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","stateId","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","localStorage","getItem","editAvailable","showEditButton","showDeleteConfirm","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","component","tdIcons","headCell","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","location","pathname","now","focus","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","toolbarButton","Fab","selectStateShow","toolbarButtonText","setItem","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","sort","descendingComparator","selectedIndex","indexOf","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","result","deleteEntries","AddEvent","AddId","renderToolbar","renderList","LinearProgress","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","light","dark","flex","border","clip","whiteSpace","lineHeight","SETTINGS","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","textColor","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","PdfSettings","expanded","random","triggerTimer","lastElement","ex","pos","splice","onExpand","content","accordionContent","onFocus","noCheckbox","assign","Grid","xs","md","lg","renderPageHeader","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderSettingsTitle","renderPageNumbers","renderPageMargins","renderSettingsText","iframePdfLandscape","messageText","container","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","Messengers","showHint","telegramInstances","whatsappInstances","getAdapterInstances","telegram","whatsapp","pop","telegramUser","whatsappPhone","renderTelegram","renderWhatsApp","renderMessage","renderError","App","extendedProps","require","bottomButtons","port","isTab","selectedTab","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","GenericApp","Boolean","hostname","match","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.383dfd23.chunk.js","sourcesContent":["/**\r\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\r\n *\r\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n **/\r\nimport React from 'react';\r\nimport {ChromePicker} from 'react-color';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\n\r\nconst styles = theme => ({\r\n    color: {\r\n        width: 36,\r\n        height: 14,\r\n        borderRadius: 2,\r\n    },\r\n    delButton: {\r\n        //width: 32,\r\n        //height: 32,\r\n        marginTop: 16,\r\n    },\r\n    swatch: {\r\n        marginTop: 16,\r\n        padding: 5,\r\n        background: '#fff',\r\n        borderRadius: 1,\r\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'middle'\r\n    },\r\n    popover: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n    },\r\n    cover: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    }\r\n});\r\n\r\nclass ColorPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            color: this.props.color,\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const pColor = ColorPicker.getColor(props.color);\r\n        const sColor = ColorPicker.getColor(state.color);\r\n        if (pColor !== sColor) {\r\n            return {color: props.color}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({displayColorPicker: !this.state.displayColorPicker});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false});\r\n    };\r\n\r\n    static getColor(color) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n            } else {\r\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n            }\r\n        } else {\r\n            return color || '';\r\n        }\r\n    }\r\n\r\n    handleChange = color => {\r\n        this.setState({color});\r\n        this.props.onChange && this.props.onChange(ColorPicker.getColor(color));\r\n    };\r\n\r\n    render() {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        return <div style={this.props.style}>\r\n            <TextField\r\n                id=\"name\"\r\n                style={{width: 'calc(100% - 80px)'}}\r\n                label={this.props.name || 'color'}\r\n                value={color}\r\n                margin=\"dense\"\r\n                classes={{root: this.props.classes.textDense}}\r\n                onChange={e => this.handleChange(e.target.value)}\r\n            />\r\n            <IconButton\r\n                onClick={() => this.handleChange('')}\r\n                size=\"small\"\r\n                className={this.props.classes.delButton}\r\n                style={color ? {} : {opacity: 0, cursor: 'default'}}\r\n            ><IconDelete/></IconButton>\r\n            <div className={this.props.classes.swatch} onClick={() => this.handleClick()}>\r\n                <div className={this.props.classes.color}\r\n                     style={{background: color}} />\r\n            </div>\r\n            { this.state.displayColorPicker ? <div className={this.props.classes.popover}>\r\n                <div className={this.props.classes.cover} onClick={() => this.handleClose()}/>\r\n                <ChromePicker color={ this.state.color } onChangeComplete={color => this.handleChange(color)} />\r\n            </div> : null }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nColorPicker.propTypes = {\r\n    color: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    style: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(ColorPicker);\r\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdHelp as IconHelp} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport ColorPicker from '../Components/ColorPicker';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300,\n        marginRight: theme.spacing(2),\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n\n        this.props.socket.getState(this.aliveId).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    render() {\n        return (\n            <form className={ this.props.classes.tab }>\n                <Logo\n                    instance={ this.props.instance }\n                    common={ this.props.common }\n                    native={ this.props.native }\n                    onError={ text => this.setState({errorText: text}) }\n                    onLoad={ this.props.onLoad }\n                />\n                <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                    <TextField\n                        label={ I18n.t('Max list length') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.maxLength }\n                        type=\"number\"\n                        inputProps={{min: 1, max: 1000}}\n                        onChange={ e => this.props.onChange('maxLength', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Date format') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.dateFormat }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('dateFormat', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"contained\" onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}><IconHelp/>{I18n.t('Format description')}</Button>\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Show absolute time after seconds') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.relativeTime }\n                        type=\"number\"\n                        inputProps={{min: 0, max: 140000}}\n                        onChange={ e => this.props.onChange('relativeTime', e.target.value) }\n                        helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for boolean') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default text by TRUE') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanTextTrue }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        label={ I18n.t('Default text by FALSE') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanTextFalse }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <ColorPicker\n                        color={this.props.native.defaultBooleanColorTrue}\n                        style={{width: 300, display: 'inline-block', marginRight: 16}}\n                        name={I18n.t('Default color by TRUE')}\n                        onChange={color => this.setState({defaultBooleanColorTrue: color})}\n                    />\n                    <ColorPicker\n                        color={this.state.defaultBooleanColorFalse}\n                        style={{width: 300, display: 'inline-block'}}\n                        name={I18n.t('Default color by FALSE')}\n                        onChange={color => this.setState({defaultBooleanColorFalse: color})}\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for non boolean states') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultNonBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for non boolean states') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultNonBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <FormControl className={this.props.classes.input}>\n                        <InputLabel>{I18n.t('Language')}</InputLabel>\n                        <Select\n                            value={this.props.native.language || 'system'}\n                            onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\n                        >\n                            <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\n                            <MenuItem value=\"en\">English</MenuItem>\n                            <MenuItem value=\"de\">Deutsch</MenuItem>\n                            <MenuItem value=\"ru\">русский</MenuItem>\n                            <MenuItem value=\"pt\">Portugues</MenuItem>\n                            <MenuItem value=\"nl\">Nederlands</MenuItem>\n                            <MenuItem value=\"fr\">français</MenuItem>\n                            <MenuItem value=\"it\">Italiano</MenuItem>\n                            <MenuItem value=\"es\">Espanol</MenuItem>\n                            <MenuItem value=\"pl\">Polski</MenuItem>\n                            <MenuItem value=\"zh-cn\">简体中文</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <br/>\n                    <FormControlLabel\n                        control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\n                        label={I18n.t('Show icons in the list')}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\n                        label={I18n.t('Show duration in the list')}\n                    />\n                </div>\n                { this.renderToast() }\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n});\r\n\r\nclass IconPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value || '',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <TextField\r\n            margin=\"dense\"\r\n            label={this.props.label || I18n.t('Icon')}\r\n            value={this.state.value}\r\n            onChange={e => this.setState({value: e.target.value})}\r\n            type=\"text\"\r\n            className={this.props.classes.textField}\r\n        />;\r\n    }\r\n}\r\n\r\nIconPicker.propTypes = {\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IconPicker);","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport IconPicker from '../Components/IconPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n\r\n            states: null,\r\n            color: '',\r\n            icon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n\r\n            simulateState: '',\r\n            exists: false,\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n        };\r\n\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings();\r\n                } else {\r\n                    this.setState({showSelectId: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true'};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false'};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = this.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: ''};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;\r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readSettings(id) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type:      (obj && obj.common && obj.common.type) || '',\r\n                        unknownId: !obj || !obj.common || !obj.common.type,\r\n                        name:      this.getName(obj),\r\n                        unit:      (obj && obj.common && obj.common.unit) || ''\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n\r\n                        newState.event        = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n                        newState.icon         = newSettings.icon;\r\n                        newState.color        = newSettings.color;\r\n                        newState.states       = newSettings.states;\r\n\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    } else {\r\n                        newState.exists = false;\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    }\r\n\r\n                    this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: ''}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    static getColor(color) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n            } else {\r\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n            }\r\n        } else {\r\n            return color || '';\r\n        }\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? AddIdDialog.getColor(this.props.native.defaultBooleanColorTrue) : AddIdDialog.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && AddIdDialog.getColor(item.color)) {\r\n                color = AddIdDialog.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.color && AddIdDialog.getColor(this.state.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.icon;\r\n        let icon = defIcon || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item.defIcon) {\r\n                icon = stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse;\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        if (icon) {\r\n            if (!icon.startsWith('data:')) {\r\n                if (icon.includes('.')) {\r\n                    icon = '/adapter/' + this.state.id.split('.').shift() + '/' + icon;\r\n                } else {\r\n                    icon = '';\r\n                }\r\n            }\r\n        }\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.type === 'boolean' ? false : null);\r\n        if (this.state.states) {\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n            if (this.state.states) {\r\n                if (!this.state.eventDefault && !this.state.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly\r\n        };\r\n        if (this.state.color && AddIdDialog.getColor(this.state.color)) {\r\n            settings.color = AddIdDialog.getColor(this.state.color);\r\n        }\r\n        if (this.state.icon) {\r\n            settings.icon = this.state.icon;\r\n        }\r\n        this.state.states && this.state.states.forEach(item => {\r\n            settings.states = settings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && AddIdDialog.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : AddIdDialog.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && AddIdDialog.getColor(item.color))  {\r\n                    it.color = AddIdDialog.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            settings.states.push(it);\r\n        });\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        return <Accordion key={state.val}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <b>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</b></Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].color = color;\r\n                                this.setState({states});\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].icon = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        return <Accordion>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={this.state.eventDefault}\r\n                            onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                        }\r\n                        label={I18n.t('Default text')}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.eventDefault ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.event}\r\n                        onChange={e => this.setState({event: e.target.value})}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        color={this.state.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        onChange={color => this.setState({color})}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.icon}\r\n                        onChange={e => this.setState({icon: e.target.value})}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: this.getExampleColor() || undefined}}>\r\n                            {this.props.native.icon ? <img src={this.getExampleIcon()} alt=\"event\" className={this.props.classes.exampleIcon}/>: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={!!this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                        {this.state.type === 'number' && this.state.states ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControl className={this.props.classes.formControl}>\r\n                                    <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                    <Select\r\n                                        value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                    >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current')}</MenuItem>\r\n                                    {this.state.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                                </FormControl>\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <>\r\n                        <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                    </> : null}\r\n                {this.state.id     ? this.renderStateSettings() : null }\r\n                {this.state.states ? this.state.states.map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}</Button>\r\n                {this.state.exists ? <Button\r\n                    disabled={!this.state.id || !this.state.type}\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || (this.state.exists && JSON.stringify(this.originalSettings) === JSON.stringify(this.getSettings()))}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.8,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <ListItemIcon><AddIcon /></ListItemIcon>\r\n                        <ListItemText primary={I18n.t('Add new state')} classes={{primary: this.props.classes.newState}}/>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddId} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showAddIdDialog: false,\r\n            showAddEventDialog: false,\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {\r\n                    this.props.native.icons ? <TableCell\r\n                        component=\"th\"\r\n                        className={this.props.classes.tdIcons}\r\n                        align=\"left\"\r\n                        padding=\"none\"\r\n                    /> : null\r\n                }\r\n\r\n                {this.headCells.map(headCell => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        className={this.props.classes['td' + headCell.id[0].toUpperCase() + headCell.id.substring(1)]}\r\n                        align={headCell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === headCell.id}\r\n                            direction={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {this.state.orderBy === headCell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => this.setState({showAddIdDialog: this.state.selectedId})}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" onClick={() => this.setState({selectStateShow: true})}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.selectStateShow) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    this.setState({showAddIdDialog: id, selectStateShow: false});\r\n                } else {\r\n                    this.setState({selectStateShow: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n                <Table\r\n                    className={this.props.classes.table}\r\n                    size=\"small\"\r\n                >\r\n                    {this.renderHeader()}\r\n                    <TableBody>\r\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                            .map((row, index) => {\r\n                                const isItemSelected = this.state.selected.includes(row._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return <TableRow\r\n                                    hover\r\n                                    onClick={() => this.handleClick(row._id)}\r\n                                    style={row._style || undefined}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row._id}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>}\r\n                                    {this.props.native.icons ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                            {row.icon ? <img src={row.icon} width={28} height={28} alt=\"\"/> : null}</TableCell>\r\n                                        : null}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                    {this.props.native.duration ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\r\n                                            {row.duration || ''}</TableCell>\r\n                                        : null}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                                e.stopPropagation();\r\n                                                this.setState({showAddIdDialog: row.stateId})\r\n                                            }}><IconEdit/></IconButton>\r\n                                        </Tooltip>: null}\r\n                                    </TableCell>}\r\n                                </TableRow>;\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper className={ this.props.classes.tab }>\r\n                {this.renderToolbar()}\r\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n                {this.renderToast()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderAddEventDialog()}\r\n                {this.renderAddIdDialog()}\r\n                {this.renderSelectState()}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ColorPicker from '../Components/ColorPicker';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 130,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    this.lastElement.focus();\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        const expanded = [...this.state.expanded];\r\n        if (ex) {\r\n            !expanded.includes(name) && expanded.push(name);\r\n        } else {\r\n            const pos = expanded.indexOf(name);\r\n            pos !== -1 && expanded.splice(pos, 1);\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <FormControlLabel\r\n                key=\"pdfButton\"\r\n                control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                label={I18n.t('Show PDF generate button on list')}\r\n            />\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={'/files/eventlist/report.pdf?q=' + this.state.random} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogError from \"@iobroker/adapter-react/Dialogs/Error\";\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 150,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n});\r\n\r\nclass Messengers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.messangers') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            showHint: false,\r\n            toast: '',\r\n            errorText: '',\r\n            messageText: '',\r\n            telegramInstances: [],\r\n            whatsappInstances: [],\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n        this.props.socket.getAdapterInstances('telegram')\r\n            .then(telegram => this.props.socket.getAdapterInstances('whatsapp-cmb')\r\n                .then(whatsapp => {\r\n                    this.setState({telegramInstances: telegram.map(item => item._id.split('.').pop()), whatsappInstances: whatsapp.map(item => item._id.split('.').pop())});\r\n                }));\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        }\r\n        return <DialogError text={this.state.errorText} title={I18n.t('Error')} onClose={() => this.setState({errorText: ''})}/>;\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) {\r\n            return null;\r\n        }\r\n        return <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />;\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        const expanded = [...this.state.expanded];\r\n        if (ex) {\r\n            !expanded.includes(name) && expanded.push(name);\r\n        } else {\r\n            const pos = expanded.indexOf(name);\r\n            pos !== -1 && expanded.splice(pos, 1);\r\n        }\r\n        window.localStorage.setItem('eventlist.app.messangers', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderTelegram() {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('telegram')}\r\n            onChange={(event, ex) => this.onExpand('telegram', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: this.props.classes.accordionContent}}>Telegram</AccordionSummary>\r\n            <AccordionDetails>\r\n                <FormControl className={this.props.classes.field}>\r\n                    <InputLabel>{I18n.t('Instance')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.telegram || 'none'}\r\n                        onChange={e => this.props.onChange('telegram', e.target.value === 'none' ? '' : e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"none\">{I18n.t('Disabled')}</MenuItem>\r\n                        {this.state.telegramInstances.map(i => <MenuItem value={i.toString()}>telegram.{i}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                {this.props.native.telegram !== '' && this.props.native.telegram !== null && this.props.native.telegram !== undefined && <TextField\r\n                    key=\"telegramUser\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Telegram user')}\r\n                    value={this.props.native.telegramUser}\r\n                    onChange={e => this.props.onChange('telegramUser', e.target.value)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    }\r\n\r\n    renderWhatsApp() {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('whatsapp')}\r\n            onChange={(event, ex) => this.onExpand('whatsapp', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: this.props.classes.accordionContent}}>WhatsApp</AccordionSummary>\r\n            <AccordionDetails>\r\n                <FormControl className={this.props.classes.field}>\r\n                    <InputLabel>{I18n.t('Instance')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.whatsapp || 'none'}\r\n                        onChange={e => this.props.onChange('whatsapp', e.target.value === 'none' ? '' : e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"none\">{I18n.t('Disabled')}</MenuItem>\r\n                        {this.state.whatsappInstances.map(i => <MenuItem value={i.toString()}>whatsapp-cmb.{i}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                {this.props.native.whatsapp !== '' && this.props.native.whatsapp !== null && this.props.native.whatsapp !== undefined && <TextField\r\n                    key=\"whatsappPhone\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('WhatsApp phone')}\r\n                    value={this.props.native.whatsappPhone}\r\n                    onChange={e => this.props.onChange('whatsappPhone', e.target.value)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                {this.renderTelegram()}\r\n                {this.renderWhatsApp()}\r\n                {this.renderToast()}\r\n                {this.renderMessage()}\r\n                {this.renderError()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nMessengers.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Messengers);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\nimport TabMessengers from './Tabs/Messengers';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'messengers') {\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                    <Tab label={I18n.t('Messengers')} data-name=\"messengers\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'messengers' && <TabMessengers\r\n                    key=\"messengers\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}