{"version":3,"sources":["assets/telegram.svg","assets/pushover.svg","Components/ColorPicker.js","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","Components/IconPicker.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ColorPicker","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","onChange","getColor","divRef","React","createRef","this","style","openAbove","top","Object","assign","position","className","ref","TextField","disabled","id","width","label","name","value","margin","classes","root","textDense","e","target","IconButton","onClick","size","delButton","opacity","cursor","swatch","background","popover","cover","onChangeComplete","isHex","rgb","r","toString","padStart","g","b","a","rgb2hex","m","match","length","parseInt","Component","withStyles","theme","height","borderRadius","marginTop","padding","boxShadow","display","verticalAlign","zIndex","right","bottom","left","marginBottom","MessengerSelect","selected","instances","adapterName","loadedAdapterName","names","loadData","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","map","item","title","common","titleLang","en","_id","split","pop","setTimeout","FormControl","formControl","InputLabel","t","Select","multiple","event","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","i","MenuItem","key","Checkbox","checked","includes","ListItemText","primary","CircularProgress","Options","onAliveChanged","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","aria-label","close","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","maxLength","type","inputProps","min","max","dateFormat","Button","variant","buttonFormat","buttonIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","icons","duration","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","button","card","maxWidth","textAlign","media","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","whiteSpace","AddEventDialog","showTime","ts","parseFloat","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","IconPicker","textFieldWithButton","AddIdDialog","onStateChanged","unit","eventDefault","alarmsOnly","defaultMessengers","messagesInAlarmsOnly","whatsAppCMB","pushover","telegram","states","icon","changesOnly","showSelectId","unknownId","simulateState","exists","confirmExit","confirmRemove","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","newState","changed","trueState","find","original","falseState","newVal","defText","defColor","defIcon","Array","nState","forEach","objStates","parseStates","keys","attr","_st","readTypeTimer","clearTimeout","getObject","obj","getName","custom","newSettings","undefined","addBooleanStates","addNumericStates","getSettings","catch","subscribe","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","word","lang","translations","w","stateVal","defaultBooleanIconTrue","defaultBooleanIconFalse","startsWith","shift","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","duration2text","settings","enabled","it","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","ok","cancel","isYes","removeSettings","isBoolean","toUpperCase","flex","Paper","paper","count","messengers","src","Telegram","alt","messengersIcon","clsx","whatsAppIcon","Pushover","field","error","examplePaper","exampleTitle","exampleText","getExampleColor","getExampleIcon","exampleIcon","buildExample","Switch","renderStateSettings","renderState","renderMessengers","writeSettings","renderSelectId","renderConfirmExit","renderConfirmRemove","withWidth","palette","marginLeft","flexGrow","SelectStateDialog","ids","reading","filter","promises","readIds","Promise","resolve","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","getSelectIdIcon","ListItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","dialogContent","dense","renderListItem","main","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","stateId","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","showEditButton","showDeleteConfirm","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","component","tdIcons","headCell","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","location","pathname","now","focus","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","toolbarButton","Fab","buttonAddState","selectStateShow","toolbarButtonText","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","result","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","LinearProgress","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","light","dark","border","clip","lineHeight","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","textColor","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","PdfSettings","random","triggerTimer","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","toggleOrientation","fieldWide","onFocus","Grid","xs","md","lg","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","container","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","selectedTab","RGB2hex","savedNative","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12c4d448.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telegram.629c958a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pushover.f4e27e9f.svg\";","/**\r\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\r\n *\r\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n **/\r\nimport React from 'react';\r\nimport {ChromePicker} from 'react-color';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\n\r\nconst styles = theme => ({\r\n    color: {\r\n        width: 36,\r\n        height: 14,\r\n        borderRadius: 2,\r\n    },\r\n    delButton: {\r\n        //width: 32,\r\n        //height: 32,\r\n        marginTop: 16,\r\n    },\r\n    swatch: {\r\n        marginTop: 16,\r\n        padding: 5,\r\n        background: '#fff',\r\n        borderRadius: 1,\r\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'middle'\r\n    },\r\n    popover: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n    },\r\n    cover: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    }\r\n});\r\n\r\nclass ColorPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            color: this.props.color,\r\n        };\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const pColor = ColorPicker.getColor(props.color);\r\n        const sColor = ColorPicker.getColor(state.color);\r\n        if (pColor !== sColor) {\r\n            return {color: props.color}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({displayColorPicker: !this.state.displayColorPicker});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false});\r\n    };\r\n\r\n    static getColor(color, isHex) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                if (isHex) {\r\n                    return '#' + color.rgb.r.toString(16).padStart(2, '0') + color.rgb.g.toString(16).padStart(2, '0') + color.rgb.b.toString(16).padStart(2, '0');\r\n                } else {\r\n                    return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n                }\r\n            } else {\r\n                if (isHex) {\r\n                    return '#' + color.r.toString(16).padStart(2, '0') + color.g.toString(16).padStart(2, '0') + color.b.toString(16).padStart(2, '0');\r\n                } else {\r\n                    return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n                }\r\n            }\r\n        } else {\r\n            return isHex ? ColorPicker.rgb2hex(color || '') : color || '';\r\n        }\r\n    }\r\n\r\n    static rgb2hex(rgb){\r\n        const m = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n\r\n        return m && m.length === 4 ? '#' +\r\n            parseInt(m[1],10).toString(16).padStart(2, '0') +\r\n            parseInt(m[2],10).toString(16).padStart(2, '0') +\r\n            parseInt(m[3],10).toString(16).padStart(2, '0') : rgb;\r\n    }\r\n\r\n    handleChange = color => {\r\n        this.setState({color});\r\n        this.props.onChange && this.props.onChange(ColorPicker.getColor(color));\r\n    };\r\n\r\n    render() {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        let style = {};\r\n        if (this.state.displayColorPicker && this.props.openAbove) {\r\n            style = {\r\n                top: -241,\r\n            }\r\n        }\r\n        return <div\r\n            style={Object.assign({}, this.props.style || {}, {position: 'relative'})}\r\n            className={ this.props.className || ''}\r\n            ref={this.divRef}\r\n        >\r\n            <TextField\r\n                disabled={this.props.disabled}\r\n                id=\"name\"\r\n                style={{width: 'calc(100% - 80px)'}}\r\n                label={this.props.name || 'color'}\r\n                value={color}\r\n                margin=\"dense\"\r\n                classes={{root: this.props.classes.textDense}}\r\n                onChange={e => this.handleChange(e.target.value)}\r\n            />\r\n            <IconButton\r\n                disabled={this.props.disabled}\r\n                onClick={() => this.handleChange('')}\r\n                size=\"small\"\r\n                className={this.props.classes.delButton}\r\n                style={color ? {} : {opacity: 0, cursor: 'default'}}\r\n            ><IconDelete/></IconButton>\r\n            <div className={this.props.classes.swatch} onClick={() => this.handleClick()}>\r\n                <div className={this.props.classes.color}\r\n                     style={{background: color}} />\r\n            </div>\r\n            { this.state.displayColorPicker && !this.props.disabled ? <div className={this.props.classes.popover} style={style}>\r\n                <div className={this.props.classes.cover} onClick={() => this.handleClose()}/>\r\n                <ChromePicker color={ this.state.color } onChangeComplete={color => this.handleChange(color)} />\r\n            </div> : null }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nColorPicker.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    color: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    openAbove: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles)(ColorPicker);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport MessengerSelect from  '../Components/MessengerSelect';\r\n//import IconPicker from '../Components/IconPicker';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        minWidth: 300,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    cannotUse: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n    },\r\n    hintUnsaved: {\r\n        fontSize: 12,\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    checkBoxLabel: {\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            inAction: false,\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            errorWithPercent: false,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n\r\n        this.props.socket.getState(this.aliveId).then(state =>\r\n            this.setState({isInstanceAlive: state && state.val}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <form className={ this.props.classes.tab }>\r\n            <Logo\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\r\n                <TextField\r\n                    label={ I18n.t('Max list length') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.maxLength }\r\n                    type=\"number\"\r\n                    inputProps={{min: 1, max: 1000}}\r\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Date format') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.dateFormat }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                        <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Format description')}\r\n                </Button>\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Show absolute time after seconds') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.relativeTime }\r\n                    type=\"number\"\r\n                    inputProps={{min: 0, max: 140000}}\r\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\r\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\r\n                    margin=\"normal\"\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\r\n                    label={I18n.t('Show icons in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\r\n                    label={I18n.t('Show duration in the list')}\r\n                />\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_boolean')}\r\n                    onChange={() => this.onToggle('state_boolean')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <TextField\r\n                            label={ I18n.t('Default event text for boolean') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanText }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\r\n                            margin=\"normal\"\r\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            label={ I18n.t('Default text by TRUE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextTrue }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <TextField\r\n                            label={ I18n.t('Default text by FALSE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextFalse }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        <br/>\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorTrue}\r\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                            name={I18n.t('Default color by TRUE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorFalse}\r\n                            style={{width: 300, display: 'inline-block'}}\r\n                            name={I18n.t('Default color by FALSE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <TextField\r\n                    label={ I18n.t('Default event text for non boolean states') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.defaultNonBooleanText }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\r\n                    margin=\"normal\"\r\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                />\r\n                <br/>\r\n                <FormControl className={this.props.classes.input}>\r\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.language || 'system'}\r\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\r\n                    >\r\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\r\n                        <MenuItem value=\"en\">English</MenuItem>\r\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\r\n                        <MenuItem value=\"ru\">русский</MenuItem>\r\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\r\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\r\n                        <MenuItem value=\"fr\">français</MenuItem>\r\n                        <MenuItem value=\"it\">Italiano</MenuItem>\r\n                        <MenuItem value=\"es\">Espanol</MenuItem>\r\n                        <MenuItem value=\"pl\">Polski</MenuItem>\r\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_messengers')}\r\n                    onChange={() => this.onToggle('state_messengers')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Telegram') }\r\n                            adapterName={'telegram'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultTelegram }\r\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('WhatsApp-CMB') }\r\n                            adapterName={'whatsapp-cmb'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultWhatsAppCMB }\r\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Pushover') }\r\n                            adapterName={'pushover'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultPushover }\r\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n});\r\n\r\nclass IconPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value || '',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <TextField\r\n            margin=\"dense\"\r\n            label={this.props.label || I18n.t('Icon')}\r\n            value={this.state.value}\r\n            onChange={e => this.setState({value: e.target.value})}\r\n            type=\"text\"\r\n            className={this.props.classes.textField}\r\n        />;\r\n    }\r\n}\r\n\r\nIconPicker.propTypes = {\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IconPicker);","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\r\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\r\nimport Telegram from '../assets/telegram.svg';\r\nimport Pushover from '../assets/pushover.svg';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport IconPicker from '../Components/IconPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    flex: {\r\n        flexGrow: 1,\r\n    },\r\n    messengersIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    whatsAppIcon: {\r\n        color: '#45c655'\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\nconst DISABLED_TEXT = '-------------';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n            alarmsOnly: false,\r\n\r\n            defaultMessengers: true,\r\n            messagesInAlarmsOnly: false,\r\n            whatsAppCMB: [],\r\n            pushover: [],\r\n            telegram: [],\r\n\r\n            states: null,\r\n            color: '',\r\n            icon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n            expanded,\r\n\r\n            simulateState: '',\r\n            exists: false,\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n        };\r\n\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings();\r\n                } else {\r\n                    this.setState({showSelectId: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = this.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;\r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readSettings(id) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type:        (obj && obj.common && obj.common.type) || '',\r\n                        unknownId:   !obj || !obj.common || !obj.common.type,\r\n                        name:        this.getName(obj),\r\n                        unit:        (obj && obj.common && obj.common.unit) || '',\r\n                        whatsAppCMB: [],\r\n                        pushover:    [],\r\n                        telegram:    [],\r\n                        event:       '',\r\n                        icon:        '',\r\n                        color:       '',\r\n                        alarmsOnly:  false,\r\n                        messagesInAlarmsOnly: false,\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n\r\n                        newState.event        = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n                        newState.icon         = newSettings.icon;\r\n                        newState.color        = newSettings.color;\r\n                        newState.states       = newSettings.states;\r\n                        newState.alarmsOnly   = newSettings.alarmsOnly;\r\n                        newState.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                        newState.whatsAppCMB  = newSettings.whatsAppCMB || [];\r\n                        newState.pushover     = newSettings.pushover || [];\r\n                        newState.telegram     = newSettings.telegram || [];\r\n                        newState.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    } else {\r\n                        newState.defaultMessengers = true;\r\n                        newState.whatsAppCMB = this.props.native.defaultWhatsAppCMB || [];\r\n                        newState.pushover    = this.props.native.defaultPushover    || [];\r\n                        newState.telegram    = this.props.native.defaultTelegram    || [];\r\n\r\n                        newState.exists = false;\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    }\r\n\r\n                    this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: ''}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.color && ColorPicker.getColor(this.state.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.icon;\r\n        let icon = defIcon || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item.defIcon) {\r\n                icon = stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse;\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        if (icon) {\r\n            if (!icon.startsWith('data:')) {\r\n                if (icon.includes('.')) {\r\n                    icon = '/adapter/' + this.state.id.split('.').shift() + '/' + icon;\r\n                } else {\r\n                    icon = '';\r\n                }\r\n            }\r\n        }\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.type === 'boolean' ? false : null);\r\n        if (this.state.states) {\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.disabled) {\r\n                return DISABLED_TEXT;\r\n            }\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (valText === DISABLED_TEXT) {\r\n            return I18n.t('DISABLED');\r\n        }\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n            if (this.state.states) {\r\n                if (!this.state.eventDefault && !this.state.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly,\r\n            defaultMessengers: !!this.state.defaultMessengers\r\n        };\r\n        if (this.state.color && ColorPicker.getColor(this.state.color)) {\r\n            settings.color = ColorPicker.getColor(this.state.color);\r\n        }\r\n        if (this.state.icon) {\r\n            settings.icon = this.state.icon;\r\n        }\r\n        if (this.state.alarmsOnly) {\r\n            settings.alarmsOnly = true;\r\n        }\r\n        if (this.state.messagesInAlarmsOnly) {\r\n            settings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (this.state.pushover && this.state.pushover.length && !this.state.defaultMessengers) {\r\n            settings.pushover = this.state.pushover;\r\n        }\r\n        if (this.state.telegram && this.state.telegram.length && !this.state.defaultMessengers) {\r\n            settings.telegram = this.state.telegram;\r\n        }\r\n        if (this.state.whatsAppCMB && this.state.whatsAppCMB.length && !this.state.defaultMessengers) {\r\n            settings.whatsAppCMB = this.state.whatsAppCMB;\r\n        }\r\n\r\n        this.state.states && this.state.states.forEach(item => {\r\n            settings.states = settings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.disabled)  {\r\n                it.disabled = true;\r\n                return;\r\n            }\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            settings.states.push(it);\r\n        });\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\r\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</span></Typography>\r\n                <div className={this.props.classes.flex}/>\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={!!state.disabled}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].disabled = e.target.checked;\r\n                            this.setState({states});\r\n                        }} />\r\n                    }\r\n                    label={I18n.t('Disable logging')}\r\n                />\r\n            </AccordionSummary>\r\n            {!state.disabled && <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].color = color;\r\n                                this.setState({states});\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].icon = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={this.state.eventDefault}\r\n                            onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                        }\r\n                        label={I18n.t('Default text')}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.eventDefault ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.event}\r\n                        onChange={e => this.setState({event: e.target.value})}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={ this.state.type === 'number' ?\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\r\n                            :\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        color={this.state.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setState({color})}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.icon}\r\n                        onChange={e => this.setState({icon: e.target.value})}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const count = (this.state.telegram ? this.state.telegram.length : 0) +\r\n            (this.state.whatsAppCMB ? this.state.whatsAppCMB.length : 0) +\r\n            (this.state.pushover ? this.state.pushover.length : 0);\r\n        const messengers = !this.state.expanded.includes('state_messengers') ? [\r\n            this.state.telegram    && this.state.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.telegram.join(', ')    + ')'}</span>] : null,\r\n            this.state.whatsAppCMB && this.state.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.whatsAppCMB.join(', ') + ')'}</span>] : null,\r\n            this.state.pushover    && this.state.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.pushover.join(', ')    + ')'}</span>] : null,\r\n        ] : null;\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\r\n                    {messengers}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        disabled={this.state.alarmsOnly}\r\n                        checked={this.state.messagesInAlarmsOnly || this.state.alarmsOnly}\r\n                        onChange={e => this.setState({messagesInAlarmsOnly: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={this.state.defaultMessengers}\r\n                        onChange={e => this.setState({defaultMessengers: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({telegram: value})}\r\n                    selected={ this.state.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({whatsAppCMB: value})}\r\n                    selected={ this.state.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({pushover: value})}\r\n                    selected={ this.state.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        let val = '';\r\n        if (this.state.state && this.state.state.val) {\r\n            if (this.state.state.val === null || this.state.state.val === undefined) {\r\n                val = ' - --';\r\n            } else {\r\n                val = ' - ' + this.state.state.val.toString();\r\n            }\r\n        }\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: this.getExampleColor() || undefined}}>\r\n                            {this.props.native.icon ? <img src={this.getExampleIcon()} alt=\"event\" className={this.props.classes.exampleIcon}/>: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={!!this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                        {this.state.type === 'number' && this.state.states ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControl className={this.props.classes.formControl}>\r\n                                    <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                    <Select\r\n                                        value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                    >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\r\n                                    {this.state.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                                </FormControl>\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <>\r\n                        <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={!!this.state.alarmsOnly}\r\n                                onChange={e => this.setState({alarmsOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only in alarm state')}\r\n                        />\r\n                    </> : null}\r\n                {this.state.id     ? this.renderStateSettings() : null }\r\n                {this.state.states ? this.state.states.map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n                {this.state.id     ? this.renderMessengers(narrowWidth) : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}</Button>\r\n                {this.state.exists ? <Button\r\n                    disabled={!this.state.id || !this.state.type}\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || (this.state.exists && JSON.stringify(this.originalSettings) === JSON.stringify(this.getSettings()))}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.8,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <ListItemIcon><AddIcon /></ListItemIcon>\r\n                        <ListItemText primary={I18n.t('Add new state')} classes={{primary: this.props.classes.newState}}/>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    buttonAddState: {\r\n        minWidth: '120px !important',\r\n    },\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showAddIdDialog: false,\r\n            showAddEventDialog: false,\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {\r\n                    this.props.native.icons ? <TableCell\r\n                        component=\"th\"\r\n                        className={this.props.classes.tdIcons}\r\n                        align=\"left\"\r\n                        padding=\"none\"\r\n                    /> : null\r\n                }\r\n\r\n                {this.headCells.map(headCell => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        className={this.props.classes['td' + headCell.id[0].toUpperCase() + headCell.id.substring(1)]}\r\n                        align={headCell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === headCell.id}\r\n                            direction={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {this.state.orderBy === headCell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => this.setState({showAddIdDialog: this.state.selectedId})}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => this.setState({selectStateShow: true})}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.selectStateShow) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    this.setState({showAddIdDialog: id, selectStateShow: false});\r\n                } else {\r\n                    this.setState({selectStateShow: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n                <Table\r\n                    className={this.props.classes.table}\r\n                    size=\"small\"\r\n                >\r\n                    {this.renderHeader()}\r\n                    <TableBody>\r\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                            .map((row, index) => {\r\n                                const isItemSelected = this.state.selected.includes(row._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return <TableRow\r\n                                    hover\r\n                                    onClick={() => this.handleClick(row._id)}\r\n                                    style={row._style || undefined}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row._id}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>}\r\n                                    {this.props.native.icons ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                            {row.icon ? <img src={row.icon} width={28} height={28} alt=\"\"/> : null}</TableCell>\r\n                                        : null}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                    {this.props.native.duration ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\r\n                                            {row.duration || ''}</TableCell>\r\n                                        : null}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                                e.stopPropagation();\r\n                                                this.setState({showAddIdDialog: row.stateId})\r\n                                            }}><IconEdit/></IconButton>\r\n                                        </Tooltip>: null}\r\n                                    </TableCell>}\r\n                                </TableRow>;\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n                {this.renderToolbar()}\r\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n                {this.renderToast()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderAddEventDialog()}\r\n                {this.renderAddIdDialog()}\r\n                {this.renderSelectState()}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fieldWide: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        paddingRight: theme.spacing(1),\r\n        minWidth: 200,\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 130,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\r\n                Object.keys(settings).forEach(attr => {\r\n                    if (attr.toLowerCase().includes('color')) {\r\n                        if (typeof settings[attr] === 'object') {\r\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\r\n                        }\r\n                        if (settings[attr].startsWith('rgb')) {\r\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    try {\r\n                                        this.lastElement.focus();\r\n                                    } catch (e) {\r\n\r\n                                    }\r\n\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e && e.target) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        const expanded = [...this.state.expanded];\r\n        if (ex) {\r\n            !expanded.includes(name) && expanded.push(name);\r\n        } else {\r\n            const pos = expanded.indexOf(name);\r\n            pos !== -1 && expanded.splice(pos, 1);\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    toggleOrientation(orientation, e) {\r\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\r\n            const native = JSON.parse(JSON.stringify(this.props.native));\r\n            const pageWidth = native.pdfSettings.pageWidth;\r\n            const top = native.pdfSettings.margins.top;\r\n            const bottom = native.pdfSettings.margins.bottom;\r\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\r\n            native.pdfSettings.pageHeight = pageWidth;\r\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\r\n            native.pdfSettings.margins.left = top;\r\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\r\n            native.pdfSettings.margins.right = bottom;\r\n            native.pdfSettings.orientation = orientation;\r\n            this.props.updateNative(native);\r\n        }\r\n    }\r\n\r\n    renderPageSize(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('sizes')}\r\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControl className={this.props.classes.formControl}>\r\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                    <Select\r\n                        disabled={this.state.pdfInGeneration}\r\n                        value={settings.orientation || 'portrait'}\r\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\r\n                    >\r\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Width')}\r\n                    value={settings.pageWidth}\r\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Height')}\r\n                    value={settings.pageHeight}\r\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for first page')}\r\n                    value={settings.paddingTopFirst}\r\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for other pages')}\r\n                    value={settings.paddingTop}\r\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Padding left')}\r\n                    value={settings.paddingLeft}\r\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <FormControlLabel\r\n                key=\"pdfButton\"\r\n                control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                label={I18n.t('Show PDF generate button on list')}\r\n            />\r\n            {this.renderPageSize(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={'/files/eventlist/report.pdf?q=' + this.state.random} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    updateNative: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\nimport ColorPicker from './Components/ColorPicker';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n\r\n        Object.keys(native.pdfSettings).forEach(attr => {\r\n            if (attr.toLowerCase().includes('color')) {\r\n                if (typeof native.pdfSettings[attr] === 'object') {\r\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\r\n                }\r\n                if (native.pdfSettings[attr].startsWith('rgb')) {\r\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\r\n                }\r\n            }\r\n        });\r\n\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    updateNative(native, cb) {\r\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n        this.setState({native, changed}, cb);\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}