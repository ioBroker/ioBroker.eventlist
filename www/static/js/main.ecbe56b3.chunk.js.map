{"version":3,"sources":["assets/telegram.svg","assets/pushover.svg","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","Components/EditState.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MessengerSelect","props","state","selected","instances","adapterName","loadedAdapterName","names","loadData","this","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","map","item","title","common","titleLang","name","en","setState","_id","split","pop","setTimeout","length","FormControl","className","classes","formControl","style","InputLabel","label","t","Select","multiple","value","onChange","event","target","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","i","MenuItem","key","Checkbox","checked","includes","ListItemText","primary","CircularProgress","React","Component","withStyles","theme","Options","onAliveChanged","id","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","e","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","IconButton","aria-label","color","close","onClick","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","TextField","maxLength","type","inputProps","min","max","margin","dateFormat","Button","variant","buttonFormat","buttonIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","undefined","stateId","icons","duration","deleteAlarmsByDisable","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","display","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","openAbove","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","marginBottom","button","card","maxWidth","textAlign","media","height","verticalAlign","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","marginTop","whiteSpace","AddEventDialog","showTime","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","disabled","EditState","onStateChanged","settings","simulateState","imagePrefix","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","getSystemConfig","systemConfig","isFloatComma","word","lang","translations","w","ownColor","states","stateVal","find","defColor","ColorPicker","getColor","icon","ownIcon","defIcon","defaultBooleanIconTrue","defaultBooleanIconFalse","defText","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","eventDefault","unit","duration2text","fromNow","ms","withSpaces","Math","round","floor","hours","minutes","seconds","forEach","isBoolean","original","toUpperCase","flex","reading","setSettings","Paper","paper","root","textDense","attr","getSettings","width100minus32","count","telegram","whatsAppCMB","pushover","messengers","src","Telegram","alt","messengersIcon","clsx","whatsAppIcon","Pushover","alarmsOnly","messagesInAlarmsOnly","defaultMessengers","exampleColor","getExampleColor","Fragment","examplePaper","exampleTitle","exampleText","getExampleIcon","exampleIcon","buildExample","Switch","width100","changesOnly","iconOpenAll","iconCloseAll","renderStateSettings","a","b","renderState","renderMessengers","newState","changed","trueState","falseState","newVal","Array","nState","objStates","parseStates","Object","keys","_st","obj","parts","getObject","exists","getName","custom","newSettings","addBooleanStates","addNumericStates","extractIconAndColor","result","curSettings","enabled","it","withWidth","background","palette","marginLeft","padding","flexGrow","float","AddIdDialog","propsId","ids","currentId","showSelectId","confirmExit","confirmRemove","unknownIds","originalSettings","updateIds","cb","shift","setObject","writeSettings","ok","cancel","isYes","removeSettings","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","noWait","filter","trim","readTypeTimer","clearTimeout","readSettingsFromServer","console","error","tabs","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","field","unknownId","textFieldWithButton","LinearProgress","renderConfirmExit","renderConfirmRemove","renderSelectId","SelectStateDialog","promises","readIds","Promise","resolve","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","startsWith","getSelectIdIcon","ListItem","listItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","size","dialogContent","dense","renderListItem","dark","light","opacity","main","IconFilter","viewBox","xmlns","fill","stroke","d","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","filterStates","showEditButton","location","Router","getLocation","showDeleteConfirm","showSelectState","dialog","showAddIdDialog","showAddEventDialog","selectedId","stateIds","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","cell","component","tdIcons","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","pathname","now","focus","catch","serialPromises","_resolve","_results","filterDiv","filterIcon","filterClearIcon","filterControl","onOpen","filterCounts","filterSecondary","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","renderFilter","Tooltip","doNavigate","toolbarButton","Fab","buttonAddState","toolbarButtonText","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","handleClick","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","dr","assign","tdDurationRunning","editButton","stopPropagation","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","border","clip","position","top","animationName","animationDuration","animationIterationCount","lineHeight","cursor","left","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","bottom","right","PdfSettings","random","triggerTimer","rgb2hex","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","fieldWide","toggleOrientation","onFocus","Grid","xs","md","lg","container","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","isWeb","socketUrl","selectedTab","RGB2hex","savedNative","AppBar","getSelectedTab","parentNode","dataset","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","match","getThemeName","log","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecbe56b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telegram.629c958a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pushover.e000ae58.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\n\r\nimport MessengerSelect from  '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        minWidth: 300,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    cannotUse: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n    },\r\n    hintUnsaved: {\r\n        fontSize: 12,\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    checkBoxLabel: {\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            inAction: false,\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            errorWithPercent: false,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n\r\n        this.props.socket.getState(this.aliveId).then(state =>\r\n            this.setState({isInstanceAlive: state && state.val}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{'aria-describedby': 'message-id'}}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <form className={ this.props.classes.tab }>\r\n            <Logo\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\r\n                <TextField\r\n                    label={ I18n.t('Max list length') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.maxLength }\r\n                    type=\"number\"\r\n                    inputProps={{min: 1, max: 1000}}\r\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Date format') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.dateFormat }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                        <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Format description')}\r\n                </Button>\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Show absolute time after seconds') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.relativeTime }\r\n                    type=\"number\"\r\n                    inputProps={{min: 0, max: 140000}}\r\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\r\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\r\n                    margin=\"normal\"\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.stateId === undefined ? true : this.props.native.stateId} onChange={e => this.props.onChange('stateId', e.target.checked)} />}\r\n                    label={I18n.t('Show state ID in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\r\n                    label={I18n.t('Show icons in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\r\n                    label={I18n.t('Show duration in the list')}\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.deleteAlarmsByDisable || false} onChange={e => this.props.onChange('deleteAlarmsByDisable', e.target.checked)} />}\r\n                    label={I18n.t('Remove alarm events from list by the alarm mode deactivating')}\r\n                />\r\n\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_boolean')}\r\n                    onChange={() => this.onToggle('state_boolean')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <TextField\r\n                            label={ I18n.t('Default event text for boolean') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanText }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\r\n                            margin=\"normal\"\r\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            label={ I18n.t('Default text by TRUE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextTrue }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <TextField\r\n                            label={ I18n.t('Default text by FALSE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextFalse }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        <br/>\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorTrue}\r\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                            name={I18n.t('Default color by TRUE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorFalse}\r\n                            style={{width: 300, display: 'inline-block'}}\r\n                            name={I18n.t('Default color by FALSE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <TextField\r\n                    label={ I18n.t('Default event text for non boolean states') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.defaultNonBooleanText }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\r\n                    margin=\"normal\"\r\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                />\r\n                <br/>\r\n                <FormControl className={this.props.classes.input}>\r\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.language || 'system'}\r\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\r\n                    >\r\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\r\n                        <MenuItem value=\"en\">English</MenuItem>\r\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\r\n                        <MenuItem value=\"ru\">русский</MenuItem>\r\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\r\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\r\n                        <MenuItem value=\"fr\">français</MenuItem>\r\n                        <MenuItem value=\"it\">Italiano</MenuItem>\r\n                        <MenuItem value=\"es\">Espanol</MenuItem>\r\n                        <MenuItem value=\"pl\">Polski</MenuItem>\r\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_messengers')}\r\n                    onChange={() => this.onToggle('state_messengers')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Telegram') }\r\n                            adapterName={'telegram'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultTelegram }\r\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('WhatsApp-CMB') }\r\n                            adapterName={'whatsapp-cmb'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultWhatsAppCMB }\r\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Pushover') }\r\n                            adapterName={'pushover'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultPushover }\r\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\r\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\r\nimport Telegram from '../assets/telegram.svg';\r\nimport Pushover from '../assets/pushover.svg';\r\n\r\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: 'calc(100% - ' + theme.spacing(2) + 'px)',\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    flex: {\r\n        flexGrow: 1,\r\n    },\r\n    messengersIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    whatsAppIcon: {\r\n        color: '#45c655'\r\n    },\r\n    width100: {\r\n        width: '100%',\r\n    },\r\n    width100minus32: {\r\n        width: 'calc(100% - 32px)',\r\n    },\r\n    iconOpenAll: {\r\n        float: 'right',\r\n        marginRight: 4,\r\n    },\r\n    iconCloseAll: {\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\nconst DISABLED_TEXT = '-------------';\r\n\r\nclass EditState extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            settings: JSON.parse(JSON.stringify(this.props.settings)),\r\n            expanded,\r\n            simulateState: '',\r\n        };\r\n\r\n        this.imagePrefix = this.props.imagePrefix || './files';\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => this.isFloatComma = systemConfig.common.isFloatComma);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.props.id, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.props.id, this.onStateChanged);\r\n    }\r\n\r\n    static addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    static addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = EditState.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) =>\r\n        this.setState({state: state || null});\r\n\r\n    static extractIconAndColor(socket, obj) {\r\n        if (obj && obj.common && obj.common.icon) {\r\n            return {icon: obj.common.icon, color: obj.common.color};\r\n        } else {\r\n            const parts = obj._id.split('.');\r\n            parts.pop();\r\n\r\n            return socket.getObject(parts.join('.'))\r\n                .then(obj => {\r\n                    if (obj && obj.type === 'channel') {\r\n                        if (obj.common && obj.common.icon) {\r\n                            return {icon: obj.common.icon, color: obj.common.color};\r\n                        } else {\r\n                            const parts = obj._id.split('.');\r\n                            parts.pop();\r\n                            return socket.getObject(parts.join('.'))\r\n                                .then(obj => {\r\n                                    if (obj && (obj.type === 'channel' || obj.type === 'device')) {\r\n                                        if (obj.common && obj.common.icon) {\r\n                                            return {icon: obj.common.icon, color: obj.common.color};\r\n                                        } else {\r\n                                            return null;\r\n                                        }\r\n                                    } else {\r\n                                        return null;\r\n                                    }\r\n                                });\r\n                        }\r\n                    } else if (obj && obj.type === 'device' && obj.common) {\r\n                        return {icon: obj.common.icon, color: obj.common.color};\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    static readSettingsFromServer(socket, lang, native, namespace, id) {\r\n        return socket.getObject(id)\r\n            .then(obj => {\r\n                const settings = {\r\n                    type:        (obj && obj.common && obj.common.type) || '',\r\n                    name:        EditState.getName(obj, lang),\r\n                    unit:        (obj && obj.common && obj.common.unit) || '',\r\n                    whatsAppCMB: [],\r\n                    pushover:    [],\r\n                    telegram:    [],\r\n                    event:       '',\r\n                    icon:        '',\r\n                    color:       '',\r\n                    alarmsOnly:  false,\r\n                    messagesInAlarmsOnly: false,\r\n                };\r\n\r\n                let exists;\r\n\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[namespace]) {\r\n                    const newSettings = obj.common.custom[namespace];\r\n                    exists = true;\r\n\r\n                    settings.event                = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                    settings.eventDefault         = newSettings.event === DEFAULT_TEMPLATE;\r\n                    settings.icon                 = newSettings.icon;\r\n                    settings.color                = newSettings.color;\r\n                    settings.states               = newSettings.states;\r\n                    settings.alarmsOnly           = newSettings.alarmsOnly;\r\n                    settings.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                    settings.whatsAppCMB          = newSettings.whatsAppCMB || [];\r\n                    settings.pushover             = newSettings.pushover    || [];\r\n                    settings.telegram             = newSettings.telegram    || [];\r\n\r\n                    settings.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                    if (settings.type === 'boolean') {\r\n                        EditState.addBooleanStates(settings);\r\n                        settings.simulateState = false;\r\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                        EditState.addNumericStates(settings, obj.common.states);\r\n                        settings.simulateState = null;\r\n                    } else {\r\n                        settings.states = null;\r\n                        settings.simulateState = null;\r\n                    }\r\n                } else {\r\n                    settings.defaultMessengers = true;\r\n                    settings.whatsAppCMB = native.defaultWhatsAppCMB || [];\r\n                    settings.pushover    = native.defaultPushover    || [];\r\n                    settings.telegram    = native.defaultTelegram    || [];\r\n\r\n                    exists = false;\r\n                    if (settings.type === 'boolean') {\r\n                        EditState.addBooleanStates(settings);\r\n                        settings.simulateState = false;\r\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                        EditState.addNumericStates(settings, obj.common.states);\r\n                        settings.simulateState = null;\r\n                    } else {\r\n                        settings.states = null;\r\n                        settings.simulateState = null;\r\n                    }\r\n                }\r\n\r\n                return EditState.extractIconAndColor(socket, obj)\r\n                    .then(result => {\r\n                        if (result && result.icon) {\r\n                            // we must get from /icons/113_hmip-psm_thumb.png => /adapter/hm-rpc/icons/113_hmip-psm_thumb.png\r\n                            // or                                                  /hm-rpc.admin/icons/113_hmip-psm_thumb.png\r\n                            settings.ownIcon = `/adapter/${obj._id.split('.')[0]}${result.icon}`;\r\n                        }\r\n                        if (result && result.color) {\r\n                            settings.ownColor = result.color;\r\n                        }\r\n                        return {settings, exists};\r\n                    });\r\n            });\r\n    }\r\n\r\n    static getName(obj, lang) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[lang] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = this.state.ownColor || '';\r\n        if (this.state.settings.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.settings.color && ColorPicker.getColor(this.state.settings.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.settings.icon || this.state.ownIcon;\r\n        let icon = defIcon || '';\r\n        if (this.state.settings.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defIcon) {\r\n                icon = (stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse) || this.state.ownIcon || '';\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.settings.type === 'boolean' ? false : null);\r\n        if (this.state.settings.states) {\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.disabled) {\r\n                return DISABLED_TEXT;\r\n            }\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (valText === DISABLED_TEXT) {\r\n            return I18n.t('DISABLED');\r\n        }\r\n\r\n        if (this.state.settings.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.settings.eventDefault && !this.state.settings.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.settings.eventDefault && !this.state.settings.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.settings.event === DEFAULT_TEMPLATE || this.state.settings.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.settings.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.settings.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.settings.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.settings.unit) {\r\n                valWithUnit += this.state.settings.unit;\r\n            }\r\n            if (this.state.settings.states) {\r\n                if (!this.state.settings.eventDefault && !this.state.settings.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        if (eventTemplate.includes('%t')) {\r\n            eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n        }\r\n\r\n        if (eventTemplate.includes('%r')) {\r\n            eventTemplate = eventTemplate.replace(/%r/g, this.state.state ? moment(new Date(this.state.state.ts)).fromNow() : moment(new Date()).fromNow());\r\n        }\r\n\r\n        if (eventTemplate.includes('%o')) {\r\n            eventTemplate = eventTemplate.replace(/%o/g, '_');\r\n        }\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    static getSettings(settings) {\r\n        const curSettings = {\r\n            enabled: true,\r\n            event: settings.eventDefault ? DEFAULT_TEMPLATE : settings.event,\r\n            changesOnly: !!settings.changesOnly,\r\n            defaultMessengers: !!settings.defaultMessengers\r\n        };\r\n\r\n        if (settings.color && ColorPicker.getColor(settings.color)) {\r\n            curSettings.color = ColorPicker.getColor(settings.color);\r\n        }\r\n        if (settings.icon) {\r\n            curSettings.icon = settings.icon;\r\n        }\r\n        if (settings.alarmsOnly) {\r\n            curSettings.alarmsOnly = true;\r\n        }\r\n        if (settings.messagesInAlarmsOnly) {\r\n            curSettings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (settings.pushover && settings.pushover.length && !settings.defaultMessengers) {\r\n            curSettings.pushover = settings.pushover;\r\n        }\r\n        if (settings.telegram && settings.telegram.length && !settings.defaultMessengers) {\r\n            curSettings.telegram = settings.telegram;\r\n        }\r\n        if (settings.whatsAppCMB && settings.whatsAppCMB.length && !settings.defaultMessengers) {\r\n            curSettings.whatsAppCMB = settings.whatsAppCMB;\r\n        }\r\n\r\n        settings.states && settings.states.forEach(item => {\r\n            curSettings.states = curSettings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.disabled)  {\r\n                it.disabled = true;\r\n                curSettings.states.push(it);\r\n                return;\r\n            }\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            curSettings.states.push(it);\r\n        });\r\n\r\n        return curSettings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        let expanded;\r\n        if (id === false) {\r\n            expanded = [];\r\n        } else if (id === true) {\r\n            expanded = ['state_settings', 'state_messengers'];\r\n            this.state.settings.states && this.state.settings.states.forEach(state => expanded.push('state_' + state.val));\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            const pos = expanded.indexOf(id);\r\n            if (pos !== -1)  {\r\n                expanded.splice(pos, 1);\r\n            } else {\r\n                expanded.push(id);\r\n                expanded.sort();\r\n            }\r\n        }\r\n\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.settings.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\r\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</span></Typography>\r\n                <div className={this.props.classes.flex}/>\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        checked={!!state.disabled}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].disabled = e.target.checked;\r\n                            this.setSettings('states', states);\r\n                        }} />\r\n                    }\r\n                    label={I18n.t('Disable logging')}\r\n                />\r\n            </AccordionSummary>\r\n            {!state.disabled && <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        disabled={this.props.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setSettings('states', states);\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            disabled={this.props.reading}\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].color = color;\r\n                                this.setSettings('states', states);\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        disabled={this.props.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.props.id + this.state.settings.type + state.original}\r\n                        color={color}\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={icon => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].icon = icon;\r\n                            this.setSettings('states', states);\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    setSettings(attr, value) {\r\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\r\n        settings[attr] = value;\r\n        this.setState({settings}, () =>\r\n            this.props.onChange(this.props.id, EditState.getSettings(settings)));\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        const color = ColorPicker.getColor(this.state.settings.color);\r\n        const text = this.state.settings.eventDefault ? (this.state.settings.type === 'boolean' ? this.props.native.defaultBooleanText : this.props.native.defaultNonBooleanText) : this.state.settings.event || I18n.t('Use the specific state texts');\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{root: this.props.classes.width100minus32}}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}\r\n                    {!narrowWidth ? <span style={{color: color || undefined, fontStyle: 'italic'}}>{' - ' + text}</span> : null}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.settings.eventDefault}\r\n                            onChange={e => this.setSettings('eventDefault', e.target.checked)} />\r\n                        }\r\n                        label={<span>\r\n                            <span>{I18n.t('Default text')}</span>\r\n                        </span>}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.settings.eventDefault ? <TextField\r\n                        disabled={this.props.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.settings.event}\r\n                        onChange={e => this.setSettings('event', e.target.value)}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={ this.state.settings.type === 'number' ?\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\r\n                            :\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        disabled={this.props.reading}\r\n                        color={this.state.settings.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setSettings('color', color)}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        disabled={this.props.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.props.id + this.state.settings.type}\r\n                        color={this.state.settings.color}\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.settings.icon}\r\n                        onChange={icon => this.setSettings('icon', icon)}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const count = (this.state.settings.telegram ? this.state.settings.telegram.length : 0) +\r\n            (this.state.settings.whatsAppCMB ? this.state.settings.whatsAppCMB.length : 0) +\r\n            (this.state.settings.pushover ? this.state.settings.pushover.length : 0);\r\n\r\n        const messengers = [\r\n            this.state.settings.telegram    && this.state.settings.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.settings.telegram.join(', ')    + ')'}</span>] : null,\r\n            this.state.settings.whatsAppCMB && this.state.settings.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.settings.whatsAppCMB.join(', ') + ')'}</span>] : null,\r\n            this.state.settings.pushover    && this.state.settings.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.settings.pushover.join(', ')    + ')'}</span>] : null,\r\n        ];\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\r\n                    {messengers}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        disabled={!!this.state.settings.alarmsOnly}\r\n                        checked={!!(this.state.settings.messagesInAlarmsOnly || this.state.settings.alarmsOnly)}\r\n                        onChange={e => this.setSettings('messagesInAlarmsOnly', e.target.checked)} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        checked={this.state.settings.defaultMessengers}\r\n                        onChange={e => this.setSettings('defaultMessengers', e.target.checked)} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('telegram', value)}\r\n                    selected={ this.state.settings.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('whatsAppCMB', value)}\r\n                    selected={ this.state.settings.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('pushover', value)}\r\n                    selected={ this.state.settings.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        let val = '';\r\n        if (this.state.state && this.state.state.val) {\r\n            if (this.state.state.val === null || this.state.state.val === undefined) {\r\n                val = ' - --';\r\n            } else {\r\n                val = ' - ' + this.state.state.val.toString();\r\n            }\r\n        }\r\n\r\n        const exampleColor = this.getExampleColor() || undefined;\r\n\r\n        return <React.Fragment>\r\n\r\n            {this.state.settings.type ?\r\n                <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n                    <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                    <span className={this.props.classes.exampleText} style={{color: exampleColor}}>\r\n                        {this.props.native.icons ? <Image\r\n                            src={this.getExampleIcon()}\r\n                            className={this.props.classes.exampleIcon}\r\n                            color={exampleColor}\r\n                            imagePrefix={this.imagePrefix}\r\n                        />: null}\r\n                        {this.buildExample()}\r\n                    </span>\r\n                    {this.state.settings.type === 'boolean' ?\r\n                        <>\r\n                            <br/>\r\n                            <FormControlLabel\r\n                                disabled={this.props.reading}\r\n                                control={<Switch\r\n                                    checked={!!this.state.simulateState}\r\n                                    onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                }\r\n                                label={I18n.t('Toggle state to simulate')}\r\n                            />\r\n                        </>\r\n                        : null\r\n                    }\r\n                    {this.state.settings.type === 'number' && this.state.settings.states ?\r\n                        <>\r\n                            <br/>\r\n                            <FormControl className={this.props.classes.formControl} disabled={this.props.reading}>\r\n                                <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                <Select\r\n                                    value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                    onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\r\n                                    {this.state.settings.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </>\r\n                        : null\r\n                    }\r\n                </Paper>\r\n                : null }\r\n\r\n            {this.state.settings.type ?\r\n                <div className={this.props.classes.width100}>\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.settings.changesOnly}\r\n                            onChange={e => this.setSettings('changesOnly', e.target.checked)} />\r\n                        }\r\n                        label={I18n.t('Only changes')}\r\n                    />\r\n                    {narrowWidth && <br/>}\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={!!this.state.settings.alarmsOnly}\r\n                            onChange={e => this.setSettings('alarmsOnly', e.target.checked)} />\r\n                        }\r\n                        label={I18n.t('Only in alarm state')}\r\n                    />\r\n                    <IconButton disabled={this.state.expanded.length === (this.state.settings.states ? this.state.settings.states.length : 0 ) + 2} className={this.props.classes.iconOpenAll} onClick={() => this.onToggle(true)}><ExpandMoreIcon/></IconButton>\r\n                    <IconButton disabled={!this.state.expanded.length} className={this.props.classes.iconCloseAll} onClick={() => this.onToggle(false)}> <ExpandLessIcon/></IconButton>\r\n                </div> : null}\r\n            {this.renderStateSettings()}\r\n            {this.state.settings.states ? this.state.settings.states.sort((a, b) => a.val > b.val ? 1 : (a.val < b.val ? -1 : 0)).map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n            {this.renderMessengers(narrowWidth)}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nEditState.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    reading: PropTypes.bool,\r\n    settings: PropTypes.object,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(EditState));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport EditState from '../Components/EditState';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\n\r\nconst styles = theme => ({\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.propsId = this.props.id !== 'true' ? this.props.id : '';\r\n\r\n        this.state = {\r\n            ids: [],\r\n            currentId: this.propsId || '',\r\n            showSelectId: !this.propsId,\r\n            exists: {},\r\n            settings: {},\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n            unknownIds: {},\r\n        };\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.originalSettings = {};\r\n        setTimeout(() => this.updateIds(this.propsId, true), 100);\r\n    }\r\n\r\n    writeSettings(ids, cb) {\r\n        if (!ids || !ids.length) {\r\n            cb && cb();\r\n        } else {\r\n            const id = ids.shift();\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    if (obj && obj.common) {\r\n                        obj.common.custom = obj.common.custom || {};\r\n                        const newSettings = EditState.getSettings(this.state.settings[id] || {enabled: true, event: DEFAULT_TEMPLATE, changesOnly: true, defaultMessengers: true});\r\n                        // if changed\r\n                        if (JSON.stringify(newSettings) !== JSON.stringify(obj.common.custom[this.namespace])) {\r\n                            obj.common.custom[this.namespace] = newSettings;\r\n                            return this.props.socket.setObject(obj._id, obj)\r\n                                .then(() => setTimeout(() => this.writeSettings(ids, cb), 0));\r\n                        }\r\n                    }\r\n                    setTimeout(() => this.writeSettings(ids, cb), 0);\r\n                });\r\n        }\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.ids[0])\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.ids[0], obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.ids.find(id => JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]))) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            imagePrefix={'../..'}\r\n            showExpertButton={true}\r\n            multiSelect={true}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.ids}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={ids => this.updateIds(ids, true)}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    onChange(id, newSettings) {\r\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\r\n        settings[id] = JSON.parse(JSON.stringify(newSettings));\r\n        this.setState({settings});\r\n    }\r\n\r\n    updateIds(ids, noWait) {\r\n        const newState = {\r\n            ids: ids && typeof ids === 'object' ? ids.filter(id => id && id !== 'true') : (ids || '').split(',').map(id => id.trim()),\r\n        };\r\n\r\n        if (!this.state.currentId || !newState.ids.includes(this.state.currentId)) {\r\n            newState.currentId = newState.ids[0] || '';\r\n        }\r\n\r\n        this.setState(newState, () => {\r\n            if (this.state.ids.find(id => !this.state.settings[id])) {\r\n                this.readTypeTimer && clearTimeout(this.readTypeTimer);\r\n                this.setState({reading: true});\r\n\r\n                this.readTypeTimer = setTimeout(async () => {\r\n                    this.readTypeTimer = null;\r\n\r\n                    const newState = {\r\n                        settings: JSON.parse(JSON.stringify(this.state.settings)),\r\n                        exists:   JSON.parse(JSON.stringify(this.state.exists)),\r\n                        reading:  false,\r\n                    }\r\n\r\n                    // read all settings of all IDs\r\n                    for (let i = 0; i < this.state.ids.length; i++) {\r\n                        const id = this.state.ids[i];\r\n                        if (!newState.settings[id]) {\r\n                            try {\r\n                                const result = await EditState.readSettingsFromServer(\r\n                                    this.props.socket,\r\n                                    this.props.native.language || I18n.getLanguage(),\r\n                                    this.props.native, this.namespace,\r\n                                    id\r\n                                );\r\n\r\n                                this.originalSettings[id] = JSON.parse(JSON.stringify(result.settings));\r\n                                newState.settings[id]     = result.settings;\r\n                                newState.exists[id]       = result.exists;\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                this.originalSettings[id] = {type: '', name: '', unit: ''};\r\n                                newState.settings[id]     = {type: '', name: '', unit: ''};\r\n                                newState.exists[id]       = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.setState(newState);\r\n                }, noWait ? 0 : 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const changed = this.state.ids.find(id =>\r\n                !this.state.exists[id] || JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]));\r\n\r\n        const exists = this.state.ids.find(id => this.state.exists[id]);\r\n\r\n        let tabs = null;\r\n        if (this.state.ids.length > 1) {\r\n            tabs =\r\n                <Tabs\r\n                    value={this.state.ids.indexOf(this.state.currentId)}\r\n                    onChange={(event, newValue) => this.setState({currentId: this.state.ids[newValue]})}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {this.state.ids.map(id => <Tab label={id} />)}\r\n                </Tabs>\r\n        }\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{this.propsId ? I18n.t('Edit event') : I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        disabled={!!this.propsId}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.ids && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.ids.join(', ')}\r\n                        onChange={e => this.updateIds(e.target.value)}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    {!this.propsId ? <Button\r\n                        style={{marginTop: 8}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => this.setState({showSelectId: true})}\r\n                    >...</Button> : null}\r\n                </div>\r\n                {this.state.reading ? <LinearProgress/> : <div style={{height: 4, width: '100%'}}/>}\r\n                {tabs}\r\n                {this.state.settings[this.state.currentId] ? <EditState\r\n                    key={this.state.currentId}\r\n                    id={this.state.currentId}\r\n                    onChange={(id, settings) => this.onChange(id, settings)}\r\n                    instance={this.props.instance}\r\n                    reading={this.state.reading}\r\n                    adapterName={this.props.adapterName}\r\n                    themeName={this.props.themeName}\r\n                    themeType={this.props.themeType}\r\n                    socket={this.props.socket}\r\n                    imagePrefix={this.props.imagePrefix}\r\n                    native={this.props.native}\r\n                    settings={this.state.settings[this.state.currentId]}\r\n                /> : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{!changed ? I18n.t('Close') : I18n.t('Cancel')}</Button>\r\n                {this.state.exists[this.state.currentId] && this.state.ids.length === 1 ? <Button\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.ids.length || !changed}\r\n                    onClick={() =>\r\n                        this.writeSettings([...this.state.ids], () =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n            {this.renderSelectId()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AddIdDialog);","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listItem: {\r\n        padding: 3,\r\n        '&:hover': {\r\n            background: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light,\r\n        }\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.7,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <Button variant=\"contained\"><AddIcon />{I18n.t('Add new states')}</Button>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\nimport CircularProgress  from '@material-ui/core/CircularProgress';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconEvent from '@material-ui/icons/Event';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\n\r\n// Copyright Apache 2.0 https://raw.githubusercontent.com/material-icons/material-icons/master/svg/filter_alt/baseline.svg\r\n// https://github.com/material-icons/material-icons/blob/master/LICENSE\r\nclass IconFilter extends React.Component {\r\n    render() {\r\n        return <svg viewBox=\"0 0 24 24\" width={24} height={24} xmlns=\"http://www.w3.org/2000/svg\" className={ this.props.className }>\r\n            <path fill=\"currentColor\" stroke=\"currentColor\" d=\"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39A.998.998 0 0 0 18.95 4H5.04c-.83 0-1.3.95-.79 1.61z\"/>\r\n        </svg>;\r\n    }\r\n}\r\n\r\nfunction serialPromises(promises, _resolve, _results) {\r\n    if (!_resolve) {\r\n        return new Promise(resolve => serialPromises(promises, resolve, []));\r\n    } else if (!promises || !promises.length) {\r\n        _resolve(_results);\r\n    } else {\r\n        const prom = promises.shift();\r\n        prom.then(result => {\r\n            _results.push(result);\r\n            setTimeout(() => serialPromises(promises, _resolve, _results), 0);\r\n        });\r\n    }\r\n}\r\n\r\nconst COLOR_RUNNING_DURATION = '#59be78';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdDurationRunning: {\r\n        animationName: 'running',\r\n        animationDuration: '2s',\r\n        animationIterationCount: 'infinite'\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    buttonAddState: {\r\n        minWidth: '120px !important',\r\n    },\r\n    icon: {\r\n        width: 28,\r\n        height: 28,\r\n        verticalAlign: 'middle',\r\n    },\r\n    filterControl: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: 3,\r\n    },\r\n    filterDiv: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n    },\r\n    filterIcon: {\r\n\r\n    },\r\n    filterClearIcon: {\r\n        color: '#FF0000',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: 24,\r\n        height: 24,\r\n        opacity: 0.5,\r\n    },\r\n    filterCounts: {\r\n        fontSize: 10,\r\n        opacity: 0.7,\r\n        float: 'right',\r\n        marginTop: 16,\r\n    },\r\n    filterSecondary: {\r\n        opacity: 0.7,\r\n        fontSize: 'smaller',\r\n    }\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        let filterStates   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`) || null;\r\n        try {\r\n            filterStates = filterStates ? JSON.parse(filterStates) : [];\r\n        } catch (e) {\r\n            filterStates = [];\r\n        }\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        const location = Router.getLocation();\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            filterStates,\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showSelectState: location.dialog === 'selectState',\r\n            showAddIdDialog: location.dialog === 'addId' ? location.id || true : false,\r\n            showAddEventDialog: location.dialog === 'addEvent',\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n            stateIds: null,\r\n            isFloatComma: true,\r\n        };\r\n\r\n        this.imagePrefix    = this.props.imagePrefix || 'files/'; // by default is admin\r\n        this.aliveId        = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId    = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId   = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'icon'},\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {this.headCells.map(cell =>\r\n                    cell.id === 'icon' ?  (\r\n                            this.props.native.icons ? <TableCell\r\n                                key={cell.id}\r\n                                component=\"th\"\r\n                                className={this.props.classes.tdIcons}\r\n                                align=\"left\"\r\n                                padding=\"none\"\r\n                            /> : null\r\n                        )\r\n                    :\r\n                    <TableCell\r\n                        key={cell.id}\r\n                        className={this.props.classes['td' + cell.id[0].toUpperCase() + cell.id.substring(1)]}\r\n                        align={cell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === cell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === cell.id}\r\n                            direction={this.state.orderBy === cell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(cell.id)}\r\n                        >\r\n                            {cell.label}\r\n                            {this.state.orderBy === cell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                )}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    const promises = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                (id => promises.push(this.props.socket.getObject(id)\r\n                                    .then(obj => {\r\n                                        if (obj) {\r\n                                            let count = 0;\r\n                                            // count states\r\n                                            this.state.eventList.forEach(item => item.id === obj._id && count++);\r\n                                            ids.push({id: obj._id, name: Utils.getObjectNameFromObj(obj, I18n.getLanguage()), count});\r\n                                        }\r\n                                    })\r\n                                    .catch(e => ids.push({id}))\r\n                                ))(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    serialPromises(promises)\r\n                        .then(() => {\r\n                            ids.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0));\r\n                            resolve(ids);\r\n                        });\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    renderFilter() {\r\n        return <>\r\n            <div className={this.props.classes.filterDiv}\r\n                 title={I18n.t('Clear filter')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, '');\r\n                     this.setState({filterStates: []});\r\n                 }}\r\n            >\r\n                <IconFilter className={this.props.classes.filterIcon}/>\r\n                {this.state.filterStates.length ? <IconClose className={this.props.classes.filterClearIcon}/> : null}\r\n            </div>\r\n            <Select\r\n                className={this.props.classes.filterControl}\r\n                multiple\r\n                label={I18n.t('Filter by ID')}\r\n                value={this.state.filterStates}\r\n                onChange={event => {\r\n                    window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, JSON.stringify(event.target.value));\r\n                    this.setState({filterStates: event.target.value});\r\n                }}\r\n                //input={<Input placeholder={I18n.t('Filter by ID')}/>}\r\n                onOpen={() => this.readIds().then(ids => this.setState({stateIds: ids}))}\r\n                renderValue={selected => selected.length === 1 ? selected[0] : selected.length}\r\n            >\r\n                {!this.state.stateIds ?\r\n                    <MenuItem><CircularProgress /></MenuItem>\r\n                    :\r\n                    this.state.stateIds.map(item =>\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                            <Checkbox checked={this.state.filterStates.includes(item.id)} />\r\n                            <ListItemText\r\n                                primary={<span>{item.name} <span className={this.props.classes.filterCounts}>{item.count}</span></span>}\r\n                                secondary={item.id}\r\n                                classes={{secondary: this.props.classes.filterSecondary}}\r\n                            />\r\n                        </MenuItem>)\r\n                }\r\n            </Select>\r\n        </>;\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {!this.state.selected.length ? this.renderFilter() : null}\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => {\r\n                                Router.doNavigate(null, 'addId', this.state.selectedId);\r\n                                this.setState({showAddIdDialog: this.state.selectedId})\r\n                            }}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => {\r\n                            Router.doNavigate(null, 'selectState', '');\r\n                            this.setState({showSelectState: true});\r\n                        }}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        if (this.state.filterStates && this.state.filterStates.length) {\r\n            array = array.filter(item => this.state.filterStates.includes(item.id));\r\n        }\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.showSelectState) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    Router.doNavigate(null, 'addId', id);\r\n                    this.setState({showAddIdDialog: id, showSelectState: false});\r\n                } else {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showSelectState: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n            <Table\r\n                className={this.props.classes.table}\r\n                size=\"small\"\r\n            >\r\n                {this.renderHeader()}\r\n                <TableBody>\r\n                    {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                        .map((row, index) => {\r\n                            const isItemSelected = this.state.selected.includes(row._id);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return <TableRow\r\n                                hover\r\n                                onClick={() => this.handleClick(row._id)}\r\n                                style={row._style || undefined}\r\n                                role=\"checkbox\"\r\n                                aria-checked={isItemSelected}\r\n                                tabIndex={-1}\r\n                                key={row._id}\r\n                                selected={isItemSelected}\r\n                            >\r\n                                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        checked={isItemSelected}\r\n                                        inputProps={{ 'aria-labelledby': labelId }}\r\n                                    />\r\n                                </TableCell>}\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                {this.props.native.icons ?\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                        {row.icon ? (row.icon !== 'default' ? <IconEvent/> : <Image\r\n                                            imagePrefix={this.imagePrefix}\r\n                                            src={row.icon}\r\n                                            className={this.props.classes.icon}\r\n                                            color={(row._style && row._style.color) || ''}\r\n                                        />) : null}\r\n                                    </TableCell>\r\n                                    : null}\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                {this.props.native.duration ?\r\n                                    <TableCell style={row.dr ? Object.assign({}, row._style || {}, {color: COLOR_RUNNING_DURATION}) : row._style || undefined } className={clsx(row.dr && this.props.classes.tdDurationRunning, this.props.classes.tdDuration)} component=\"td\" padding=\"none\" align=\"right\">\r\n                                        {row.duration || ''}</TableCell>\r\n                                    : null}\r\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                    <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                        <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                            e.stopPropagation();\r\n                                            Router.doNavigate(null, 'addId', row.stateId);\r\n                                            this.setState({showAddIdDialog: row.stateId});\r\n                                        }}><IconEdit/></IconButton>\r\n                                    </Tooltip>: null}\r\n                                </TableCell>}\r\n                            </TableRow>;\r\n                        })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                imagePrefix={this.imagePrefix}\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n            {this.renderToolbar()}\r\n            {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n            {this.renderToast()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderAddEventDialog()}\r\n            {this.renderAddIdDialog()}\r\n            {this.renderSelectState()}\r\n        </Paper>;\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fieldWide: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        paddingRight: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    orientation: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fontSize: {\r\n        marginTop: -3,\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    titleText: {\r\n        width: 310,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 105,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list on {{YYYY MM DD H:mm:ss}}',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\r\n                Object.keys(settings).forEach(attr => {\r\n                    if (attr.toLowerCase().includes('color')) {\r\n                        if (typeof settings[attr] === 'object') {\r\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\r\n                        }\r\n                        if (settings[attr].startsWith('rgb')) {\r\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    try {\r\n                                        this.lastElement.focus();\r\n                                    } catch (e) {\r\n\r\n                                    }\r\n\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e && e.target) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        let expanded;\r\n        if (name === true) {\r\n            expanded = ['sizes', 'enabledTitle', 'enabledHeader', 'margins', 'text', 'enabledTime', 'enabledEvent', 'enabledValue', 'enabledDuration', 'pageNumberEnabled'];\r\n        } else if (name === false) {\r\n            expanded = [];\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            if (ex) {\r\n                !expanded.includes(name) && expanded.push(name);\r\n            } else {\r\n                const pos = expanded.indexOf(name);\r\n                pos !== -1 && expanded.splice(pos, 1);\r\n            }\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    toggleOrientation(orientation, e) {\r\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\r\n            const native = JSON.parse(JSON.stringify(this.props.native));\r\n            const pageWidth = native.pdfSettings.pageWidth;\r\n            const top = native.pdfSettings.margins.top;\r\n            const bottom = native.pdfSettings.margins.bottom;\r\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\r\n            native.pdfSettings.pageHeight = pageWidth;\r\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\r\n            native.pdfSettings.margins.left = top;\r\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\r\n            native.pdfSettings.margins.right = bottom;\r\n            native.pdfSettings.orientation = orientation;\r\n            this.props.updateNative(native);\r\n        }\r\n    }\r\n\r\n    renderPageSize(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('sizes')}\r\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControl className={clsx(this.props.classes.fieldWide, this.props.classes.orientation)}>\r\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                    <Select\r\n                        disabled={this.state.pdfInGeneration}\r\n                        value={settings.orientation || 'portrait'}\r\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\r\n                    >\r\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Width')}\r\n                    value={settings.pageWidth}\r\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Height')}\r\n                    value={settings.pageHeight}\r\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for first page')}\r\n                    value={settings.paddingTopFirst}\r\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for other pages')}\r\n                    value={settings.paddingTop}\r\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Padding left')}\r\n                    value={settings.paddingLeft}\r\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={clsx(this.props.classes.titleText)}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                    helperText={I18n.t('You can add time with {{YYYY MM DD}}')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                    <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Time format description')}\r\n                </Button>\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={clsx(this.props.classes.field, this.props.classes.fontSize)}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 408, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 400, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textValue}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    key=\"pdfButton\"\r\n                    control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                    label={I18n.t('Show PDF generate button on list')}\r\n                />\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton onClick={() => this.onExpand(false)} title={I18n.t('Collapse all')} disabled={!this.state.expanded.length}><ExpandLessIcon /></IconButton>\r\n                <IconButton onClick={() => this.onExpand(true)} title={I18n.t('Expand all')} disabled={this.state.expanded.length === 10}><ExpandMoreIcon /></IconButton>\r\n            </Grid>\r\n            {this.renderPageSize(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={`/files/eventlist/report${this.props.instance ? '-' + this.props.instance : ''}.pdf?q=${this.state.random}`} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    updateNative: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n        this.isWeb = window.socketUrl !== undefined;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n\r\n        Object.keys(native.pdfSettings).forEach(attr => {\r\n            if (attr.toLowerCase().includes('color')) {\r\n                if (typeof native.pdfSettings[attr] === 'object') {\r\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\r\n                }\r\n                if (native.pdfSettings[attr].startsWith('rgb')) {\r\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\r\n                }\r\n            }\r\n        });\r\n\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    updateNative(native, cb) {\r\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n        this.setState({native, changed}, cb);\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => Router.doNavigate(e.target.parentNode.dataset.name)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            imagePrefix={this.isWeb ? '../' : '../../files/'}\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://f41fcdf099e848c590da9b96d0ba67c8@sentry.iobroker.net/109',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}