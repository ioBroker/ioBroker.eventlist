{"version":3,"sources":["Components/ColorPicker.js","Tabs/Options.js","Dialogs/AddEvent.js","Dialogs/AddId.js","Tabs/List.js","Tabs/License.js","App.js","serviceWorker.js","index.js"],"names":["ColorPicker","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","onChange","getColor","this","style","TextField","id","width","label","name","value","margin","classes","root","textDense","e","target","IconButton","onClick","size","className","delButton","opacity","cursor","swatch","background","popover","cover","onChangeComplete","rgb","r","g","b","a","React","Component","withStyles","theme","height","borderRadius","marginTop","padding","boxShadow","display","verticalAlign","position","zIndex","top","right","bottom","left","marginBottom","Options","onAliveChanged","aliveId","isInstanceAlive","val","inAction","toast","errorWithPercent","adapterName","instance","socket","getState","then","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","key","aria-label","close","tab","common","native","onError","text","errorText","onLoad","column","columnSettings","I18n","t","input","maxLength","type","inputProps","min","max","dateFormat","Button","variant","window","relativeTime","helperText","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","defaultBooleanColorFalse","defaultNonBooleanText","FormControl","InputLabel","Select","language","MenuItem","FormControlLabel","control","Checkbox","checked","icons","duration","pdfButton","renderToast","minHeight","minWidth","spacing","button","card","maxWidth","textAlign","media","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","AddEventDialog","showTime","event","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","disabled","AddIdDialog","onStateChanged","unit","eventDefault","trueText","trueTextDefault","falseText","falseTextDefault","trueColor","falseColor","trueColorDefault","falseColorDefault","icon","trueIcon","falseIcon","changesOnly","showSelectId","unknownId","toggleState","exists","confirmExit","getLanguage","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","readTypeTimer","clearTimeout","setTimeout","getObject","obj","newState","getName","custom","newSettings","getSettings","catch","subscribe","en","_id","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","selected","themeName","themeType","word","lang","translations","w","defColor","stateVal","undefined","startsWith","includes","split","shift","eventTemplate","valWithUnit","time","format","replace","duration2text","settings","enabled","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","JSON","stringify","title","ok","cancel","isYes","narrowWidth","field","error","textFieldWithButton","Paper","clsx","paper","examplePaper","exampleTitle","exampleText","getExampleColor","src","getExampleIcon","alt","exampleIcon","buildExample","Switch","Accordion","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","writeSettings","renderSelectId","renderConfirmExit","withWidth","palette","marginLeft","maxHeight","List","triggerPDFId","pdfInGeneration","eventListId","eventList","parse","eventRawList","forEach","item","raw","find","it","stateId","eventRawListId","i","onRequestSort","property","isAsc","orderBy","order","editEnabled","localStorage","getItem","editAvailable","showEditButton","showDeleteConfirm","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","length","map","n","component","tdIcons","headCell","toUpperCase","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","toolbarButton","Fab","toolbarButtonText","setItem","array","comparator","stabilizedThis","el","index","sort","descendingComparator","selectedIndex","indexOf","newSelected","concat","slice","filter","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","result","deleteEntries","AddEvent","sendTo","AddId","renderToolbar","renderList","LinearProgress","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","overflow","paddingLeft","paddingRight","secondary","main","backgroundColor","lighten","light","primary","dark","flex","border","clip","whiteSpace","lineHeight","showHint","alive","isLicenseOK","messageText","requesting","placeholder","multiline","license","checkLicense","CircularProgress","thickness","disableShrink","href","fetch","method","headers","redirect","cache","body","res","json","data","showError","uuid","renderLicenseSettings","renderMessage","renderError","license_ok","license_not_ok","App","extendedProps","require","bottomButtons","location","pathname","isTab","selectedTab","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","changed","attr","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","GenericApp","Boolean","hostname","match","Utils","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c85cef57.chunk.js","sourcesContent":["/**\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\n *\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\nimport React from 'react'\nimport {ChromePicker} from 'react-color'\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    color: {\n        width: 36,\n        height: 14,\n        borderRadius: 2,\n    },\n    delButton: {\n        //width: 32,\n        //height: 32,\n        marginTop: 16,\n    },\n    swatch: {\n        marginTop: 16,\n        padding: 5,\n        background: '#fff',\n        borderRadius: 1,\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n        verticalAlign: 'middle'\n    },\n    popover: {\n        position: 'absolute',\n        zIndex: 2,\n    },\n    cover: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n    textDense: {\n        marginTop: 0,\n        marginBottom: 0,\n    }\n});\n\nclass ColorPicker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayColorPicker: false,\n            color: this.props.color,\n        };\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker});\n    };\n\n    handleClose = () => {\n        this.setState({displayColorPicker: false});\n    };\n\n    static getColor(color) {\n        if (color && typeof color === 'object') {\n            if (color.rgb) {\n                return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\n            } else {\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\n            }\n        } else {\n            return color || '';\n        }\n    }\n\n    handleChange = color => {\n        this.setState({color});\n        this.props.onChange && this.props.onChange(ColorPicker.getColor(color));\n    };\n\n    render() {\n        const color = ColorPicker.getColor(this.state.color);\n        return <div style={this.props.style}>\n            <TextField\n                id=\"name\"\n                style={{width: 'calc(100% - 80px)'}}\n                label={this.props.name || 'color'}\n                value={color}\n                margin=\"dense\"\n                classes={{root: this.props.classes.textDense}}\n                onChange={e => this.handleChange(e.target.value)}\n            />\n            <IconButton\n                onClick={() => this.handleChange('')}\n                size=\"small\"\n                className={this.props.classes.delButton}\n                style={color ? {} : {opacity: 0, cursor: 'default'}}\n            ><IconDelete/></IconButton>\n            <div className={this.props.classes.swatch} onClick={() => this.handleClick()}>\n                <div className={this.props.classes.color}\n                     style={{background: color}} />\n            </div>\n            { this.state.displayColorPicker ? <div className={this.props.classes.popover}>\n                <div className={this.props.classes.cover} onClick={() => this.handleClose()}/>\n                <ChromePicker color={ this.state.color } onChangeComplete={color => this.handleChange(color)} />\n            </div> : null }\n\n        </div>\n    }\n}\n\nColorPicker.propTypes = {\n    color: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    style: PropTypes.object,\n};\n\nexport default withStyles(styles)(ColorPicker);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdHelp as IconHelp} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport ColorPicker from '../Components/ColorPicker';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300,\n        marginRight: theme.spacing(2),\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n\n        this.props.socket.getState(this.aliveId).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    render() {\n        return (\n            <form className={ this.props.classes.tab }>\n                <Logo\n                    instance={ this.props.instance }\n                    common={ this.props.common }\n                    native={ this.props.native }\n                    onError={ text => this.setState({errorText: text}) }\n                    onLoad={ this.props.onLoad }\n                />\n                <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                    <TextField\n                        label={ I18n.t('Max list length') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.maxLength }\n                        type=\"number\"\n                        inputProps={{min: 1, max: 1000}}\n                        onChange={ e => this.props.onChange('maxLength', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Date format') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.dateFormat }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('dateFormat', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"contained\" onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}><IconHelp/>{I18n.t('Format description')}</Button>\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Show absolute time after seconds') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.relativeTime }\n                        type=\"number\"\n                        inputProps={{min: 0, max: 140000}}\n                        onChange={ e => this.props.onChange('relativeTime', e.target.value) }\n                        helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for boolean') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default text by TRUE') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanTextTrue }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        label={ I18n.t('Default text by FALSE') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanTextFalse }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <ColorPicker\n                        color={this.props.native.defaultBooleanColorTrue}\n                        style={{width: 300, display: 'inline-block', marginRight: 16}}\n                        name={I18n.t('Default color by TRUE')}\n                        onChange={color => this.setState({defaultBooleanColorTrue: color})}\n                    />\n                    <ColorPicker\n                        color={this.state.defaultBooleanColorFalse}\n                        style={{width: 300, display: 'inline-block'}}\n                        name={I18n.t('Default color by FALSE')}\n                        onChange={color => this.setState({defaultBooleanColorFalse: color})}\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for non boolean states') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultNonBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for non boolean states') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultNonBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <FormControl className={this.props.classes.input}>\n                        <InputLabel>{I18n.t('Language')}</InputLabel>\n                        <Select\n                            value={this.props.native.language || 'system'}\n                            onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\n                        >\n                            <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\n                            <MenuItem value=\"en\">English</MenuItem>\n                            <MenuItem value=\"de\">Deutsch</MenuItem>\n                            <MenuItem value=\"ru\">русский</MenuItem>\n                            <MenuItem value=\"pt\">Portugues</MenuItem>\n                            <MenuItem value=\"nl\">Nederlands</MenuItem>\n                            <MenuItem value=\"fr\">français</MenuItem>\n                            <MenuItem value=\"it\">Italiano</MenuItem>\n                            <MenuItem value=\"es\">Espanol</MenuItem>\n                            <MenuItem value=\"pl\">Polski</MenuItem>\n                            <MenuItem value=\"zh-cn\">简体中文</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <br/>\n                    <FormControlLabel\n                        control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\n                        label={I18n.t('Show icons in the list')}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\n                        label={I18n.t('Show duration in the list')}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\n                        label={I18n.t('Show PDF generate button on list')}\n                    />\n                </div>\n                { this.renderToast() }\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    {I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    {I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm'\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n\r\n            trueText: '',\r\n            trueTextDefault: true,\r\n            falseText: '',\r\n            falseTextDefault: true,\r\n\r\n            color: '',\r\n            trueColor: '',\r\n            falseColor: '',\r\n            trueColorDefault: true,\r\n            falseColorDefault: true,\r\n\r\n            icon: '',\r\n            trueIcon: '',\r\n            falseIcon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n\r\n            toggleState: false,\r\n            exists: false,\r\n            confirmExit: false,\r\n        };\r\n\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings();\r\n                }\r\n            });\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;    \r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n    \r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readSettings(id) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type: (obj && obj.common && obj.common.type) || '',\r\n                        unknownId: !obj || !obj.common || !obj.common.type,\r\n                        name: this.getName(obj),\r\n                        unit: (obj && obj.common && obj.common.unit) || ''\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n                        if (newState.type === 'boolean') {\r\n                            newState.trueText = newSettings.trueText === DEFAULT_TEMPLATE ? '' : newSettings.trueText;\r\n                            newState.trueTextDefault = newSettings.trueText === DEFAULT_TEMPLATE;\r\n\r\n                            newState.falseText = newSettings.falseText === DEFAULT_TEMPLATE ? '' : newSettings.falseText;\r\n                            newState.falseTextDefault = newSettings.falseText === DEFAULT_TEMPLATE;\r\n\r\n                            newState.trueColor = newSettings.trueColor === DEFAULT_TEMPLATE ? '' : newSettings.trueColor;\r\n                            newState.trueColorDefault = newSettings.trueColor === DEFAULT_TEMPLATE;\r\n\r\n                            newState.falseColor = newSettings.falseColor === DEFAULT_TEMPLATE ? '' : newSettings.falseColor;\r\n                            newState.falseColorDefault = newSettings.falseColor === DEFAULT_TEMPLATE;\r\n                        } else {\r\n                            newState.trueText = '';\r\n                            newState.trueTextDefault = true;\r\n                            newState.falseText = '';\r\n                            newState.falseTextDefault = true;\r\n                            newState.trueColor = '';\r\n                            newState.trueColorDefault = true;\r\n                            newState.falseColor = '';\r\n                            newState.falseColorDefault = true;\r\n                        }\r\n\r\n                        newState.event = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n\r\n                    } else {\r\n                        newState.exists = false;\r\n                    }\r\n\r\n                    this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: ''}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    static getColor(color) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n            } else {\r\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n            }\r\n        } else {\r\n            return color || '';\r\n        }\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = '';\r\n        const defColor = AddIdDialog.getColor(this.state.color);\r\n        if (this.state.type === 'boolean') {\r\n            const trueColor = AddIdDialog.getColor(this.state.trueColor);\r\n            const falseColor = AddIdDialog.getColor(this.state.falseColor);\r\n\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.toggleState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (stateVal && (trueColor || this.state.trueColorDefault)) {\r\n                color = trueColor || this.props.native.defaultBooleanColorTrue || '';\r\n            } else if (!stateVal && (falseColor || this.state.falseColorDefault)) {\r\n                color = falseColor || this.props.native.defaultBooleanColorFalse || '';\r\n            }\r\n        }\r\n\r\n        color = color || defColor;\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        let icon = '';\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.toggleState) {\r\n                stateVal = !stateVal;\r\n            }\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && (this.state.trueText || this.state.trueTextDefault)) {\r\n                icon = this.state.trueIcon || this.state.icon || undefined;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && (this.state.falseText || this.state.falseTextDefault)) {\r\n                icon = this.state.falseIcon || this.state.icon || undefined;\r\n            } else {\r\n                icon = stateVal ?\r\n                    icon = this.state.trueIcon\r\n                    :\r\n                    icon = this.state.falseIcon;\r\n\r\n                icon = icon || this.state.icon || undefined;\r\n            }\r\n        }\r\n\r\n        icon = icon || this.state.icon;\r\n\r\n        if (icon) {\r\n            if (!icon.startsWith('data:')) {\r\n                if (icon.includes('.')) {\r\n                    icon = '/adapter/' + this.state.id.split('.').shift() + '/' + icon;\r\n                } else {\r\n                    icon = '';\r\n                }\r\n            }\r\n        }\r\n        return icon;\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let val = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.toggleState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && (this.state.trueText || this.state.trueTextDefault)) {\r\n                eventTemplate = (this.state.trueTextDefault || this.state.trueText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : this.state.trueText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && (this.state.falseText || this.state.falseTextDefault)) {\r\n                eventTemplate = (this.state.falseTextDefault || this.state.falseText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : this.state.falseText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                val = stateVal ?\r\n                    (this.state.trueTextDefault || this.state.trueText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : this.state.trueText || this.textSwitchedOn\r\n                    :\r\n                    (this.state.falseTextDefault || this.state.falseText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : this.state.falseText || this.textSwitchedOff;\r\n\r\n                valWithUnit = val;\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n            val = this.state.state && this.state.state.val !== undefined ? this.state.state.val : '';\r\n\r\n            if (val === null) {\r\n                val = 'null';\r\n            } else if (typeof val === 'number') {\r\n                val = val.toString();\r\n                if (this.isFloatComma) {\r\n                    val = val.replace('.', ',');\r\n                }\r\n            } else {\r\n                val = val.toString();\r\n            }\r\n\r\n            valWithUnit = val;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, val);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly\r\n        };\r\n\r\n        if (this.state.type === 'boolean') {\r\n            settings.trueText   = this.state.trueTextDefault   ? DEFAULT_TEMPLATE : this.state.trueText;\r\n            settings.falseText  = this.state.falseTextDefault  ? DEFAULT_TEMPLATE : this.state.falseText;\r\n            settings.trueColor  = this.state.trueColorDefault  ? DEFAULT_TEMPLATE : this.state.trueColor;\r\n            settings.falseColor = this.state.falseColorDefault ? DEFAULT_TEMPLATE : this.state.falseColor;\r\n        }\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: this.getExampleColor() || undefined}}>\r\n                            {this.props.native.icon ? <img src={this.getExampleIcon()} alt=\"event\" className={this.props.classes.exampleIcon}/>: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={this.state.toggleState}\r\n                                        onChange={e => this.setState({toggleState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <>\r\n                        <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                    </> : null}\r\n                {this.state.id ?\r\n                    <Accordion>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography className={this.props.classes.heading}>{I18n.t('Event text')}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Paper className={this.props.classes.paper}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox\r\n                                        checked={this.state.eventDefault}\r\n                                        onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                                    }\r\n                                    label={I18n.t('Default event text')}\r\n                                />\r\n                                <br/>\r\n                                {!this.state.eventDefault ? <TextField\r\n                                    margin=\"dense\"\r\n                                    label={I18n.t('Event text')}\r\n                                    value={this.state.event}\r\n                                    onChange={e => this.setState({event: e.target.value})}\r\n                                    type=\"text\"\r\n                                    className={this.props.classes.textField}\r\n                                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                                    fullWidth\r\n                                /> : null}\r\n                            </Paper>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    : null }\r\n                {this.state.id && this.state.type === 'boolean' ?\r\n                        <Accordion>\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography className={this.props.classes.heading}>{I18n.t('True/False texts')}</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.trueTextDefault}\r\n                                            onChange={e => this.setState({trueTextDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default TRUE value text')}\r\n                                    />\r\n                                    {!this.state.trueTextDefault ? <TextField\r\n                                        margin=\"dense\"\r\n                                        label={I18n.t('TRUE text')}\r\n                                        value={this.state.trueText}\r\n                                        classes={{root: this.props.classes.textDense}}\r\n                                        onChange={e => this.setState({trueText: e.target.value})}\r\n                                        type=\"text\"\r\n                                        className={this.props.classes.textField}\r\n                                        helperText={I18n.t('This text will be used when the state is TRUE')}\r\n                                    /> : null}\r\n                                </Paper>\r\n                                {narrowWidth ? <br/> : null}\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.falseTextDefault}\r\n                                            onChange={e => this.setState({falseTextDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default FALSE value text')}\r\n                                    />\r\n                                    {!this.state.falseTextDefault ? <TextField\r\n                                        margin=\"dense\"\r\n                                        label={I18n.t('FALSE text')}\r\n                                        value={this.state.falseText}\r\n                                        classes={{root: this.props.classes.textDense}}\r\n                                        onChange={e => this.setState({falseText: e.target.value})}\r\n                                        type=\"text\"\r\n                                        className={this.props.classes.textField}\r\n                                        helperText={I18n.t('This text will be used when the state is FALSE')}\r\n                                    /> : null}\r\n                                </Paper>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    : null }\r\n                {this.state.id && this.state.type === 'boolean' ?\r\n                        <Accordion>\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography className={this.props.classes.heading}>{I18n.t('Colors')}</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.trueColorDefault}\r\n                                            onChange={e => this.setState({trueColorDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default TRUE value color')}\r\n                                    />\r\n                                    {!this.state.trueColorDefault ? <ColorPicker\r\n                                        color={this.state.trueColor}\r\n                                        style={{width: 200, display: 'inline-block'}}\r\n                                        name={I18n.t('TRUE color')}\r\n                                        onChange={color => this.setState({trueColor: color})}\r\n                                    /> : null}\r\n                                </Paper>\r\n                                {narrowWidth ? <br/> : null}\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.falseColorDefault}\r\n                                            onChange={e => this.setState({falseColorDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default FALSE value color')}\r\n                                    />\r\n                                    {!this.state.falseColorDefault ? <ColorPicker\r\n                                        style={{width: 200, display: 'inline-block'}}\r\n                                        color={this.state.falseColor}\r\n                                        name={I18n.t('FALSE color')}\r\n                                        onChange={color => this.setState({falseColor: color})}\r\n                                    /> : null}\r\n                                </Paper>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">{I18n.t('Cancel')}</Button>\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || JSON.stringify(this.originalSettings) === JSON.stringify(this.getSettings())}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                >{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten } from '@material-ui/core/styles';\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress  from '@material-ui/core/LinearProgress';\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\nimport {MdAdd as IconAddId} from 'react-icons/md';\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\nimport AddEventDialog from '../Dialogs/AddEvent';\nimport AddIdDialog from '../Dialogs/AddId';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    instanceNotOnline: {\n        color: '#883333',\n        marginLeft: theme.spacing(1)\n    },\n    toolbarRoot: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    toolbarHighlight: theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    toolbarTitle: {\n        flex: '1 1 100%',\n    },\n    toolbarButton: {\n        marginRight: theme.spacing(1),\n        //height: 37.25,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    tableContainer: {\n        height: '100%',\n        overflow: 'auto'\n    },\n    table:{\n        width: 'auto',\n    },\n    tdIcons: {\n        textAlign: 'right',\n        marginRight: theme.spacing(1),\n        marginTop: 2,\n    },\n    tdTs: {\n        //width: 100\n        paddingRight: theme.spacing(1),\n    },\n    tdEvent: {\n        //width: `calc(100% - 250px - 52px)`,\n        paddingRight: theme.spacing(1),\n    },\n    tdVal: {\n        //width: 150,\n    },\n    tdDuration: {\n        //paddingRight: theme.spacing(1),\n    },\n    tdID: {\n        opacity: 0.3\n    },\n    tdEdit: {\n\n    },\n    editButton: {\n        height: 16,\n        opacity: 0.3,\n        '&:hover': {\n            opacity: 1,\n        }\n    },\n    toolbarButtonText: {\n        whiteSpace: 'nowrap',\n        marginLeft: 16,\n        marginRight: 16,\n        lineHeight: 24,\n        display: 'inline-block'\n    },\n});\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\n\n        if (!editAvailable) {\n            editEnabled = false;\n        } else if (!this.props.showEditButton || editEnabled === null) {\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\n        } else if (editEnabled === 'true') {\n            editEnabled = true;\n        } else if (editEnabled === 'false') {\n            editEnabled = false;\n        }\n\n        this.state = {\n            toast: '',\n            isInstanceAlive: false,\n            eventList: false,\n            eventRawList: false,\n            order: 'desc',\n            orderBy: 'ts',\n            selected: [],\n            showDeleteConfirm: false,\n            showAddIdDialog: false,\n            showAddEventDialog: false,\n            selectedId: '',\n            editEnabled,\n            editAvailable,\n            pdfInGeneration: false,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n        this.eventListId = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\n\n        this.headCells = [\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\n        ];\n    }\n\n    readStatus(cb) {\n        this.props.socket.getState(this.aliveId)\n            .then(aliveState =>\n                this.props.socket.getState(this.eventListId)\n                    .then(state =>\n                        this.props.socket.getState(this.eventRawListId)\n                            .then(rawState => {\n                                let eventList;\n                                try {\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\n                                } catch (e) {\n                                    eventList = [];\n                                }\n                                let eventRawList;\n                                try {\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\n                                } catch (e) {\n                                    eventRawList = [];\n                                }\n\n                                // merge together\n                                eventList.forEach(item => {\n                                    const raw = eventRawList.find(it => it.ts === item._id);\n                                    if (raw) {\n                                        item.stateId = raw.id;\n                                    }\n                                });\n\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\n                            })));\n    }\n\n    componentDidMount() {\n        this.readStatus(() => {\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\n        });\n   }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\n    }\n\n    onStateChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        } if (id === this.triggerPDFId) {\n            this.setState({pdfInGeneration: state && state.val});\n        } else if (id === this.eventListId) {\n            let eventList;\n            try {\n                eventList = state && state.val ? JSON.parse(state.val) : []\n            } catch (e) {\n                eventList = [];\n            }\n            // merge together\n            this.state.eventRawList && eventList.forEach(item => {\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\n                if (raw) {\n                    item.stateId = raw.id;\n                }\n            });\n            this.setState({eventList});\n        } else if (id === this.eventRawListId) {\n            let eventRawList;\n            try {\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\n            } catch (e) {\n                eventRawList = [];\n            }\n            // merge together\n            let eventList = null;\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\n                if (!item.stateId) {\n                    const raw = eventRawList.find(it => it.ts === item._id);\n                    if (raw) {\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\n                        eventList[i].stateId = raw.id;\n                    }\n                }\n            });\n            const newState = {eventRawList};\n            if (eventList) {\n                newState.eventList = eventList;\n            }\n            this.setState(newState);\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onRequestSort = (event, property) => {\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\n    };\n\n    renderHeader() {\n        const createSortHandler = (property) => event =>\n            this.onRequestSort(event, property);\n\n        return <TableHead>\n            <TableRow>\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\n                        disabled={!this.state.eventList.length}\n                        onChange={e => {\n                            if (e.target.checked) {\n                                const selected = this.state.eventList.map(n => n._id);\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\n                                this.setState({selected, selectedId});\n                            } else {\n                                this.setState({selected: [], selectedId: ''});\n                            }\n                        }}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>}\n                {\n                    this.props.native.icons ? <TableCell\n                        component=\"th\"\n                        className={this.props.classes.tdIcons}\n                        align=\"left\"\n                        padding=\"none\"\n                    /> : null\n                }\n\n                {this.headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        className={this.props.classes['td' + headCell.id[0].toUpperCase() + headCell.id.substring(1)]}\n                        align={headCell.align}\n                        padding=\"none\"\n                        component=\"th\"\n                        sortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\n                    >\n                        <TableSortLabel\n                            active={this.state.orderBy === headCell.id}\n                            direction={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {this.state.orderBy === headCell.id ?\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\n                                : null\n                            }\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                {this.props.native.duration ?\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\n                        {I18n.t('Duration')}</TableCell>\n                    : null}\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\n            </TableRow>\n        </TableHead>;\n    }\n\n    renderToolbar() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {this.state.selected.length} {I18n.t('selected')}\n                </Typography>\n            :\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    <span>{I18n.t('Event list')}</span>\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\n                </Typography>\n            }\n\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\n                <>\n                    <Tooltip title={I18n.t('Delete')}>\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                    {this.state.selectedId ?\n                        <Tooltip title={I18n.t('Edit settings for state')}>\n                            <IconButton aria-label=\"edit\" onClick={() => this.setState({showAddIdDialog: this.state.selectedId})}>\n                                <IconEdit />\n                            </IconButton>\n                        </Tooltip>\n                        : null}\n                </>\n                :\n                <>\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" onClick={() => this.setState({showAddIdDialog: true})}>\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\n                                <IconAddId style={{verticalAlign: 'middle'}}/>\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('State ID')}</span>}\n                            </div>\n                        </Fab>\n                    </Tooltip>}\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\n                        <span>\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\n                                </div>\n                            </Fab>\n                        </span>\n                    </Tooltip>}\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\n                        <Fab\n                            variant=\"extended\"\n                            aria-label=\"enable-edit\"\n                            size=\"small\"\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\n                            onClick={() => {\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\n                                this.setState({editEnabled: !this.state.editEnabled});\n                            }}>\n                            <IconEdit />\n                        </Fab>\n                    </Tooltip>}\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF')} className={this.props.classes.toolbarButton}>\n                        <span>\n                            <Fab\n                                variant=\"extended\"\n                                aria-label=\"generate-pdf\"\n                                size=\"small\"\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\n                                onClick={() => {\n                                    this.props.socket.setState(this.triggerPDFId, true, false);\n                                }}>\n                                <IconEdit />\n                            </Fab>\n                        </span>\n                    </Tooltip>}\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\n                            <IconReload />\n                        </Fab>\n                    </Tooltip>\n                </>\n            }\n        </Toolbar>;\n    }\n\n    stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) {\n                return order;\n            } else {\n                return a[1] - b[1];\n            }\n        });\n        return stabilizedThis.map(el => el[0]);\n    }\n\n    descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\n    }\n\n    handleClick(id) {\n        const selectedIndex = this.state.selected.indexOf(id);\n        let newSelected = [];\n        let selectedId = '';\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(this.state.selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(this.state.selected.slice(1));\n        } else if (selectedIndex === this.state.selected.length - 1) {\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                this.state.selected.slice(0, selectedIndex),\n                this.state.selected.slice(selectedIndex + 1),\n            );\n        }\n        if (newSelected.length === 1) {\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\n        }\n\n        this.setState({selected: newSelected, selectedId});\n    };\n\n    deleteEntries(cb) {\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\n            .then(state => {\n                let eventList;\n                try {\n                    eventList = state && state.val ? JSON.parse(state.val) : []\n                } catch (e) {\n                    eventList = [];\n                }\n\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\n\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\n                    .then(() =>\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\n            });\n    }\n\n    renderList() {\n        return <TableContainer className={this.props.classes.tableContainer}>\n                <Table\n                    className={this.props.classes.table}\n                    size=\"small\"\n                >\n                    {this.renderHeader()}\n                    <TableBody>\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\n                            .map((row, index) => {\n                                const isItemSelected = this.state.selected.includes(row._id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return <TableRow\n                                    hover\n                                    onClick={() => this.handleClick(row._id)}\n                                    style={row._style || undefined}\n                                    role=\"checkbox\"\n                                    aria-checked={isItemSelected}\n                                    tabIndex={-1}\n                                    key={row._id}\n                                    selected={isItemSelected}\n                                >\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            checked={isItemSelected}\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </TableCell>}\n                                    {this.props.native.icons ?\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\n                                            {row.icon ? <img src={row.icon} width={28} height={28} alt=\"\"/> : null}</TableCell>\n                                        : null}\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\n                                    {this.props.native.duration ?\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\n                                            {row.duration || ''}</TableCell>\n                                        : null}\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\n                                                e.stopPropagation();\n                                                this.setState({showAddIdDialog: row.stateId})\n                                            }}><IconEdit/></IconButton>\n                                        </Tooltip>: null}\n                                    </TableCell>}\n                                </TableRow>;\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>;\n    }\n\n    renderConfirmDialog() {\n        if (!this.state.showDeleteConfirm) {\n            return null;\n        } else {\n            return <ConfirmDialog\n                title={I18n.t('Please confirm')}\n                text={I18n.t('Are you sure to delete events from list?')}\n                ok={I18n.t('Ok')}\n                cancel={I18n.t('Cancel')}\n                icon={<IconQuestion/>}\n                onClose={result =>\n                    this.setState({showDeleteConfirm: false}, () =>\n                        result && this.deleteEntries())}\n                />\n        }\n    }\n\n    renderAddEventDialog() {\n        if (!this.state.showAddEventDialog) {\n            return null;\n        } else {\n            return <AddEventDialog\n                onClose={event => {\n                    this.setState({showAddEventDialog: false}, () =>\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\n                }}\n            />;\n        }\n    }\n\n    renderAddIdDialog() {\n        if (!this.state.showAddIdDialog) {\n            return null;\n        } else {\n            return <AddIdDialog\n                instance={this.props.instance}\n                adapterName={this.props.adapterName}\n                themeName={this.props.themeName}\n                themeType={this.props.themeType}\n                socket={this.props.socket}\n                native={this.props.native}\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\n                onClose={event => {\n                    this.setState({showAddIdDialog: false}, () =>\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\n                }}\n            />;\n        }\n    }\n\n    render() {\n        return (\n            <Paper className={ this.props.classes.tab }>\n                {this.renderToolbar()}\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\n                {this.renderToast()}\n                {this.renderConfirmDialog()}\n                {this.renderAddEventDialog()}\n                {this.renderAddIdDialog()}\n            </Paper>\n        );\n    }\n}\n\nList.propTypes = {\n    editAvailable: PropTypes.bool,\n    editEnabled: PropTypes.bool,\n    showEditButton: PropTypes.bool,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    socket: PropTypes.object.isRequired,\n    themeName: PropTypes.string,\n    themeType: PropTypes.string,\n    native: PropTypes.object.isRequired,\n};\n\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport {MdFlashOn as IconConnect} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Message from '@iobroker/adapter-react/Dialogs/Message';\r\nimport DialogError from \"@iobroker/adapter-react/Dialogs/Error\";\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    license: {\r\n        width: '100%',\r\n        marginBottom: 20,\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    license_ok: {\r\n        color: '#2f8f00'\r\n    },\r\n    license_not_ok: {\r\n        color: '#8f2f00'\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showHint: false,\r\n            toast: '',\r\n            alive: this.props.alive,\r\n            errorText: '',\r\n            isLicenseOK: 'not_checked',\r\n            messageText: '',\r\n            requesting: false,\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.alive !== state.alive) {\r\n            return {alive: props.alive};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        }\r\n        return (<DialogError text={this.state.errorText} title={I18n.t('Error')} onClose={() => this.setState({errorText: ''})}/>);\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    renderLicenseSettings() {\r\n        return [\r\n            (<TextField\r\n                placeholder={I18n.t('Place your ioBroker OPC-UA license here')}\r\n                disabled={this.state.requesting}\r\n                key=\"license\"\r\n                multiline\r\n                className={this.props.classes.license}\r\n                label={I18n.t('License')}\r\n                value={this.props.native.license}\r\n                onChange={e => this.props.onChange('license', e.target.value)}\r\n            />),\r\n            (<br/>),\r\n            (<Fab key=\"test\" variant=\"extended\" disabled={this.state.requesting || !this.props.native.license} onClick={() => this.checkLicense()}>\r\n                {this.state.requesting ? (<CircularProgress size={18} thickness={4} variant=\"indeterminate\" disableShrink/>) : (<IconConnect />)}\r\n                {I18n.t('Check license online')}\r\n            </Fab>),\r\n            (<br/>),\r\n            !this.props.native.license ? (<p key=\"hint\">{I18n.t('license_hint')} <a href=\"https://iobroker.net/accountLicenses\" target=\"_blank\">iobroker.net</a></p>) : null,\r\n            (<br/>),\r\n            this.state.isLicenseOK !== 'not_checked' ? (<p className={this.props.classes[this.state.isLicenseOK]}>{I18n.t(this.state.isLicenseOK)}</p>) : null\r\n        ];\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return (<DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>)\r\n    }\r\n\r\n    checkLicense() {\r\n        this.setState({requesting: true}, () =>\r\n            fetch(\r\n                'https://iobroker.net:3001/api/v1/public/cert/', // or https://iobroker.net/cert/ - deprecated\r\n                {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'text/plain',\r\n                        },\r\n                        redirect: 'follow',\r\n                        cache: 'no-cache',\r\n                        body: this.props.native.license\r\n                    }\r\n                )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data.result === 'invalid') {\r\n                        this.setState({requesting: false, isLicenseOK: 'license_not_ok'}, () => this.showError(I18n.t('Invalid license')));\r\n                    } else {\r\n                        if (data.name.startsWith('iobroker.consumption')) {\r\n                            // read UUID of device\r\n                            if (this.state.alive) {\r\n                                this.props.socket.sendTo('consumption.' + this.props.instance, 'uuid', null, result => {\r\n                                    if (!data.uuid || data.uuid === result.uuid) {\r\n                                        this.setState({messageText: data.result, requesting: false, isLicenseOK: 'license_ok'});\r\n                                    } else {\r\n                                        this.setState({requesting: false, isLicenseOK: 'license_not_ok'}, () => this.showError(I18n.t('Wrong license UUID %s, expected %s', data.uuid, result.uuid)));\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                this.setState({messageText: data.result, requesting: false, isLicenseOK: 'license_ok'});\r\n                            }\r\n                        } else {\r\n                            this.setState({requesting: false, isLicenseOK: 'license_not_ok'}, () => this.showError(I18n.t('Wrong license name %s', data.name)));\r\n                        }\r\n                    }\r\n                })\r\n                .catch(e => this.setState({requesting: false, errorText: I18n.t('Cannot check license: %s', e)}))\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                {this.renderLicenseSettings()}\r\n                <br/>\r\n                {this.renderToast()}\r\n                {this.renderMessage()}\r\n                {this.renderError()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabLicense from './Tabs/License';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        extendedProps.bottomButtons = !(\r\n            window.location.pathname.includes('/tab.html') ||\r\n            window.location.pathname.includes('/tab.html') ||\r\n            window.location.pathname.includes('adapter/')\r\n        );\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'license') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('License')}    data-name=\"license\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'license' && <TabLicense\r\n                    key=\"license\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}