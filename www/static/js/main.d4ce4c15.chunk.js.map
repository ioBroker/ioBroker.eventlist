{"version":3,"sources":["Components/ColorPicker.js","Tabs/Options.js","Dialogs/AddEvent.js","Dialogs/AddId.js","Tabs/List.js","Tabs/PdfSettings.js","Tabs/Messengers.js","App.js","serviceWorker.js","index.js"],"names":["ColorPicker","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","onChange","getColor","this","style","TextField","id","width","label","name","value","margin","classes","root","textDense","e","target","IconButton","onClick","size","className","delButton","opacity","cursor","swatch","background","popover","cover","onChangeComplete","rgb","r","g","b","a","React","Component","withStyles","theme","height","borderRadius","marginTop","padding","boxShadow","display","verticalAlign","position","zIndex","top","right","bottom","left","marginBottom","Options","onAliveChanged","aliveId","isInstanceAlive","val","inAction","toast","errorWithPercent","adapterName","instance","socket","getState","then","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","key","aria-label","close","tab","common","native","onError","text","errorText","onLoad","column","columnSettings","I18n","t","input","maxLength","type","inputProps","min","max","dateFormat","Button","variant","window","relativeTime","helperText","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","defaultBooleanColorFalse","defaultNonBooleanText","FormControl","InputLabel","Select","language","MenuItem","FormControlLabel","control","Checkbox","checked","icons","duration","renderToast","minHeight","minWidth","spacing","button","card","maxWidth","textAlign","media","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","AddEventDialog","showTime","event","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","disabled","AddIdDialog","onStateChanged","unit","eventDefault","trueText","trueTextDefault","falseText","falseTextDefault","trueColor","falseColor","trueColorDefault","falseColorDefault","icon","trueIcon","falseIcon","changesOnly","showSelectId","unknownId","toggleState","exists","confirmExit","getLanguage","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","readTypeTimer","clearTimeout","setTimeout","getObject","obj","newState","getName","custom","newSettings","getSettings","catch","subscribe","en","_id","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","selected","themeName","themeType","word","lang","translations","w","defColor","stateVal","undefined","startsWith","includes","split","shift","eventTemplate","valWithUnit","time","format","replace","duration2text","settings","enabled","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","JSON","stringify","title","ok","cancel","isYes","narrowWidth","field","error","textFieldWithButton","Paper","clsx","paper","examplePaper","exampleTitle","exampleText","getExampleColor","src","getExampleIcon","alt","exampleIcon","buildExample","Switch","Accordion","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","writeSettings","renderSelectId","renderConfirmExit","withWidth","palette","marginLeft","maxHeight","List","triggerPDFId","pdfInGeneration","eventListId","eventList","parse","eventRawList","forEach","item","raw","find","it","stateId","eventRawListId","i","onRequestSort","property","isAsc","orderBy","order","editEnabled","localStorage","getItem","editAvailable","showEditButton","showDeleteConfirm","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","length","map","n","component","tdIcons","headCell","toUpperCase","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","location","pathname","now","focus","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","toolbarButton","Fab","toolbarButtonText","setItem","pdfButton","array","comparator","stabilizedThis","el","index","sort","descendingComparator","selectedIndex","indexOf","newSelected","concat","slice","filter","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","result","deleteEntries","AddEvent","AddId","renderToolbar","renderList","LinearProgress","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","overflow","paddingLeft","paddingRight","secondary","main","backgroundColor","lighten","light","primary","dark","flex","border","clip","whiteSpace","lineHeight","SETTINGS","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","textColor","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","PdfSettings","triggerPdf","expanded","random","triggerTimer","lastElement","attr","ex","push","pos","splice","onExpand","content","accordionContent","onFocus","noCheckbox","Object","assign","Grid","xs","md","lg","renderPageHeader","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderSettingsTitle","renderPageNumbers","renderPageMargins","renderSettingsText","iframePdfLandscape","messageText","container","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","Messengers","showHint","telegramInstances","whatsappInstances","getAdapterInstances","telegram","whatsapp","pop","telegramUser","whatsappPhone","renderTelegram","renderWhatsApp","renderMessage","renderError","App","extendedProps","require","bottomButtons","port","isTab","selectedTab","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","changed","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","GenericApp","Boolean","hostname","match","Utils","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4ce4c15.chunk.js","sourcesContent":["/**\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\n *\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\nimport React from 'react'\nimport {ChromePicker} from 'react-color'\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport {MdDelete as IconDelete} from 'react-icons/md';\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    color: {\n        width: 36,\n        height: 14,\n        borderRadius: 2,\n    },\n    delButton: {\n        //width: 32,\n        //height: 32,\n        marginTop: 16,\n    },\n    swatch: {\n        marginTop: 16,\n        padding: 5,\n        background: '#fff',\n        borderRadius: 1,\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer',\n        verticalAlign: 'middle'\n    },\n    popover: {\n        position: 'absolute',\n        zIndex: 2,\n    },\n    cover: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n    textDense: {\n        marginTop: 0,\n        marginBottom: 0,\n    }\n});\n\nclass ColorPicker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayColorPicker: false,\n            color: this.props.color,\n        };\n    }\n\n    handleClick = () => {\n        this.setState({displayColorPicker: !this.state.displayColorPicker});\n    };\n\n    handleClose = () => {\n        this.setState({displayColorPicker: false});\n    };\n\n    static getColor(color) {\n        if (color && typeof color === 'object') {\n            if (color.rgb) {\n                return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\n            } else {\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\n            }\n        } else {\n            return color || '';\n        }\n    }\n\n    handleChange = color => {\n        this.setState({color});\n        this.props.onChange && this.props.onChange(ColorPicker.getColor(color));\n    };\n\n    render() {\n        const color = ColorPicker.getColor(this.state.color);\n        return <div style={this.props.style}>\n            <TextField\n                id=\"name\"\n                style={{width: 'calc(100% - 80px)'}}\n                label={this.props.name || 'color'}\n                value={color}\n                margin=\"dense\"\n                classes={{root: this.props.classes.textDense}}\n                onChange={e => this.handleChange(e.target.value)}\n            />\n            <IconButton\n                onClick={() => this.handleChange('')}\n                size=\"small\"\n                className={this.props.classes.delButton}\n                style={color ? {} : {opacity: 0, cursor: 'default'}}\n            ><IconDelete/></IconButton>\n            <div className={this.props.classes.swatch} onClick={() => this.handleClick()}>\n                <div className={this.props.classes.color}\n                     style={{background: color}} />\n            </div>\n            { this.state.displayColorPicker ? <div className={this.props.classes.popover}>\n                <div className={this.props.classes.cover} onClick={() => this.handleClose()}/>\n                <ChromePicker color={ this.state.color } onChangeComplete={color => this.handleChange(color)} />\n            </div> : null }\n\n        </div>\n    }\n}\n\nColorPicker.propTypes = {\n    color: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    style: PropTypes.object,\n};\n\nexport default withStyles(styles)(ColorPicker);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdHelp as IconHelp} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport ColorPicker from '../Components/ColorPicker';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300,\n        marginRight: theme.spacing(2),\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 370px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n\n        this.props.socket.getState(this.aliveId).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    render() {\n        return (\n            <form className={ this.props.classes.tab }>\n                <Logo\n                    instance={ this.props.instance }\n                    common={ this.props.common }\n                    native={ this.props.native }\n                    onError={ text => this.setState({errorText: text}) }\n                    onLoad={ this.props.onLoad }\n                />\n                <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                    <TextField\n                        label={ I18n.t('Max list length') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.maxLength }\n                        type=\"number\"\n                        inputProps={{min: 1, max: 1000}}\n                        onChange={ e => this.props.onChange('maxLength', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Date format') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.dateFormat }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('dateFormat', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <Button variant=\"contained\" onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}><IconHelp/>{I18n.t('Format description')}</Button>\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Show absolute time after seconds') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.relativeTime }\n                        type=\"number\"\n                        inputProps={{min: 0, max: 140000}}\n                        onChange={ e => this.props.onChange('relativeTime', e.target.value) }\n                        helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for boolean') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default text by TRUE') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanTextTrue }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <TextField\n                        label={ I18n.t('Default text by FALSE') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultBooleanTextFalse }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <ColorPicker\n                        color={this.props.native.defaultBooleanColorTrue}\n                        style={{width: 300, display: 'inline-block', marginRight: 16}}\n                        name={I18n.t('Default color by TRUE')}\n                        onChange={color => this.setState({defaultBooleanColorTrue: color})}\n                    />\n                    <ColorPicker\n                        color={this.state.defaultBooleanColorFalse}\n                        style={{width: 300, display: 'inline-block'}}\n                        name={I18n.t('Default color by FALSE')}\n                        onChange={color => this.setState({defaultBooleanColorFalse: color})}\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for non boolean states') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultNonBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <TextField\n                        label={ I18n.t('Default event text for non boolean states') }\n                        className={ this.props.classes.input }\n                        value={ this.props.native.defaultNonBooleanText }\n                        type=\"text\"\n                        onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                        margin=\"normal\"\n                    />\n                    <br/>\n                    <FormControl className={this.props.classes.input}>\n                        <InputLabel>{I18n.t('Language')}</InputLabel>\n                        <Select\n                            value={this.props.native.language || 'system'}\n                            onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\n                        >\n                            <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\n                            <MenuItem value=\"en\">English</MenuItem>\n                            <MenuItem value=\"de\">Deutsch</MenuItem>\n                            <MenuItem value=\"ru\">русский</MenuItem>\n                            <MenuItem value=\"pt\">Portugues</MenuItem>\n                            <MenuItem value=\"nl\">Nederlands</MenuItem>\n                            <MenuItem value=\"fr\">français</MenuItem>\n                            <MenuItem value=\"it\">Italiano</MenuItem>\n                            <MenuItem value=\"es\">Espanol</MenuItem>\n                            <MenuItem value=\"pl\">Polski</MenuItem>\n                            <MenuItem value=\"zh-cn\">简体中文</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <br/>\n                    <FormControlLabel\n                        control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\n                        label={I18n.t('Show icons in the list')}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\n                        label={I18n.t('Show duration in the list')}\n                    />\n                </div>\n                { this.renderToast() }\n            </form>\n        );\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    {I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    {I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm'\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n\r\n            trueText: '',\r\n            trueTextDefault: true,\r\n            falseText: '',\r\n            falseTextDefault: true,\r\n\r\n            color: '',\r\n            trueColor: '',\r\n            falseColor: '',\r\n            trueColorDefault: true,\r\n            falseColorDefault: true,\r\n\r\n            icon: '',\r\n            trueIcon: '',\r\n            falseIcon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n\r\n            toggleState: false,\r\n            exists: false,\r\n            confirmExit: false,\r\n        };\r\n\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings();\r\n                }\r\n            });\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;\r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readSettings(id) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type: (obj && obj.common && obj.common.type) || '',\r\n                        unknownId: !obj || !obj.common || !obj.common.type,\r\n                        name: this.getName(obj),\r\n                        unit: (obj && obj.common && obj.common.unit) || ''\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n                        if (newState.type === 'boolean') {\r\n                            newState.trueText = newSettings.trueText === DEFAULT_TEMPLATE ? '' : newSettings.trueText;\r\n                            newState.trueTextDefault = newSettings.trueText === DEFAULT_TEMPLATE;\r\n\r\n                            newState.falseText = newSettings.falseText === DEFAULT_TEMPLATE ? '' : newSettings.falseText;\r\n                            newState.falseTextDefault = newSettings.falseText === DEFAULT_TEMPLATE;\r\n\r\n                            newState.trueColor = newSettings.trueColor === DEFAULT_TEMPLATE ? '' : newSettings.trueColor;\r\n                            newState.trueColorDefault = newSettings.trueColor === DEFAULT_TEMPLATE;\r\n\r\n                            newState.falseColor = newSettings.falseColor === DEFAULT_TEMPLATE ? '' : newSettings.falseColor;\r\n                            newState.falseColorDefault = newSettings.falseColor === DEFAULT_TEMPLATE;\r\n                        } else {\r\n                            newState.trueText = '';\r\n                            newState.trueTextDefault = true;\r\n                            newState.falseText = '';\r\n                            newState.falseTextDefault = true;\r\n                            newState.trueColor = '';\r\n                            newState.trueColorDefault = true;\r\n                            newState.falseColor = '';\r\n                            newState.falseColorDefault = true;\r\n                        }\r\n\r\n                        newState.event = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n\r\n                    } else {\r\n                        newState.exists = false;\r\n                    }\r\n\r\n                    this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: ''}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    static getColor(color) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n            } else {\r\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n            }\r\n        } else {\r\n            return color || '';\r\n        }\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = '';\r\n        const defColor = AddIdDialog.getColor(this.state.color);\r\n        if (this.state.type === 'boolean') {\r\n            const trueColor = AddIdDialog.getColor(this.state.trueColor);\r\n            const falseColor = AddIdDialog.getColor(this.state.falseColor);\r\n\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.toggleState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (stateVal && (trueColor || this.state.trueColorDefault)) {\r\n                color = trueColor || this.props.native.defaultBooleanColorTrue || '';\r\n            } else if (!stateVal && (falseColor || this.state.falseColorDefault)) {\r\n                color = falseColor || this.props.native.defaultBooleanColorFalse || '';\r\n            }\r\n        }\r\n\r\n        color = color || defColor;\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        let icon = '';\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.toggleState) {\r\n                stateVal = !stateVal;\r\n            }\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && (this.state.trueText || this.state.trueTextDefault)) {\r\n                icon = this.state.trueIcon || this.state.icon || undefined;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && (this.state.falseText || this.state.falseTextDefault)) {\r\n                icon = this.state.falseIcon || this.state.icon || undefined;\r\n            } else {\r\n                icon = stateVal ?\r\n                    icon = this.state.trueIcon\r\n                    :\r\n                    icon = this.state.falseIcon;\r\n\r\n                icon = icon || this.state.icon || undefined;\r\n            }\r\n        }\r\n\r\n        icon = icon || this.state.icon;\r\n\r\n        if (icon) {\r\n            if (!icon.startsWith('data:')) {\r\n                if (icon.includes('.')) {\r\n                    icon = '/adapter/' + this.state.id.split('.').shift() + '/' + icon;\r\n                } else {\r\n                    icon = '';\r\n                }\r\n            }\r\n        }\r\n        return icon;\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let val = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.toggleState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && (this.state.trueText || this.state.trueTextDefault)) {\r\n                eventTemplate = (this.state.trueTextDefault || this.state.trueText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : this.state.trueText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && (this.state.falseText || this.state.falseTextDefault)) {\r\n                eventTemplate = (this.state.falseTextDefault || this.state.falseText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : this.state.falseText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                val = stateVal ?\r\n                    (this.state.trueTextDefault || this.state.trueText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : this.state.trueText || this.textSwitchedOn\r\n                    :\r\n                    (this.state.falseTextDefault || this.state.falseText === DEFAULT_TEMPLATE) ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : this.state.falseText || this.textSwitchedOff;\r\n\r\n                valWithUnit = val;\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n            val = this.state.state && this.state.state.val !== undefined ? this.state.state.val : '';\r\n\r\n            if (val === null) {\r\n                val = 'null';\r\n            } else if (typeof val === 'number') {\r\n                val = val.toString();\r\n                if (this.isFloatComma) {\r\n                    val = val.replace('.', ',');\r\n                }\r\n            } else {\r\n                val = val.toString();\r\n            }\r\n\r\n            valWithUnit = val;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, val);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly\r\n        };\r\n\r\n        if (this.state.type === 'boolean') {\r\n            settings.trueText   = this.state.trueTextDefault   ? DEFAULT_TEMPLATE : this.state.trueText;\r\n            settings.falseText  = this.state.falseTextDefault  ? DEFAULT_TEMPLATE : this.state.falseText;\r\n            settings.trueColor  = this.state.trueColorDefault  ? DEFAULT_TEMPLATE : this.state.trueColor;\r\n            settings.falseColor = this.state.falseColorDefault ? DEFAULT_TEMPLATE : this.state.falseColor;\r\n        }\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: this.getExampleColor() || undefined}}>\r\n                            {this.props.native.icon ? <img src={this.getExampleIcon()} alt=\"event\" className={this.props.classes.exampleIcon}/>: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={this.state.toggleState}\r\n                                        onChange={e => this.setState({toggleState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <>\r\n                        <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                    </> : null}\r\n                {this.state.id ?\r\n                    <Accordion>\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                            <Typography className={this.props.classes.heading}>{I18n.t('Event text')}</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Paper className={this.props.classes.paper}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox\r\n                                        checked={this.state.eventDefault}\r\n                                        onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                                    }\r\n                                    label={I18n.t('Default event text')}\r\n                                />\r\n                                <br/>\r\n                                {!this.state.eventDefault ? <TextField\r\n                                    margin=\"dense\"\r\n                                    label={I18n.t('Event text')}\r\n                                    value={this.state.event}\r\n                                    onChange={e => this.setState({event: e.target.value})}\r\n                                    type=\"text\"\r\n                                    className={this.props.classes.textField}\r\n                                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                                    fullWidth\r\n                                /> : null}\r\n                            </Paper>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    : null }\r\n                {this.state.id && this.state.type === 'boolean' ?\r\n                        <Accordion>\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography className={this.props.classes.heading}>{I18n.t('True/False texts')}</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.trueTextDefault}\r\n                                            onChange={e => this.setState({trueTextDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default TRUE value text')}\r\n                                    />\r\n                                    {!this.state.trueTextDefault ? <TextField\r\n                                        margin=\"dense\"\r\n                                        label={I18n.t('TRUE text')}\r\n                                        value={this.state.trueText}\r\n                                        classes={{root: this.props.classes.textDense}}\r\n                                        onChange={e => this.setState({trueText: e.target.value})}\r\n                                        type=\"text\"\r\n                                        className={this.props.classes.textField}\r\n                                        helperText={I18n.t('This text will be used when the state is TRUE')}\r\n                                    /> : null}\r\n                                </Paper>\r\n                                {narrowWidth ? <br/> : null}\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.falseTextDefault}\r\n                                            onChange={e => this.setState({falseTextDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default FALSE value text')}\r\n                                    />\r\n                                    {!this.state.falseTextDefault ? <TextField\r\n                                        margin=\"dense\"\r\n                                        label={I18n.t('FALSE text')}\r\n                                        value={this.state.falseText}\r\n                                        classes={{root: this.props.classes.textDense}}\r\n                                        onChange={e => this.setState({falseText: e.target.value})}\r\n                                        type=\"text\"\r\n                                        className={this.props.classes.textField}\r\n                                        helperText={I18n.t('This text will be used when the state is FALSE')}\r\n                                    /> : null}\r\n                                </Paper>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    : null }\r\n                {this.state.id && this.state.type === 'boolean' ?\r\n                        <Accordion>\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography className={this.props.classes.heading}>{I18n.t('Colors')}</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.trueColorDefault}\r\n                                            onChange={e => this.setState({trueColorDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default TRUE value color')}\r\n                                    />\r\n                                    {!this.state.trueColorDefault ? <ColorPicker\r\n                                        color={this.state.trueColor}\r\n                                        style={{width: 200, display: 'inline-block'}}\r\n                                        name={I18n.t('TRUE color')}\r\n                                        onChange={color => this.setState({trueColor: color})}\r\n                                    /> : null}\r\n                                </Paper>\r\n                                {narrowWidth ? <br/> : null}\r\n                                <Paper className={this.props.classes.paper}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox\r\n                                            checked={this.state.falseColorDefault}\r\n                                            onChange={e => this.setState({falseColorDefault: e.target.checked})} />\r\n                                        }\r\n                                        label={I18n.t('Use default FALSE value color')}\r\n                                    />\r\n                                    {!this.state.falseColorDefault ? <ColorPicker\r\n                                        style={{width: 200, display: 'inline-block'}}\r\n                                        color={this.state.falseColor}\r\n                                        name={I18n.t('FALSE color')}\r\n                                        onChange={color => this.setState({falseColor: color})}\r\n                                    /> : null}\r\n                                </Paper>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">{I18n.t('Cancel')}</Button>\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || JSON.stringify(this.originalSettings) === JSON.stringify(this.getSettings())}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                >{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten } from '@material-ui/core/styles';\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress  from '@material-ui/core/LinearProgress';\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\nimport {MdAdd as IconAddId} from 'react-icons/md';\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\nimport AddEventDialog from '../Dialogs/AddEvent';\nimport AddIdDialog from '../Dialogs/AddId';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    instanceNotOnline: {\n        color: '#883333',\n        marginLeft: theme.spacing(1)\n    },\n    toolbarRoot: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    toolbarHighlight: theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    toolbarTitle: {\n        flex: '1 1 100%',\n    },\n    toolbarButton: {\n        marginRight: theme.spacing(1),\n        //height: 37.25,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    tableContainer: {\n        height: '100%',\n        overflow: 'auto'\n    },\n    table:{\n        width: 'auto',\n    },\n    tdIcons: {\n        textAlign: 'right',\n        marginRight: theme.spacing(1),\n        marginTop: 2,\n    },\n    tdTs: {\n        //width: 100\n        paddingRight: theme.spacing(1),\n    },\n    tdEvent: {\n        //width: `calc(100% - 250px - 52px)`,\n        paddingRight: theme.spacing(1),\n    },\n    tdVal: {\n        //width: 150,\n    },\n    tdDuration: {\n        //paddingRight: theme.spacing(1),\n    },\n    tdID: {\n        opacity: 0.3\n    },\n    tdEdit: {\n\n    },\n    editButton: {\n        height: 16,\n        opacity: 0.3,\n        '&:hover': {\n            opacity: 1,\n        }\n    },\n    toolbarButtonText: {\n        whiteSpace: 'nowrap',\n        marginLeft: 16,\n        marginRight: 16,\n        lineHeight: 24,\n        display: 'inline-block'\n    },\n});\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\n\n        if (!editAvailable) {\n            editEnabled = false;\n        } else if (!this.props.showEditButton || editEnabled === null) {\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\n        } else if (editEnabled === 'true') {\n            editEnabled = true;\n        } else if (editEnabled === 'false') {\n            editEnabled = false;\n        }\n\n        this.state = {\n            toast: '',\n            isInstanceAlive: false,\n            eventList: false,\n            eventRawList: false,\n            order: 'desc',\n            orderBy: 'ts',\n            selected: [],\n            showDeleteConfirm: false,\n            showAddIdDialog: false,\n            showAddEventDialog: false,\n            selectedId: '',\n            editEnabled,\n            editAvailable,\n            pdfInGeneration: false,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n        this.eventListId = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\n\n        this.headCells = [\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\n        ];\n    }\n\n    readStatus(cb) {\n        this.props.socket.getState(this.aliveId)\n            .then(aliveState =>\n                this.props.socket.getState(this.eventListId)\n                    .then(state =>\n                        this.props.socket.getState(this.eventRawListId)\n                            .then(rawState => {\n                                let eventList;\n                                try {\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\n                                } catch (e) {\n                                    eventList = [];\n                                }\n                                let eventRawList;\n                                try {\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\n                                } catch (e) {\n                                    eventRawList = [];\n                                }\n\n                                // merge together\n                                eventList.forEach(item => {\n                                    const raw = eventRawList.find(it => it.ts === item._id);\n                                    if (raw) {\n                                        item.stateId = raw.id;\n                                    }\n                                });\n\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\n                            })));\n    }\n\n    componentDidMount() {\n        this.readStatus(() => {\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\n        });\n   }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\n    }\n\n    onStateChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        } if (id === this.triggerPDFId) {\n            this.setState({pdfInGeneration: state && state.val});\n        } else if (id === this.eventListId) {\n            let eventList;\n            try {\n                eventList = state && state.val ? JSON.parse(state.val) : []\n            } catch (e) {\n                eventList = [];\n            }\n            // merge together\n            this.state.eventRawList && eventList.forEach(item => {\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\n                if (raw) {\n                    item.stateId = raw.id;\n                }\n            });\n            this.setState({eventList});\n        } else if (id === this.eventRawListId) {\n            let eventRawList;\n            try {\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\n            } catch (e) {\n                eventRawList = [];\n            }\n            // merge together\n            let eventList = null;\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\n                if (!item.stateId) {\n                    const raw = eventRawList.find(it => it.ts === item._id);\n                    if (raw) {\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\n                        eventList[i].stateId = raw.id;\n                    }\n                }\n            });\n            const newState = {eventRawList};\n            if (eventList) {\n                newState.eventList = eventList;\n            }\n            this.setState(newState);\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onRequestSort = (event, property) => {\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\n    };\n\n    renderHeader() {\n        const createSortHandler = (property) => event =>\n            this.onRequestSort(event, property);\n\n        return <TableHead>\n            <TableRow>\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\n                        disabled={!this.state.eventList.length}\n                        onChange={e => {\n                            if (e.target.checked) {\n                                const selected = this.state.eventList.map(n => n._id);\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\n                                this.setState({selected, selectedId});\n                            } else {\n                                this.setState({selected: [], selectedId: ''});\n                            }\n                        }}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>}\n                {\n                    this.props.native.icons ? <TableCell\n                        component=\"th\"\n                        className={this.props.classes.tdIcons}\n                        align=\"left\"\n                        padding=\"none\"\n                    /> : null\n                }\n\n                {this.headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        className={this.props.classes['td' + headCell.id[0].toUpperCase() + headCell.id.substring(1)]}\n                        align={headCell.align}\n                        padding=\"none\"\n                        component=\"th\"\n                        sortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\n                    >\n                        <TableSortLabel\n                            active={this.state.orderBy === headCell.id}\n                            direction={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {this.state.orderBy === headCell.id ?\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\n                                : null\n                            }\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n                {this.props.native.duration ?\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\n                        {I18n.t('Duration')}</TableCell>\n                    : null}\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\n            </TableRow>\n        </TableHead>;\n    }\n\n    triggerPdf() {\n        if (this.state.isInstanceAlive) {\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\n                .then(() => {\n                    let myWindow;\n                    if (!window.location.pathname.includes('adapter/')) {\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\n                    } else {\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\n                    }\n\n                    myWindow && myWindow.focus();\n                });\n        }\n    }\n\n    renderToolbar() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {this.state.selected.length} {I18n.t('selected')}\n                </Typography>\n            :\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    <span>{I18n.t('Event list')}</span>\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\n                </Typography>\n            }\n\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\n                <>\n                    <Tooltip title={I18n.t('Delete')}>\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                    {this.state.selectedId ?\n                        <Tooltip title={I18n.t('Edit settings for state')}>\n                            <IconButton aria-label=\"edit\" onClick={() => this.setState({showAddIdDialog: this.state.selectedId})}>\n                                <IconEdit />\n                            </IconButton>\n                        </Tooltip>\n                        : null}\n                </>\n                :\n                <>\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" onClick={() => this.setState({showAddIdDialog: true})}>\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\n                                <IconAddId style={{verticalAlign: 'middle'}}/>\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('State ID')}</span>}\n                            </div>\n                        </Fab>\n                    </Tooltip>}\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\n                        <span>\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\n                                </div>\n                            </Fab>\n                        </span>\n                    </Tooltip>}\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\n                        <Fab\n                            variant=\"extended\"\n                            aria-label=\"enable-edit\"\n                            size=\"small\"\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\n                            onClick={() => {\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\n                                this.setState({editEnabled: !this.state.editEnabled});\n                            }}>\n                            <IconEdit />\n                        </Fab>\n                    </Tooltip>}\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\n                        <span>\n                            <Fab\n                                variant=\"extended\"\n                                aria-label=\"generate-pdf\"\n                                size=\"small\"\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\n                                onClick={() => {\n                                    this.props.socket.setState(this.triggerPDFId, true, false);\n                                }}>\n                                <IconPdf />\n                            </Fab>\n                        </span>\n                    </Tooltip>}\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\n                            <IconReload />\n                        </Fab>\n                    </Tooltip>\n                </>\n            }\n        </Toolbar>;\n    }\n\n    stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) {\n                return order;\n            } else {\n                return a[1] - b[1];\n            }\n        });\n        return stabilizedThis.map(el => el[0]);\n    }\n\n    descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\n    }\n\n    handleClick(id) {\n        const selectedIndex = this.state.selected.indexOf(id);\n        let newSelected = [];\n        let selectedId = '';\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(this.state.selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(this.state.selected.slice(1));\n        } else if (selectedIndex === this.state.selected.length - 1) {\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                this.state.selected.slice(0, selectedIndex),\n                this.state.selected.slice(selectedIndex + 1),\n            );\n        }\n        if (newSelected.length === 1) {\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\n        }\n\n        this.setState({selected: newSelected, selectedId});\n    };\n\n    deleteEntries(cb) {\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\n            .then(state => {\n                let eventList;\n                try {\n                    eventList = state && state.val ? JSON.parse(state.val) : []\n                } catch (e) {\n                    eventList = [];\n                }\n\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\n\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\n                    .then(() =>\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\n            });\n    }\n\n    renderList() {\n        return <TableContainer className={this.props.classes.tableContainer}>\n                <Table\n                    className={this.props.classes.table}\n                    size=\"small\"\n                >\n                    {this.renderHeader()}\n                    <TableBody>\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\n                            .map((row, index) => {\n                                const isItemSelected = this.state.selected.includes(row._id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return <TableRow\n                                    hover\n                                    onClick={() => this.handleClick(row._id)}\n                                    style={row._style || undefined}\n                                    role=\"checkbox\"\n                                    aria-checked={isItemSelected}\n                                    tabIndex={-1}\n                                    key={row._id}\n                                    selected={isItemSelected}\n                                >\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            checked={isItemSelected}\n                                            inputProps={{ 'aria-labelledby': labelId }}\n                                        />\n                                    </TableCell>}\n                                    {this.props.native.icons ?\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\n                                            {row.icon ? <img src={row.icon} width={28} height={28} alt=\"\"/> : null}</TableCell>\n                                        : null}\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\n                                    {this.props.native.duration ?\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\n                                            {row.duration || ''}</TableCell>\n                                        : null}\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\n                                                e.stopPropagation();\n                                                this.setState({showAddIdDialog: row.stateId})\n                                            }}><IconEdit/></IconButton>\n                                        </Tooltip>: null}\n                                    </TableCell>}\n                                </TableRow>;\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>;\n    }\n\n    renderConfirmDialog() {\n        if (!this.state.showDeleteConfirm) {\n            return null;\n        } else {\n            return <ConfirmDialog\n                title={I18n.t('Please confirm')}\n                text={I18n.t('Are you sure to delete events from list?')}\n                ok={I18n.t('Ok')}\n                cancel={I18n.t('Cancel')}\n                icon={<IconQuestion/>}\n                onClose={result =>\n                    this.setState({showDeleteConfirm: false}, () =>\n                        result && this.deleteEntries())}\n                />\n        }\n    }\n\n    renderAddEventDialog() {\n        if (!this.state.showAddEventDialog) {\n            return null;\n        } else {\n            return <AddEventDialog\n                onClose={event => {\n                    this.setState({showAddEventDialog: false}, () =>\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\n                }}\n            />;\n        }\n    }\n\n    renderAddIdDialog() {\n        if (!this.state.showAddIdDialog) {\n            return null;\n        } else {\n            return <AddIdDialog\n                instance={this.props.instance}\n                adapterName={this.props.adapterName}\n                themeName={this.props.themeName}\n                themeType={this.props.themeType}\n                socket={this.props.socket}\n                native={this.props.native}\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\n                onClose={event => {\n                    this.setState({showAddIdDialog: false}, () =>\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\n                }}\n            />;\n        }\n    }\n\n    render() {\n        return (\n            <Paper className={ this.props.classes.tab }>\n                {this.renderToolbar()}\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\n                {this.renderToast()}\n                {this.renderConfirmDialog()}\n                {this.renderAddEventDialog()}\n                {this.renderAddIdDialog()}\n            </Paper>\n        );\n    }\n}\n\nList.propTypes = {\n    editAvailable: PropTypes.bool,\n    editEnabled: PropTypes.bool,\n    showEditButton: PropTypes.bool,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    socket: PropTypes.object.isRequired,\n    themeName: PropTypes.string,\n    themeType: PropTypes.string,\n    native: PropTypes.object.isRequired,\n};\n\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ColorPicker from '../Components/ColorPicker';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 130,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    this.lastElement.focus();\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        const expanded = [...this.state.expanded];\r\n        if (ex) {\r\n            !expanded.includes(name) && expanded.push(name);\r\n        } else {\r\n            const pos = expanded.indexOf(name);\r\n            pos !== -1 && expanded.splice(pos, 1);\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <FormControlLabel\r\n                key=\"pdfButton\"\r\n                control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                label={I18n.t('Show PDF generate button on list')}\r\n            />\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={'/files/eventlist/report.pdf?q=' + this.state.random} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogError from \"@iobroker/adapter-react/Dialogs/Error\";\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 150,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n});\r\n\r\nconst SETTINGS = {\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 130,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass Messengers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.messangers') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            showHint: false,\r\n            toast: '',\r\n            errorText: '',\r\n            messageText: '',\r\n            telegramInstances: [],\r\n            whatsappInstances: [],\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n        this.props.socket.getAdapterInstances('telegram')\r\n            .then(telegram => this.props.socket.getAdapterInstances('whatsapp-cmb')\r\n                .then(whatsapp => {\r\n                    this.setState({telegramInstances: telegram.map(item => item._id.split('.').pop()), whatsappInstances: whatsapp.map(item => item._id.split('.').pop())});\r\n                }));\r\n    }\r\n\r\n    showError(text) {\r\n        this.setState({errorText: text});\r\n    }\r\n\r\n    renderError() {\r\n        if (!this.state.errorText) {\r\n            return null;\r\n        }\r\n        return <DialogError text={this.state.errorText} title={I18n.t('Error')} onClose={() => this.setState({errorText: ''})}/>;\r\n    }\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) {\r\n            return null;\r\n        }\r\n        return <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />;\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        const expanded = [...this.state.expanded];\r\n        if (ex) {\r\n            !expanded.includes(name) && expanded.push(name);\r\n        } else {\r\n            const pos = expanded.indexOf(name);\r\n            pos !== -1 && expanded.splice(pos, 1);\r\n        }\r\n        window.localStorage.setItem('eventlist.app.messangers', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderTelegram() {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('telegram')}\r\n            onChange={(event, ex) => this.onExpand('telegram', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: this.props.classes.accordionContent}}>Telegram</AccordionSummary>\r\n            <AccordionDetails>\r\n                <FormControl className={this.props.classes.field}>\r\n                    <InputLabel>{I18n.t('Instance')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.telegram || 'none'}\r\n                        onChange={e => this.props.onChange('telegram', e.target.value === 'none' ? '' : e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"none\">{I18n.t('Disabled')}</MenuItem>\r\n                        {this.state.telegramInstances.map(i => <MenuItem value={i.toString()}>telegram.{i}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                {this.props.native.telegram !== '' && this.props.native.telegram !== null && this.props.native.telegram !== undefined && <TextField\r\n                    key=\"telegramUser\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Telegram user')}\r\n                    value={this.props.native.telegramUser}\r\n                    onChange={e => this.props.onChange('telegramUser', e.target.value)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    }\r\n\r\n    renderWhatsApp() {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('whatsapp')}\r\n            onChange={(event, ex) => this.onExpand('whatsapp', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: this.props.classes.accordionContent}}>WhatsApp</AccordionSummary>\r\n            <AccordionDetails>\r\n                <FormControl className={this.props.classes.field}>\r\n                    <InputLabel>{I18n.t('Instance')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.whatsapp || 'none'}\r\n                        onChange={e => this.props.onChange('whatsapp', e.target.value === 'none' ? '' : e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"none\">{I18n.t('Disabled')}</MenuItem>\r\n                        {this.state.whatsappInstances.map(i => <MenuItem value={i.toString()}>whatsapp-cmb.{i}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                {this.props.native.whatsapp !== '' && this.props.native.whatsapp !== null && this.props.native.whatsapp !== undefined && <TextField\r\n                    key=\"whatsappPhone\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('WhatsApp phone')}\r\n                    value={this.props.native.whatsappPhone}\r\n                    onChange={e => this.props.onChange('whatsappPhone', e.target.value)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                {this.renderTelegram()}\r\n                {this.renderWhatsApp()}\r\n                {this.renderToast()}\r\n                {this.renderMessage()}\r\n                {this.renderError()}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nMessengers.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Messengers);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\nimport TabMessengers from './Tabs/Messengers';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'messengers') {\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                    <Tab label={I18n.t('Messengers')} data-name=\"messengers\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'messengers' && <TabMessengers\r\n                    key=\"messengers\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}