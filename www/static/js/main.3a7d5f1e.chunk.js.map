{"version":3,"sources":["../node_modules/@iobroker/adapter-react/assets/rooms sync /^/.*$","../node_modules/@iobroker/adapter-react/assets/devices sync /^/.*$","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","assets/telegram.svg","assets/pushover.svg","Components/EditState.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MessengerSelect","props","state","selected","instances","adapterName","loadedAdapterName","names","loadData","this","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","item","title","common","titleLang","name","en","setState","_id","split","pop","setTimeout","length","FormControl","className","classes","formControl","style","InputLabel","label","t","Select","multiple","value","onChange","event","target","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","i","MenuItem","Checkbox","checked","includes","ListItemText","primary","CircularProgress","React","Component","withStyles","theme","Options","onAliveChanged","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","IconButton","aria-label","color","close","onClick","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","TextField","maxLength","type","inputProps","min","max","margin","dateFormat","Button","variant","buttonFormat","buttonIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","undefined","stateId","icons","duration","deleteAlarmsByDisable","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","display","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","openAbove","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","marginBottom","button","card","maxWidth","textAlign","media","height","verticalAlign","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","marginTop","whiteSpace","AddEventDialog","showTime","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","disabled","DEFAULT_TEMPLATE","DISABLED_TEXT","EditState","onStateChanged","settings","simulateState","imagePrefix","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","getSystemConfig","systemConfig","isFloatComma","word","lang","translations","w","ownColor","states","stateVal","find","defColor","ColorPicker","getColor","icon","ownIcon","defIcon","defaultBooleanIconTrue","defaultBooleanIconFalse","defText","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","eventDefault","unit","duration2text","fromNow","ms","withSpaces","Math","round","floor","hours","minutes","seconds","forEach","isBoolean","original","toUpperCase","flex","reading","setSettings","Paper","paper","root","textDense","attr","getSettings","width100minus32","count","telegram","whatsAppCMB","pushover","messengers","src","Telegram","alt","messengersIcon","clsx","whatsAppIcon","Pushover","alarmsOnly","messagesInAlarmsOnly","defaultMessengers","exampleColor","getExampleColor","Fragment","examplePaper","exampleTitle","exampleText","getExampleIcon","exampleIcon","buildExample","Switch","width100","changesOnly","iconOpenAll","iconCloseAll","renderStateSettings","a","b","renderState","renderMessengers","newState","changed","trueState","falseState","newVal","Array","nState","objStates","parseStates","_st","obj","parts","getObject","exists","getName","custom","newSettings","addBooleanStates","addNumericStates","extractIconAndColor","result","curSettings","enabled","it","withWidth","background","palette","marginLeft","padding","flexGrow","float","AddIdDialog","propsId","ids","currentId","showSelectId","confirmExit","confirmRemove","unknownIds","originalSettings","updateIds","cb","shift","setObject","writeSettings","ok","cancel","isYes","removeSettings","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","noWait","filter","trim","readTypeTimer","clearTimeout","readSettingsFromServer","console","error","tabs","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","field","unknownId","textFieldWithButton","LinearProgress","renderConfirmExit","renderConfirmRemove","renderSelectId","SelectStateDialog","promises","readIds","Promise","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","startsWith","getSelectIdIcon","ListItem","listItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","size","dialogContent","dense","renderListItem","dark","light","opacity","main","IconFilter","viewBox","xmlns","fill","stroke","d","serialPromises","_resolve","_results","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","filterStates","showEditButton","location","Router","getLocation","showDeleteConfirm","showSelectState","dialog","showAddIdDialog","showAddEventDialog","selectedId","stateIds","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","cell","component","tdIcons","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","pathname","now","focus","catch","filterDiv","filterIcon","filterClearIcon","filterControl","onOpen","filterCounts","filterSecondary","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","renderFilter","Tooltip","doNavigate","toolbarButton","Fab","buttonAddState","toolbarButtonText","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","handleClick","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","dr","assign","tdDurationRunning","editButton","stopPropagation","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","border","clip","position","top","animationName","animationDuration","animationIterationCount","lineHeight","cursor","left","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","bottom","right","PdfSettings","random","triggerTimer","rgb2hex","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","fieldWide","toggleOrientation","onFocus","Grid","xs","md","lg","container","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","isWeb","socketUrl","selectedTab","RGB2hex","savedNative","AppBar","getSelectedTab","parentNode","dataset","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","match","getThemeName","log","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a7d5f1e.chunk.js","sourcesContent":["var map = {\n\t\"./Anteroom.svg\": 518,\n\t\"./Attic.svg\": 519,\n\t\"./Balcony.svg\": 520,\n\t\"./Barn.svg\": 521,\n\t\"./Basement.svg\": 522,\n\t\"./Bathroom.svg\": 523,\n\t\"./Bedroom.svg\": 524,\n\t\"./Boiler Room.svg\": 525,\n\t\"./Carport.svg\": 526,\n\t\"./Cellar.svg\": 527,\n\t\"./Chamber.svg\": 528,\n\t\"./Corridor.svg\": 529,\n\t\"./Dining Area.svg\": 530,\n\t\"./Dining Room.svg\": 531,\n\t\"./Dining.svg\": 532,\n\t\"./Dressing Room.svg\": 533,\n\t\"./Driveway.svg\": 534,\n\t\"./Entrance.svg\": 535,\n\t\"./Equipment Room.svg\": 536,\n\t\"./Front Yard.svg\": 537,\n\t\"./Gallery.svg\": 538,\n\t\"./Garage.svg\": 539,\n\t\"./Garden.svg\": 540,\n\t\"./Ground Floor.svg\": 541,\n\t\"./Guest Bathroom.svg\": 542,\n\t\"./Guest Room.svg\": 543,\n\t\"./Gym.svg\": 544,\n\t\"./Hall.svg\": 545,\n\t\"./Home Theater.svg\": 546,\n\t\"./Kitchen.svg\": 547,\n\t\"./Laundry Room.svg\": 548,\n\t\"./Living Area.svg\": 549,\n\t\"./Living Room.svg\": 550,\n\t\"./Locker Room.svg\": 551,\n\t\"./Nursery.svg\": 552,\n\t\"./Office.svg\": 553,\n\t\"./Outdoors.svg\": 554,\n\t\"./Playroom.svg\": 555,\n\t\"./Pool.svg\": 556,\n\t\"./Rear Wall.svg\": 557,\n\t\"./Second Floor.svg\": 558,\n\t\"./Shed.svg\": 559,\n\t\"./Sleeping Area.svg\": 560,\n\t\"./Stairway.svg\": 561,\n\t\"./Stairwell.svg\": 562,\n\t\"./Storeroom.svg\": 563,\n\t\"./Summer House.svg\": 564,\n\t\"./Swimming Pool.svg\": 565,\n\t\"./Terrace.svg\": 566,\n\t\"./Toilet.svg\": 567,\n\t\"./Upstairs.svg\": 568,\n\t\"./Wardrobe.svg\": 569,\n\t\"./Washroom.svg\": 570,\n\t\"./Wc.svg\": 571,\n\t\"./Windscreen.svg\": 572,\n\t\"./Workshop.svg\": 573,\n\t\"./Workspace.svg\": 574,\n\t\"./list\": 213,\n\t\"./list.json\": 213,\n\t\"./names.txt\": 575,\n\t\"./parseNames\": 309,\n\t\"./parseNames.d.ts\": 576,\n\t\"./parseNames.js\": 309\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 517;","var map = {\n\t\"./Alarm Systems.svg\": 578,\n\t\"./Amplifier.svg\": 579,\n\t\"./Awnings.svg\": 580,\n\t\"./Battery Status.svg\": 581,\n\t\"./Ceiling Spotlights.svg\": 582,\n\t\"./Chandelier.svg\": 583,\n\t\"./Climate.svg\": 584,\n\t\"./Coffee Makers.svg\": 585,\n\t\"./Cold Water.svg\": 586,\n\t\"./Computer.svg\": 587,\n\t\"./Consumption.svg\": 588,\n\t\"./Curtains.svg\": 589,\n\t\"./Dishwashers.svg\": 590,\n\t\"./Doors.svg\": 591,\n\t\"./Doorstep.svg\": 592,\n\t\"./Dryer.svg\": 593,\n\t\"./Fan.svg\": 594,\n\t\"./Floor Lamps.svg\": 595,\n\t\"./Garage Doors.svg\": 596,\n\t\"./Gates.svg\": 597,\n\t\"./Hairdryer.svg\": 598,\n\t\"./Handle.svg\": 599,\n\t\"./Hanging Lamps.svg\": 600,\n\t\"./Heater.svg\": 601,\n\t\"./Hoods.svg\": 602,\n\t\"./Hot Water.svg\": 603,\n\t\"./Humidity.svg\": 604,\n\t\"./Iron.svg\": 605,\n\t\"./Irrigation.svg\": 606,\n\t\"./Led Strip.svg\": 607,\n\t\"./Light.svg\": 608,\n\t\"./Lightings.svg\": 609,\n\t\"./Lock.svg\": 610,\n\t\"./Louvre.svg\": 611,\n\t\"./Mowing Machine.svg\": 612,\n\t\"./Music.svg\": 613,\n\t\"./Outdoor Blinds.svg\": 614,\n\t\"./People.svg\": 615,\n\t\"./Pool.svg\": 616,\n\t\"./Power Consumption.svg\": 617,\n\t\"./Printer.svg\": 618,\n\t\"./Pump.svg\": 619,\n\t\"./Receiver.svg\": 620,\n\t\"./Sconces.svg\": 621,\n\t\"./Security.svg\": 622,\n\t\"./Shading.svg\": 623,\n\t\"./Shutters.svg\": 624,\n\t\"./SmokeDetector.svg\": 625,\n\t\"./Sockets.svg\": 626,\n\t\"./Speaker.svg\": 627,\n\t\"./Stove.svg\": 628,\n\t\"./Table Lamps.svg\": 629,\n\t\"./Temperature Sensors.svg\": 630,\n\t\"./Tv.svg\": 631,\n\t\"./Vacuum Cleaner.svg\": 632,\n\t\"./Ventilation.svg\": 633,\n\t\"./Washing Machines.svg\": 634,\n\t\"./Water Consumption.svg\": 635,\n\t\"./Water Heater.svg\": 636,\n\t\"./Water.svg\": 637,\n\t\"./Weather.svg\": 638,\n\t\"./Window.svg\": 639,\n\t\"./list\": 212,\n\t\"./list.json\": 212,\n\t\"./names.txt\": 640,\n\t\"./parseNames\": 310,\n\t\"./parseNames.d.ts\": 641,\n\t\"./parseNames.js\": 310\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 577;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\n\r\nimport MessengerSelect from  '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        minWidth: 300,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    cannotUse: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n    },\r\n    hintUnsaved: {\r\n        fontSize: 12,\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    checkBoxLabel: {\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            inAction: false,\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            errorWithPercent: false,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n\r\n        this.props.socket.getState(this.aliveId).then(state =>\r\n            this.setState({isInstanceAlive: state && state.val}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{'aria-describedby': 'message-id'}}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <form className={ this.props.classes.tab }>\r\n            <Logo\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\r\n                <TextField\r\n                    label={ I18n.t('Max list length') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.maxLength }\r\n                    type=\"number\"\r\n                    inputProps={{min: 1, max: 1000}}\r\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Date format') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.dateFormat }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                        <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Format description')}\r\n                </Button>\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Show absolute time after seconds') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.relativeTime }\r\n                    type=\"number\"\r\n                    inputProps={{min: 0, max: 140000}}\r\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\r\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\r\n                    margin=\"normal\"\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.stateId === undefined ? true : this.props.native.stateId} onChange={e => this.props.onChange('stateId', e.target.checked)} />}\r\n                    label={I18n.t('Show state ID in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\r\n                    label={I18n.t('Show icons in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\r\n                    label={I18n.t('Show duration in the list')}\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.deleteAlarmsByDisable || false} onChange={e => this.props.onChange('deleteAlarmsByDisable', e.target.checked)} />}\r\n                    label={I18n.t('Remove alarm events from list by the alarm mode deactivating')}\r\n                />\r\n\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_boolean')}\r\n                    onChange={() => this.onToggle('state_boolean')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <TextField\r\n                            label={ I18n.t('Default event text for boolean') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanText }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\r\n                            margin=\"normal\"\r\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            label={ I18n.t('Default text by TRUE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextTrue }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <TextField\r\n                            label={ I18n.t('Default text by FALSE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextFalse }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        <br/>\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorTrue}\r\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                            name={I18n.t('Default color by TRUE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorFalse}\r\n                            style={{width: 300, display: 'inline-block'}}\r\n                            name={I18n.t('Default color by FALSE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <TextField\r\n                    label={ I18n.t('Default event text for non boolean states') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.defaultNonBooleanText }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\r\n                    margin=\"normal\"\r\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                />\r\n                <br/>\r\n                <FormControl className={this.props.classes.input}>\r\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.language || 'system'}\r\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\r\n                    >\r\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\r\n                        <MenuItem value=\"en\">English</MenuItem>\r\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\r\n                        <MenuItem value=\"ru\">русский</MenuItem>\r\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\r\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\r\n                        <MenuItem value=\"fr\">français</MenuItem>\r\n                        <MenuItem value=\"it\">Italiano</MenuItem>\r\n                        <MenuItem value=\"es\">Espanol</MenuItem>\r\n                        <MenuItem value=\"pl\">Polski</MenuItem>\r\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_messengers')}\r\n                    onChange={() => this.onToggle('state_messengers')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Telegram') }\r\n                            adapterName={'telegram'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultTelegram }\r\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('WhatsApp-CMB') }\r\n                            adapterName={'whatsapp-cmb'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultWhatsAppCMB }\r\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Pushover') }\r\n                            adapterName={'pushover'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultPushover }\r\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","export default __webpack_public_path__ + \"static/media/telegram.2febf30d.svg\";","export default __webpack_public_path__ + \"static/media/pushover.2ec57e2c.svg\";","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\r\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\r\nimport Telegram from '../assets/telegram.svg';\r\nimport Pushover from '../assets/pushover.svg';\r\n\r\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: 'calc(100% - ' + theme.spacing(2) + 'px)',\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    flex: {\r\n        flexGrow: 1,\r\n    },\r\n    messengersIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    whatsAppIcon: {\r\n        color: '#45c655'\r\n    },\r\n    width100: {\r\n        width: '100%',\r\n    },\r\n    width100minus32: {\r\n        width: 'calc(100% - 32px)',\r\n    },\r\n    iconOpenAll: {\r\n        float: 'right',\r\n        marginRight: 4,\r\n    },\r\n    iconCloseAll: {\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\nconst DISABLED_TEXT = '-------------';\r\n\r\nclass EditState extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            settings: JSON.parse(JSON.stringify(this.props.settings)),\r\n            expanded,\r\n            simulateState: '',\r\n        };\r\n\r\n        this.imagePrefix = this.props.imagePrefix || './files';\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => this.isFloatComma = systemConfig.common.isFloatComma);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.props.id, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.props.id, this.onStateChanged);\r\n    }\r\n\r\n    static addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    static addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = EditState.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) =>\r\n        this.setState({state: state || null});\r\n\r\n    static extractIconAndColor(socket, obj) {\r\n        if (obj && obj.common && obj.common.icon) {\r\n            return {icon: obj.common.icon, color: obj.common.color};\r\n        } else {\r\n            const parts = obj._id.split('.');\r\n            parts.pop();\r\n\r\n            return socket.getObject(parts.join('.'))\r\n                .then(obj => {\r\n                    if (obj && obj.type === 'channel') {\r\n                        if (obj.common && obj.common.icon) {\r\n                            return {icon: obj.common.icon, color: obj.common.color};\r\n                        } else {\r\n                            const parts = obj._id.split('.');\r\n                            parts.pop();\r\n                            return socket.getObject(parts.join('.'))\r\n                                .then(obj => {\r\n                                    if (obj && (obj.type === 'channel' || obj.type === 'device')) {\r\n                                        if (obj.common && obj.common.icon) {\r\n                                            return {icon: obj.common.icon, color: obj.common.color};\r\n                                        } else {\r\n                                            return null;\r\n                                        }\r\n                                    } else {\r\n                                        return null;\r\n                                    }\r\n                                });\r\n                        }\r\n                    } else if (obj && obj.type === 'device' && obj.common) {\r\n                        return {icon: obj.common.icon, color: obj.common.color};\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    static readSettingsFromServer(socket, lang, native, namespace, id) {\r\n        return socket.getObject(id)\r\n            .then(obj => {\r\n                const settings = {\r\n                    type:        (obj && obj.common && obj.common.type) || '',\r\n                    name:        EditState.getName(obj, lang),\r\n                    unit:        (obj && obj.common && obj.common.unit) || '',\r\n                    whatsAppCMB: [],\r\n                    pushover:    [],\r\n                    telegram:    [],\r\n                    event:       '',\r\n                    icon:        '',\r\n                    color:       '',\r\n                    alarmsOnly:  false,\r\n                    messagesInAlarmsOnly: false,\r\n                };\r\n\r\n                let exists;\r\n\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[namespace]) {\r\n                    const newSettings = obj.common.custom[namespace];\r\n                    exists = true;\r\n\r\n                    settings.event                = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                    settings.eventDefault         = newSettings.event === DEFAULT_TEMPLATE;\r\n                    settings.icon                 = newSettings.icon;\r\n                    settings.color                = newSettings.color;\r\n                    settings.states               = newSettings.states;\r\n                    settings.alarmsOnly           = newSettings.alarmsOnly;\r\n                    settings.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                    settings.whatsAppCMB          = newSettings.whatsAppCMB || [];\r\n                    settings.pushover             = newSettings.pushover    || [];\r\n                    settings.telegram             = newSettings.telegram    || [];\r\n\r\n                    settings.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                    if (settings.type === 'boolean') {\r\n                        EditState.addBooleanStates(settings);\r\n                        settings.simulateState = false;\r\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                        EditState.addNumericStates(settings, obj.common.states);\r\n                        settings.simulateState = null;\r\n                    } else {\r\n                        settings.states = null;\r\n                        settings.simulateState = null;\r\n                    }\r\n                } else {\r\n                    settings.defaultMessengers = true;\r\n                    settings.whatsAppCMB = native.defaultWhatsAppCMB || [];\r\n                    settings.pushover    = native.defaultPushover    || [];\r\n                    settings.telegram    = native.defaultTelegram    || [];\r\n\r\n                    exists = false;\r\n                    if (settings.type === 'boolean') {\r\n                        EditState.addBooleanStates(settings);\r\n                        settings.simulateState = false;\r\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                        EditState.addNumericStates(settings, obj.common.states);\r\n                        settings.simulateState = null;\r\n                    } else {\r\n                        settings.states = null;\r\n                        settings.simulateState = null;\r\n                    }\r\n                }\r\n\r\n                return EditState.extractIconAndColor(socket, obj)\r\n                    .then(result => {\r\n                        if (result && result.icon) {\r\n                            // we must get from /icons/113_hmip-psm_thumb.png => /adapter/hm-rpc/icons/113_hmip-psm_thumb.png\r\n                            // or                                                  /hm-rpc.admin/icons/113_hmip-psm_thumb.png\r\n                            settings.ownIcon = `/adapter/${obj._id.split('.')[0]}${result.icon}`;\r\n                        }\r\n                        if (result && result.color) {\r\n                            settings.ownColor = result.color;\r\n                        }\r\n                        return {settings, exists};\r\n                    });\r\n            });\r\n    }\r\n\r\n    static getName(obj, lang) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[lang] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = this.state.ownColor || '';\r\n        if (this.state.settings.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.settings.color && ColorPicker.getColor(this.state.settings.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.settings.icon || this.state.ownIcon;\r\n        let icon = defIcon || '';\r\n        if (this.state.settings.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defIcon) {\r\n                icon = (stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse) || this.state.ownIcon || '';\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.settings.type === 'boolean' ? false : null);\r\n        if (this.state.settings.states) {\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.disabled) {\r\n                return DISABLED_TEXT;\r\n            }\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (valText === DISABLED_TEXT) {\r\n            return I18n.t('DISABLED');\r\n        }\r\n\r\n        if (this.state.settings.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.settings.eventDefault && !this.state.settings.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.settings.eventDefault && !this.state.settings.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.settings.event === DEFAULT_TEMPLATE || this.state.settings.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.settings.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.settings.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.settings.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.settings.unit) {\r\n                valWithUnit += this.state.settings.unit;\r\n            }\r\n            if (this.state.settings.states) {\r\n                if (!this.state.settings.eventDefault && !this.state.settings.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        if (eventTemplate.includes('%t')) {\r\n            eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n        }\r\n\r\n        if (eventTemplate.includes('%r')) {\r\n            eventTemplate = eventTemplate.replace(/%r/g, this.state.state ? moment(new Date(this.state.state.ts)).fromNow() : moment(new Date()).fromNow());\r\n        }\r\n\r\n        if (eventTemplate.includes('%o')) {\r\n            eventTemplate = eventTemplate.replace(/%o/g, '_');\r\n        }\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    static getSettings(settings) {\r\n        const curSettings = {\r\n            enabled: true,\r\n            event: settings.eventDefault ? DEFAULT_TEMPLATE : settings.event,\r\n            changesOnly: !!settings.changesOnly,\r\n            defaultMessengers: !!settings.defaultMessengers\r\n        };\r\n\r\n        if (settings.color && ColorPicker.getColor(settings.color)) {\r\n            curSettings.color = ColorPicker.getColor(settings.color);\r\n        }\r\n        if (settings.icon) {\r\n            curSettings.icon = settings.icon;\r\n        }\r\n        if (settings.alarmsOnly) {\r\n            curSettings.alarmsOnly = true;\r\n        }\r\n        if (settings.messagesInAlarmsOnly) {\r\n            curSettings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (settings.pushover && settings.pushover.length && !settings.defaultMessengers) {\r\n            curSettings.pushover = settings.pushover;\r\n        }\r\n        if (settings.telegram && settings.telegram.length && !settings.defaultMessengers) {\r\n            curSettings.telegram = settings.telegram;\r\n        }\r\n        if (settings.whatsAppCMB && settings.whatsAppCMB.length && !settings.defaultMessengers) {\r\n            curSettings.whatsAppCMB = settings.whatsAppCMB;\r\n        }\r\n\r\n        settings.states && settings.states.forEach(item => {\r\n            curSettings.states = curSettings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.disabled)  {\r\n                it.disabled = true;\r\n                curSettings.states.push(it);\r\n                return;\r\n            }\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            curSettings.states.push(it);\r\n        });\r\n\r\n        return curSettings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        let expanded;\r\n        if (id === false) {\r\n            expanded = [];\r\n        } else if (id === true) {\r\n            expanded = ['state_settings', 'state_messengers'];\r\n            this.state.settings.states && this.state.settings.states.forEach(state => expanded.push('state_' + state.val));\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            const pos = expanded.indexOf(id);\r\n            if (pos !== -1)  {\r\n                expanded.splice(pos, 1);\r\n            } else {\r\n                expanded.push(id);\r\n                expanded.sort();\r\n            }\r\n        }\r\n\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.settings.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\r\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</span></Typography>\r\n                <div className={this.props.classes.flex}/>\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        checked={!!state.disabled}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].disabled = e.target.checked;\r\n                            this.setSettings('states', states);\r\n                        }} />\r\n                    }\r\n                    label={I18n.t('Disable logging')}\r\n                />\r\n            </AccordionSummary>\r\n            {!state.disabled && <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        disabled={this.props.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setSettings('states', states);\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            disabled={this.props.reading}\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].color = color;\r\n                                this.setSettings('states', states);\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        disabled={this.props.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.props.id + this.state.settings.type + state.original}\r\n                        color={color}\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={icon => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].icon = icon;\r\n                            this.setSettings('states', states);\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    setSettings(attr, value) {\r\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\r\n        settings[attr] = value;\r\n        this.setState({settings}, () =>\r\n            this.props.onChange(this.props.id, EditState.getSettings(settings)));\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        const color = ColorPicker.getColor(this.state.settings.color);\r\n        const text = this.state.settings.eventDefault ? (this.state.settings.type === 'boolean' ? this.props.native.defaultBooleanText : this.props.native.defaultNonBooleanText) : this.state.settings.event || I18n.t('Use the specific state texts');\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{root: this.props.classes.width100minus32}}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}\r\n                    {!narrowWidth ? <span style={{color: color || undefined, fontStyle: 'italic'}}>{' - ' + text}</span> : null}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.settings.eventDefault}\r\n                            onChange={e => this.setSettings('eventDefault', e.target.checked)} />\r\n                        }\r\n                        label={<span>\r\n                            <span>{I18n.t('Default text')}</span>\r\n                        </span>}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.settings.eventDefault ? <TextField\r\n                        disabled={this.props.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.settings.event}\r\n                        onChange={e => this.setSettings('event', e.target.value)}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={ this.state.settings.type === 'number' ?\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\r\n                            :\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        disabled={this.props.reading}\r\n                        color={this.state.settings.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setSettings('color', color)}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        disabled={this.props.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.props.id + this.state.settings.type}\r\n                        color={this.state.settings.color}\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.settings.icon}\r\n                        onChange={icon => this.setSettings('icon', icon)}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const count = (this.state.settings.telegram ? this.state.settings.telegram.length : 0) +\r\n            (this.state.settings.whatsAppCMB ? this.state.settings.whatsAppCMB.length : 0) +\r\n            (this.state.settings.pushover ? this.state.settings.pushover.length : 0);\r\n\r\n        const messengers = [\r\n            this.state.settings.telegram    && this.state.settings.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.settings.telegram.join(', ')    + ')'}</span>] : null,\r\n            this.state.settings.whatsAppCMB && this.state.settings.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.settings.whatsAppCMB.join(', ') + ')'}</span>] : null,\r\n            this.state.settings.pushover    && this.state.settings.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.settings.pushover.join(', ')    + ')'}</span>] : null,\r\n        ];\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\r\n                    {messengers}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        disabled={!!this.state.settings.alarmsOnly}\r\n                        checked={!!(this.state.settings.messagesInAlarmsOnly || this.state.settings.alarmsOnly)}\r\n                        onChange={e => this.setSettings('messagesInAlarmsOnly', e.target.checked)} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        checked={this.state.settings.defaultMessengers}\r\n                        onChange={e => this.setSettings('defaultMessengers', e.target.checked)} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('telegram', value)}\r\n                    selected={ this.state.settings.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('whatsAppCMB', value)}\r\n                    selected={ this.state.settings.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('pushover', value)}\r\n                    selected={ this.state.settings.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        let val = '';\r\n        if (this.state.state && this.state.state.val) {\r\n            if (this.state.state.val === null || this.state.state.val === undefined) {\r\n                val = ' - --';\r\n            } else {\r\n                val = ' - ' + this.state.state.val.toString();\r\n            }\r\n        }\r\n\r\n        const exampleColor = this.getExampleColor() || undefined;\r\n\r\n        return <React.Fragment>\r\n\r\n            {this.state.settings.type ?\r\n                <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n                    <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                    <span className={this.props.classes.exampleText} style={{color: exampleColor}}>\r\n                        {this.props.native.icons ? <Image\r\n                            src={this.getExampleIcon()}\r\n                            className={this.props.classes.exampleIcon}\r\n                            color={exampleColor}\r\n                            imagePrefix={this.imagePrefix}\r\n                        />: null}\r\n                        {this.buildExample()}\r\n                    </span>\r\n                    {this.state.settings.type === 'boolean' ?\r\n                        <>\r\n                            <br/>\r\n                            <FormControlLabel\r\n                                disabled={this.props.reading}\r\n                                control={<Switch\r\n                                    checked={!!this.state.simulateState}\r\n                                    onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                }\r\n                                label={I18n.t('Toggle state to simulate')}\r\n                            />\r\n                        </>\r\n                        : null\r\n                    }\r\n                    {this.state.settings.type === 'number' && this.state.settings.states ?\r\n                        <>\r\n                            <br/>\r\n                            <FormControl className={this.props.classes.formControl} disabled={this.props.reading}>\r\n                                <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                <Select\r\n                                    value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                    onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\r\n                                    {this.state.settings.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </>\r\n                        : null\r\n                    }\r\n                </Paper>\r\n                : null }\r\n\r\n            {this.state.settings.type ?\r\n                <div className={this.props.classes.width100}>\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.settings.changesOnly}\r\n                            onChange={e => this.setSettings('changesOnly', e.target.checked)} />\r\n                        }\r\n                        label={I18n.t('Only changes')}\r\n                    />\r\n                    {narrowWidth && <br/>}\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={!!this.state.settings.alarmsOnly}\r\n                            onChange={e => this.setSettings('alarmsOnly', e.target.checked)} />\r\n                        }\r\n                        label={I18n.t('Only in alarm state')}\r\n                    />\r\n                    <IconButton disabled={this.state.expanded.length === (this.state.settings.states ? this.state.settings.states.length : 0 ) + 2} className={this.props.classes.iconOpenAll} onClick={() => this.onToggle(true)}><ExpandMoreIcon/></IconButton>\r\n                    <IconButton disabled={!this.state.expanded.length} className={this.props.classes.iconCloseAll} onClick={() => this.onToggle(false)}> <ExpandLessIcon/></IconButton>\r\n                </div> : null}\r\n            {this.renderStateSettings()}\r\n            {this.state.settings.states ? this.state.settings.states.sort((a, b) => a.val > b.val ? 1 : (a.val < b.val ? -1 : 0)).map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n            {this.renderMessengers(narrowWidth)}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nEditState.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    reading: PropTypes.bool,\r\n    settings: PropTypes.object,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(EditState));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport EditState from '../Components/EditState';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\n\r\nconst styles = theme => ({\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.propsId = this.props.id !== 'true' ? this.props.id : '';\r\n\r\n        this.state = {\r\n            ids: [],\r\n            currentId: this.propsId || '',\r\n            showSelectId: !this.propsId,\r\n            exists: {},\r\n            settings: {},\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n            unknownIds: {},\r\n        };\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.originalSettings = {};\r\n        setTimeout(() => this.updateIds(this.propsId, true), 100);\r\n    }\r\n\r\n    writeSettings(ids, cb) {\r\n        if (!ids || !ids.length) {\r\n            cb && cb();\r\n        } else {\r\n            const id = ids.shift();\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    if (obj && obj.common) {\r\n                        obj.common.custom = obj.common.custom || {};\r\n                        const newSettings = EditState.getSettings(this.state.settings[id] || {enabled: true, event: DEFAULT_TEMPLATE, changesOnly: true, defaultMessengers: true});\r\n                        // if changed\r\n                        if (JSON.stringify(newSettings) !== JSON.stringify(obj.common.custom[this.namespace])) {\r\n                            obj.common.custom[this.namespace] = newSettings;\r\n                            return this.props.socket.setObject(obj._id, obj)\r\n                                .then(() => setTimeout(() => this.writeSettings(ids, cb), 0));\r\n                        }\r\n                    }\r\n                    setTimeout(() => this.writeSettings(ids, cb), 0);\r\n                });\r\n        }\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.ids[0])\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.ids[0], obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.ids.find(id => JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]))) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            imagePrefix={'../..'}\r\n            showExpertButton={true}\r\n            multiSelect={true}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.ids}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={ids => this.updateIds(ids, true)}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    onChange(id, newSettings) {\r\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\r\n        settings[id] = JSON.parse(JSON.stringify(newSettings));\r\n        this.setState({settings});\r\n    }\r\n\r\n    updateIds(ids, noWait) {\r\n        const newState = {\r\n            ids: ids && typeof ids === 'object' ? ids.filter(id => id && id !== 'true') : (ids || '').split(',').map(id => id.trim()),\r\n        };\r\n\r\n        if (!this.state.currentId || !newState.ids.includes(this.state.currentId)) {\r\n            newState.currentId = newState.ids[0] || '';\r\n        }\r\n\r\n        this.setState(newState, () => {\r\n            if (this.state.ids.find(id => !this.state.settings[id])) {\r\n                this.readTypeTimer && clearTimeout(this.readTypeTimer);\r\n                this.setState({reading: true});\r\n\r\n                this.readTypeTimer = setTimeout(async () => {\r\n                    this.readTypeTimer = null;\r\n\r\n                    const newState = {\r\n                        settings: JSON.parse(JSON.stringify(this.state.settings)),\r\n                        exists:   JSON.parse(JSON.stringify(this.state.exists)),\r\n                        reading:  false,\r\n                    }\r\n\r\n                    // read all settings of all IDs\r\n                    for (let i = 0; i < this.state.ids.length; i++) {\r\n                        const id = this.state.ids[i];\r\n                        if (!newState.settings[id]) {\r\n                            try {\r\n                                const result = await EditState.readSettingsFromServer(\r\n                                    this.props.socket,\r\n                                    this.props.native.language || I18n.getLanguage(),\r\n                                    this.props.native, this.namespace,\r\n                                    id\r\n                                );\r\n\r\n                                this.originalSettings[id] = JSON.parse(JSON.stringify(result.settings));\r\n                                newState.settings[id]     = result.settings;\r\n                                newState.exists[id]       = result.exists;\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                this.originalSettings[id] = {type: '', name: '', unit: ''};\r\n                                newState.settings[id]     = {type: '', name: '', unit: ''};\r\n                                newState.exists[id]       = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.setState(newState);\r\n                }, noWait ? 0 : 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const changed = this.state.ids.find(id =>\r\n                !this.state.exists[id] || JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]));\r\n\r\n        const exists = this.state.ids.find(id => this.state.exists[id]);\r\n\r\n        let tabs = null;\r\n        if (this.state.ids.length > 1) {\r\n            tabs =\r\n                <Tabs\r\n                    value={this.state.ids.indexOf(this.state.currentId)}\r\n                    onChange={(event, newValue) => this.setState({currentId: this.state.ids[newValue]})}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {this.state.ids.map(id => <Tab label={id} />)}\r\n                </Tabs>\r\n        }\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{this.propsId ? I18n.t('Edit event') : I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        disabled={!!this.propsId}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.ids && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.ids.join(', ')}\r\n                        onChange={e => this.updateIds(e.target.value)}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    {!this.propsId ? <Button\r\n                        style={{marginTop: 8}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => this.setState({showSelectId: true})}\r\n                    >...</Button> : null}\r\n                </div>\r\n                {this.state.reading ? <LinearProgress/> : <div style={{height: 4, width: '100%'}}/>}\r\n                {tabs}\r\n                {this.state.settings[this.state.currentId] ? <EditState\r\n                    key={this.state.currentId}\r\n                    id={this.state.currentId}\r\n                    onChange={(id, settings) => this.onChange(id, settings)}\r\n                    instance={this.props.instance}\r\n                    reading={this.state.reading}\r\n                    adapterName={this.props.adapterName}\r\n                    themeName={this.props.themeName}\r\n                    themeType={this.props.themeType}\r\n                    socket={this.props.socket}\r\n                    imagePrefix={this.props.imagePrefix}\r\n                    native={this.props.native}\r\n                    settings={this.state.settings[this.state.currentId]}\r\n                /> : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{!changed ? I18n.t('Close') : I18n.t('Cancel')}</Button>\r\n                {this.state.exists[this.state.currentId] && this.state.ids.length === 1 ? <Button\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.ids.length || !changed}\r\n                    onClick={() =>\r\n                        this.writeSettings([...this.state.ids], () =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n            {this.renderSelectId()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AddIdDialog);","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listItem: {\r\n        padding: 3,\r\n        '&:hover': {\r\n            background: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light,\r\n        }\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.7,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <Button variant=\"contained\"><AddIcon />{I18n.t('Add new states')}</Button>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\nimport CircularProgress  from '@material-ui/core/CircularProgress';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconEvent from '@material-ui/icons/Event';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\n\r\n// Copyright Apache 2.0 https://raw.githubusercontent.com/material-icons/material-icons/master/svg/filter_alt/baseline.svg\r\n// https://github.com/material-icons/material-icons/blob/master/LICENSE\r\nclass IconFilter extends React.Component {\r\n    render() {\r\n        return <svg viewBox=\"0 0 24 24\" width={24} height={24} xmlns=\"http://www.w3.org/2000/svg\" className={ this.props.className }>\r\n            <path fill=\"currentColor\" stroke=\"currentColor\" d=\"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39A.998.998 0 0 0 18.95 4H5.04c-.83 0-1.3.95-.79 1.61z\"/>\r\n        </svg>;\r\n    }\r\n}\r\n\r\nfunction serialPromises(promises, _resolve, _results) {\r\n    if (!_resolve) {\r\n        return new Promise(resolve => serialPromises(promises, resolve, []));\r\n    } else if (!promises || !promises.length) {\r\n        _resolve(_results);\r\n    } else {\r\n        const prom = promises.shift();\r\n        prom.then(result => {\r\n            _results.push(result);\r\n            setTimeout(() => serialPromises(promises, _resolve, _results), 0);\r\n        });\r\n    }\r\n}\r\n\r\nconst COLOR_RUNNING_DURATION = '#59be78';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdDurationRunning: {\r\n        animationName: 'running',\r\n        animationDuration: '2s',\r\n        animationIterationCount: 'infinite'\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    buttonAddState: {\r\n        minWidth: '120px !important',\r\n    },\r\n    icon: {\r\n        width: 28,\r\n        height: 28,\r\n        verticalAlign: 'middle',\r\n    },\r\n    filterControl: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: 3,\r\n    },\r\n    filterDiv: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n    },\r\n    filterIcon: {\r\n\r\n    },\r\n    filterClearIcon: {\r\n        color: '#FF0000',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: 24,\r\n        height: 24,\r\n        opacity: 0.5,\r\n    },\r\n    filterCounts: {\r\n        fontSize: 10,\r\n        opacity: 0.7,\r\n        float: 'right',\r\n        marginTop: 16,\r\n    },\r\n    filterSecondary: {\r\n        opacity: 0.7,\r\n        fontSize: 'smaller',\r\n    }\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        let filterStates   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`) || null;\r\n        try {\r\n            filterStates = filterStates ? JSON.parse(filterStates) : [];\r\n        } catch (e) {\r\n            filterStates = [];\r\n        }\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        const location = Router.getLocation();\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            filterStates,\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showSelectState: location.dialog === 'selectState',\r\n            showAddIdDialog: location.dialog === 'addId' ? location.id || true : false,\r\n            showAddEventDialog: location.dialog === 'addEvent',\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n            stateIds: null,\r\n            isFloatComma: true,\r\n        };\r\n\r\n        this.imagePrefix    = this.props.imagePrefix || 'files/'; // by default is admin\r\n        this.aliveId        = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId    = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId   = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'icon'},\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {this.headCells.map(cell =>\r\n                    cell.id === 'icon' ?  (\r\n                            this.props.native.icons ? <TableCell\r\n                                key={cell.id}\r\n                                component=\"th\"\r\n                                className={this.props.classes.tdIcons}\r\n                                align=\"left\"\r\n                                padding=\"none\"\r\n                            /> : null\r\n                        )\r\n                    :\r\n                    <TableCell\r\n                        key={cell.id}\r\n                        className={this.props.classes['td' + cell.id[0].toUpperCase() + cell.id.substring(1)]}\r\n                        align={cell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === cell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === cell.id}\r\n                            direction={this.state.orderBy === cell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(cell.id)}\r\n                        >\r\n                            {cell.label}\r\n                            {this.state.orderBy === cell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                )}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    const promises = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                (id => promises.push(this.props.socket.getObject(id)\r\n                                    .then(obj => {\r\n                                        if (obj) {\r\n                                            let count = 0;\r\n                                            // count states\r\n                                            this.state.eventList.forEach(item => item.id === obj._id && count++);\r\n                                            ids.push({id: obj._id, name: Utils.getObjectNameFromObj(obj, I18n.getLanguage()), count});\r\n                                        }\r\n                                    })\r\n                                    .catch(e => ids.push({id}))\r\n                                ))(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    serialPromises(promises)\r\n                        .then(() => {\r\n                            ids.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0));\r\n                            resolve(ids);\r\n                        });\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    renderFilter() {\r\n        return <>\r\n            <div className={this.props.classes.filterDiv}\r\n                 title={I18n.t('Clear filter')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, '');\r\n                     this.setState({filterStates: []});\r\n                 }}\r\n            >\r\n                <IconFilter className={this.props.classes.filterIcon}/>\r\n                {this.state.filterStates.length ? <IconClose className={this.props.classes.filterClearIcon}/> : null}\r\n            </div>\r\n            <Select\r\n                className={this.props.classes.filterControl}\r\n                multiple\r\n                label={I18n.t('Filter by ID')}\r\n                value={this.state.filterStates}\r\n                onChange={event => {\r\n                    window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, JSON.stringify(event.target.value));\r\n                    this.setState({filterStates: event.target.value});\r\n                }}\r\n                //input={<Input placeholder={I18n.t('Filter by ID')}/>}\r\n                onOpen={() => this.readIds().then(ids => this.setState({stateIds: ids}))}\r\n                renderValue={selected => selected.length === 1 ? selected[0] : selected.length}\r\n            >\r\n                {!this.state.stateIds ?\r\n                    <MenuItem><CircularProgress /></MenuItem>\r\n                    :\r\n                    this.state.stateIds.map(item =>\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                            <Checkbox checked={this.state.filterStates.includes(item.id)} />\r\n                            <ListItemText\r\n                                primary={<span>{item.name} <span className={this.props.classes.filterCounts}>{item.count}</span></span>}\r\n                                secondary={item.id}\r\n                                classes={{secondary: this.props.classes.filterSecondary}}\r\n                            />\r\n                        </MenuItem>)\r\n                }\r\n            </Select>\r\n        </>;\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {!this.state.selected.length ? this.renderFilter() : null}\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => {\r\n                                Router.doNavigate(null, 'addId', this.state.selectedId);\r\n                                this.setState({showAddIdDialog: this.state.selectedId})\r\n                            }}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => {\r\n                            Router.doNavigate(null, 'selectState', '');\r\n                            this.setState({showSelectState: true});\r\n                        }}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        if (this.state.filterStates && this.state.filterStates.length) {\r\n            array = array.filter(item => this.state.filterStates.includes(item.id));\r\n        }\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.showSelectState) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    Router.doNavigate(null, 'addId', id);\r\n                    this.setState({showAddIdDialog: id, showSelectState: false});\r\n                } else {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showSelectState: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n            <Table\r\n                className={this.props.classes.table}\r\n                size=\"small\"\r\n            >\r\n                {this.renderHeader()}\r\n                <TableBody>\r\n                    {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                        .map((row, index) => {\r\n                            const isItemSelected = this.state.selected.includes(row._id);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return <TableRow\r\n                                hover\r\n                                onClick={() => this.handleClick(row._id)}\r\n                                style={row._style || undefined}\r\n                                role=\"checkbox\"\r\n                                aria-checked={isItemSelected}\r\n                                tabIndex={-1}\r\n                                key={row._id}\r\n                                selected={isItemSelected}\r\n                            >\r\n                                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        checked={isItemSelected}\r\n                                        inputProps={{ 'aria-labelledby': labelId }}\r\n                                    />\r\n                                </TableCell>}\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                {this.props.native.icons ?\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                        {row.icon ? (row.icon !== 'default' ? <IconEvent/> : <Image\r\n                                            imagePrefix={this.imagePrefix}\r\n                                            src={row.icon}\r\n                                            className={this.props.classes.icon}\r\n                                            color={(row._style && row._style.color) || ''}\r\n                                        />) : null}\r\n                                    </TableCell>\r\n                                    : null}\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                {this.props.native.duration ?\r\n                                    <TableCell style={row.dr ? Object.assign({}, row._style || {}, {color: COLOR_RUNNING_DURATION}) : row._style || undefined } className={clsx(row.dr && this.props.classes.tdDurationRunning, this.props.classes.tdDuration)} component=\"td\" padding=\"none\" align=\"right\">\r\n                                        {row.duration || ''}</TableCell>\r\n                                    : null}\r\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                    <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                        <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                            e.stopPropagation();\r\n                                            Router.doNavigate(null, 'addId', row.stateId);\r\n                                            this.setState({showAddIdDialog: row.stateId});\r\n                                        }}><IconEdit/></IconButton>\r\n                                    </Tooltip>: null}\r\n                                </TableCell>}\r\n                            </TableRow>;\r\n                        })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                imagePrefix={this.imagePrefix}\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n            {this.renderToolbar()}\r\n            {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n            {this.renderToast()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderAddEventDialog()}\r\n            {this.renderAddIdDialog()}\r\n            {this.renderSelectState()}\r\n        </Paper>;\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fieldWide: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        paddingRight: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    orientation: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fontSize: {\r\n        marginTop: -3,\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    titleText: {\r\n        width: 310,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 105,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list on {{YYYY MM DD H:mm:ss}}',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\r\n                Object.keys(settings).forEach(attr => {\r\n                    if (attr.toLowerCase().includes('color')) {\r\n                        if (typeof settings[attr] === 'object') {\r\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\r\n                        }\r\n                        if (settings[attr].startsWith('rgb')) {\r\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    try {\r\n                                        this.lastElement.focus();\r\n                                    } catch (e) {\r\n\r\n                                    }\r\n\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e && e.target) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        let expanded;\r\n        if (name === true) {\r\n            expanded = ['sizes', 'enabledTitle', 'enabledHeader', 'margins', 'text', 'enabledTime', 'enabledEvent', 'enabledValue', 'enabledDuration', 'pageNumberEnabled'];\r\n        } else if (name === false) {\r\n            expanded = [];\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            if (ex) {\r\n                !expanded.includes(name) && expanded.push(name);\r\n            } else {\r\n                const pos = expanded.indexOf(name);\r\n                pos !== -1 && expanded.splice(pos, 1);\r\n            }\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    toggleOrientation(orientation, e) {\r\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\r\n            const native = JSON.parse(JSON.stringify(this.props.native));\r\n            const pageWidth = native.pdfSettings.pageWidth;\r\n            const top = native.pdfSettings.margins.top;\r\n            const bottom = native.pdfSettings.margins.bottom;\r\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\r\n            native.pdfSettings.pageHeight = pageWidth;\r\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\r\n            native.pdfSettings.margins.left = top;\r\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\r\n            native.pdfSettings.margins.right = bottom;\r\n            native.pdfSettings.orientation = orientation;\r\n            this.props.updateNative(native);\r\n        }\r\n    }\r\n\r\n    renderPageSize(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('sizes')}\r\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControl className={clsx(this.props.classes.fieldWide, this.props.classes.orientation)}>\r\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                    <Select\r\n                        disabled={this.state.pdfInGeneration}\r\n                        value={settings.orientation || 'portrait'}\r\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\r\n                    >\r\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Width')}\r\n                    value={settings.pageWidth}\r\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Height')}\r\n                    value={settings.pageHeight}\r\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for first page')}\r\n                    value={settings.paddingTopFirst}\r\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for other pages')}\r\n                    value={settings.paddingTop}\r\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Padding left')}\r\n                    value={settings.paddingLeft}\r\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={clsx(this.props.classes.titleText)}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                    helperText={I18n.t('You can add time with {{YYYY MM DD}}')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                    <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Time format description')}\r\n                </Button>\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={clsx(this.props.classes.field, this.props.classes.fontSize)}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 408, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 400, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textValue}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    key=\"pdfButton\"\r\n                    control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                    label={I18n.t('Show PDF generate button on list')}\r\n                />\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton onClick={() => this.onExpand(false)} title={I18n.t('Collapse all')} disabled={!this.state.expanded.length}><ExpandLessIcon /></IconButton>\r\n                <IconButton onClick={() => this.onExpand(true)} title={I18n.t('Expand all')} disabled={this.state.expanded.length === 10}><ExpandMoreIcon /></IconButton>\r\n            </Grid>\r\n            {this.renderPageSize(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={`/files/eventlist/report${this.props.instance ? '-' + this.props.instance : ''}.pdf?q=${this.state.random}`} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    updateNative: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n        this.isWeb = window.socketUrl !== undefined;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n\r\n        Object.keys(native.pdfSettings).forEach(attr => {\r\n            if (attr.toLowerCase().includes('color')) {\r\n                if (typeof native.pdfSettings[attr] === 'object') {\r\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\r\n                }\r\n                if (native.pdfSettings[attr].startsWith('rgb')) {\r\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\r\n                }\r\n            }\r\n        });\r\n\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    updateNative(native, cb) {\r\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n        this.setState({native, changed}, cb);\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => Router.doNavigate(e.target.parentNode.dataset.name)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            imagePrefix={this.isWeb ? '../' : '../../files/'}\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://f41fcdf099e848c590da9b96d0ba67c8@sentry.iobroker.net/109',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}