{"version":3,"sources":["Components/ColorPicker.js","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","Components/IconPicker.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["ColorPicker","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","onChange","getColor","divRef","React","createRef","this","style","openAbove","top","Object","assign","position","className","ref","TextField","id","width","label","name","value","margin","classes","root","textDense","e","target","IconButton","onClick","size","delButton","opacity","cursor","swatch","background","popover","cover","onChangeComplete","rgb","r","g","b","a","Component","withStyles","theme","height","borderRadius","marginTop","padding","boxShadow","display","verticalAlign","zIndex","right","bottom","left","marginBottom","MessengerSelect","selected","instances","adapterName","loadedAdapterName","names","loadData","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","map","item","title","common","titleLang","en","_id","split","pop","setTimeout","length","FormControl","formControl","InputLabel","t","Select","multiple","event","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","i","MenuItem","key","Checkbox","checked","includes","ListItemText","primary","CircularProgress","Options","onAliveChanged","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","aria-label","close","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","maxLength","type","inputProps","min","max","dateFormat","Button","variant","buttonFormat","buttonIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","icons","duration","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","button","card","maxWidth","textAlign","media","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","whiteSpace","AddEventDialog","showTime","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","disabled","IconPicker","textFieldWithButton","AddIdDialog","onStateChanged","unit","eventDefault","alarmsOnly","defaultMessengers","messagesInAlarmsOnly","whatsAppCMB","pushover","telegram","states","icon","changesOnly","showSelectId","unknownId","simulateState","exists","confirmExit","confirmRemove","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","newState","changed","trueState","find","original","falseState","newVal","defText","defColor","defIcon","Array","nState","forEach","objStates","parseStates","keys","attr","_st","readTypeTimer","clearTimeout","getObject","obj","getName","custom","newSettings","undefined","addBooleanStates","addNumericStates","getSettings","catch","subscribe","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","word","lang","translations","w","stateVal","defaultBooleanIconTrue","defaultBooleanIconFalse","startsWith","shift","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","duration2text","settings","enabled","it","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","ok","cancel","isYes","removeSettings","isBoolean","toUpperCase","Paper","paper","messengers","filter","field","error","clsx","examplePaper","exampleTitle","exampleText","getExampleColor","src","getExampleIcon","alt","exampleIcon","buildExample","Switch","renderStateSettings","renderState","renderMessengers","writeSettings","renderSelectId","renderConfirmExit","renderConfirmRemove","withWidth","palette","marginLeft","SelectStateDialog","ids","reading","promises","readIds","Promise","resolve","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","getSelectIdIcon","ListItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","dialogContent","dense","renderListItem","main","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","stateId","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","showEditButton","showDeleteConfirm","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","component","tdIcons","headCell","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","location","pathname","now","focus","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","toolbarButton","Fab","selectStateShow","toolbarButtonText","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","result","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","LinearProgress","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","light","dark","flex","border","clip","lineHeight","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","textColor","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","PdfSettings","random","triggerTimer","lastElement","ex","onExpand","content","accordionContent","onFocus","noCheckbox","Grid","xs","md","lg","renderPageHeader","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderSettingsTitle","renderPageNumbers","renderPageMargins","renderSettingsText","iframePdfLandscape","messageText","container","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","selectedTab","AppBar","Tabs","getSelectedTab","selectTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","match","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7559e93.chunk.js","sourcesContent":["/**\r\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\r\n *\r\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n **/\r\nimport React from 'react';\r\nimport {ChromePicker} from 'react-color';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\n\r\nconst styles = theme => ({\r\n    color: {\r\n        width: 36,\r\n        height: 14,\r\n        borderRadius: 2,\r\n    },\r\n    delButton: {\r\n        //width: 32,\r\n        //height: 32,\r\n        marginTop: 16,\r\n    },\r\n    swatch: {\r\n        marginTop: 16,\r\n        padding: 5,\r\n        background: '#fff',\r\n        borderRadius: 1,\r\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'middle'\r\n    },\r\n    popover: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n    },\r\n    cover: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    }\r\n});\r\n\r\nclass ColorPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            color: this.props.color,\r\n        };\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const pColor = ColorPicker.getColor(props.color);\r\n        const sColor = ColorPicker.getColor(state.color);\r\n        if (pColor !== sColor) {\r\n            return {color: props.color}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({displayColorPicker: !this.state.displayColorPicker});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false});\r\n    };\r\n\r\n    static getColor(color) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n            } else {\r\n                return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n            }\r\n        } else {\r\n            return color || '';\r\n        }\r\n    }\r\n\r\n    handleChange = color => {\r\n        this.setState({color});\r\n        this.props.onChange && this.props.onChange(ColorPicker.getColor(color));\r\n    };\r\n\r\n    render() {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        let style = {};\r\n        if (this.state.displayColorPicker && this.props.openAbove) {\r\n            style = {\r\n                top: -241,\r\n            }\r\n        }\r\n        return <div\r\n            style={Object.assign({}, this.props.style || {}, {position: 'relative'})}\r\n            className={ this.props.className || ''}\r\n            ref={this.divRef}\r\n        >\r\n            <TextField\r\n                id=\"name\"\r\n                style={{width: 'calc(100% - 80px)'}}\r\n                label={this.props.name || 'color'}\r\n                value={color}\r\n                margin=\"dense\"\r\n                classes={{root: this.props.classes.textDense}}\r\n                onChange={e => this.handleChange(e.target.value)}\r\n            />\r\n            <IconButton\r\n                onClick={() => this.handleChange('')}\r\n                size=\"small\"\r\n                className={this.props.classes.delButton}\r\n                style={color ? {} : {opacity: 0, cursor: 'default'}}\r\n            ><IconDelete/></IconButton>\r\n            <div className={this.props.classes.swatch} onClick={() => this.handleClick()}>\r\n                <div className={this.props.classes.color}\r\n                     style={{background: color}} />\r\n            </div>\r\n            { this.state.displayColorPicker ? <div className={this.props.classes.popover} style={style}>\r\n                <div className={this.props.classes.cover} onClick={() => this.handleClose()}/>\r\n                <ChromePicker color={ this.state.color } onChangeComplete={color => this.handleChange(color)} />\r\n            </div> : null }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nColorPicker.propTypes = {\r\n    color: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    openAbove: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles)(ColorPicker);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdHelp as IconHelp} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport ColorPicker from '../Components/ColorPicker';\nimport MessengerSelect from  '../Components/MessengerSelect';\n//import IconPicker from '../Components/IconPicker';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    inputMessengers: {\n        minWidth: 200,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(2),\n    },\n    buttonFormat: {\n        marginTop: 20,\n    },\n    checkBoxLabel: {\n        whiteSpace: 'nowrap'\n    },\n    heading: {\n        fontWeight: 'bold',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\n        try {\n            expanded = JSON.parse(expanded);\n        } catch (e) {\n            expanded = [];\n        }\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n            expanded,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n\n        this.props.socket.getState(this.aliveId).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onToggle(id) {\n        const expanded = [...this.state.expanded];\n        const pos = expanded.indexOf(id);\n        if (pos !== -1)  {\n            expanded.splice(pos, 1);\n        } else {\n            expanded.push(id);\n            expanded.sort();\n        }\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\n        this.setState({expanded});\n    }\n\n    render() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                <TextField\n                    label={ I18n.t('Max list length') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.maxLength }\n                    type=\"number\"\n                    inputProps={{min: 1, max: 1000}}\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\n                    margin=\"normal\"\n                />\n                <br/>\n                <TextField\n                    label={ I18n.t('Date format') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.dateFormat }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\n                    margin=\"normal\"\n                />\n                <Button\n                    variant=\"contained\"\n                    className={this.props.classes.buttonFormat}\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\n                        <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Format description')}\n                </Button>\n                <br/>\n                <TextField\n                    label={ I18n.t('Show absolute time after seconds') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.relativeTime }\n                    type=\"number\"\n                    inputProps={{min: 0, max: 140000}}\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\n                    margin=\"normal\"\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\n                    label={I18n.t('Show icons in the list')}\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\n                    label={I18n.t('Show duration in the list')}\n                />\n                <Accordion\n                    expanded={this.state.expanded.includes('state_boolean')}\n                    onChange={() => this.onToggle('state_boolean')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <TextField\n                            label={ I18n.t('Default event text for boolean') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanText }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\n                            margin=\"normal\"\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                        />\n                        <br/>\n                        <TextField\n                            label={ I18n.t('Default text by TRUE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextTrue }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        {narrowWidth && <br/>}\n                        <TextField\n                            label={ I18n.t('Default text by FALSE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextFalse }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        <br/>\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorTrue}\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\n                            name={I18n.t('Default color by TRUE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\n                        />\n                        {narrowWidth && <br/>}\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorFalse}\n                            style={{width: 300, display: 'inline-block'}}\n                            name={I18n.t('Default color by FALSE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n\n                <TextField\n                    label={ I18n.t('Default event text for non boolean states') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.defaultNonBooleanText }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                    margin=\"normal\"\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                />\n                <br/>\n                <FormControl className={this.props.classes.input}>\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\n                    <Select\n                        value={this.props.native.language || 'system'}\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\n                    >\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\n                        <MenuItem value=\"en\">English</MenuItem>\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\n                        <MenuItem value=\"ru\">русский</MenuItem>\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\n                        <MenuItem value=\"fr\">français</MenuItem>\n                        <MenuItem value=\"it\">Italiano</MenuItem>\n                        <MenuItem value=\"es\">Espanol</MenuItem>\n                        <MenuItem value=\"pl\">Polski</MenuItem>\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\n                    </Select>\n                </FormControl>\n                <Accordion\n                    expanded={this.state.expanded.includes('state_messengers')}\n                    onChange={() => this.onToggle('state_messengers')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <MessengerSelect\n                            label={ I18n.t('Telegram') }\n                            adapterName={'telegram'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultTelegram }\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('WhatsApp-CMB') }\n                            adapterName={'whatsapp-cmb'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultWhatsAppCMB }\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('Pushover') }\n                            adapterName={'pushover'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultPushover }\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\n                            socket={this.props.socket}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n});\r\n\r\nclass IconPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value || '',\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <TextField\r\n            margin=\"dense\"\r\n            label={this.props.label || I18n.t('Icon')}\r\n            value={this.state.value}\r\n            onChange={e => this.setState({value: e.target.value})}\r\n            type=\"text\"\r\n            className={this.props.classes.textField}\r\n        />;\r\n    }\r\n}\r\n\r\nIconPicker.propTypes = {\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IconPicker);","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport IconPicker from '../Components/IconPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n            alarmsOnly: false,\r\n\r\n            defaultMessengers: true,\r\n            messagesInAlarmsOnly: false,\r\n            whatsAppCMB: [],\r\n            pushover: [],\r\n            telegram: [],\r\n\r\n            states: null,\r\n            color: '',\r\n            icon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n            expanded,\r\n\r\n            simulateState: '',\r\n            exists: false,\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n        };\r\n\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings();\r\n                } else {\r\n                    this.setState({showSelectId: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true'};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false'};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = this.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: ''};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;\r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readSettings(id) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type:        (obj && obj.common && obj.common.type) || '',\r\n                        unknownId:   !obj || !obj.common || !obj.common.type,\r\n                        name:        this.getName(obj),\r\n                        unit:        (obj && obj.common && obj.common.unit) || '',\r\n                        whatsAppCMB: [],\r\n                        pushover:    [],\r\n                        telegram:    [],\r\n                        event:       '',\r\n                        icon:        '',\r\n                        color:       '',\r\n                        alarmsOnly:  false,\r\n                        messagesInAlarmsOnly: false,\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n\r\n                        newState.event        = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n                        newState.icon         = newSettings.icon;\r\n                        newState.color        = newSettings.color;\r\n                        newState.states       = newSettings.states;\r\n                        newState.alarmsOnly   = newSettings.alarmsOnly;\r\n                        newState.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                        newState.whatsAppCMB  = newSettings.whatsAppCMB || [];\r\n                        newState.pushover     = newSettings.pushover || [];\r\n                        newState.telegram     = newSettings.telegram || [];\r\n                        newState.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    } else {\r\n                        newState.defaultMessengers = true;\r\n                        newState.whatsAppCMB = this.props.native.defaultWhatsAppCMB || [];\r\n                        newState.pushover    = this.props.native.defaultPushover    || [];\r\n                        newState.telegram    = this.props.native.defaultTelegram    || [];\r\n\r\n                        newState.exists = false;\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    }\r\n\r\n                    this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: ''}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.color && ColorPicker.getColor(this.state.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.icon;\r\n        let icon = defIcon || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item.defIcon) {\r\n                icon = stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse;\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        if (icon) {\r\n            if (!icon.startsWith('data:')) {\r\n                if (icon.includes('.')) {\r\n                    icon = '/adapter/' + this.state.id.split('.').shift() + '/' + icon;\r\n                } else {\r\n                    icon = '';\r\n                }\r\n            }\r\n        }\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.type === 'boolean' ? false : null);\r\n        if (this.state.states) {\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n            if (this.state.states) {\r\n                if (!this.state.eventDefault && !this.state.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly,\r\n            defaultMessengers: !!this.state.defaultMessengers\r\n        };\r\n        if (this.state.color && ColorPicker.getColor(this.state.color)) {\r\n            settings.color = ColorPicker.getColor(this.state.color);\r\n        }\r\n        if (this.state.icon) {\r\n            settings.icon = this.state.icon;\r\n        }\r\n        if (this.state.alarmsOnly) {\r\n            settings.alarmsOnly = true;\r\n        }\r\n        if (this.state.messagesInAlarmsOnly) {\r\n            settings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (this.state.pushover && this.state.pushover.length && !this.state.defaultMessengers) {\r\n            settings.pushover = this.state.pushover;\r\n        }\r\n        if (this.state.telegram && this.state.telegram.length && !this.state.defaultMessengers) {\r\n            settings.telegram = this.state.telegram;\r\n        }\r\n        if (this.state.whatsAppCMB && this.state.whatsAppCMB.length && !this.state.defaultMessengers) {\r\n            settings.whatsAppCMB = this.state.whatsAppCMB;\r\n        }\r\n\r\n        this.state.states && this.state.states.forEach(item => {\r\n            settings.states = settings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            settings.states.push(it);\r\n        });\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val)}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <b>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</b></Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].color = color;\r\n                                this.setState({states});\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].icon = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={this.state.eventDefault}\r\n                            onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                        }\r\n                        label={I18n.t('Default text')}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.eventDefault ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.event}\r\n                        onChange={e => this.setState({event: e.target.value})}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        color={this.state.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setState({color})}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.icon}\r\n                        onChange={e => this.setState({icon: e.target.value})}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const messengers = !this.state.expanded.includes('state_messengers') ? [\r\n            this.state.telegram && this.state.telegram.length ? 'Telegram(' + this.state.telegram.join(', ') + ')' : '',\r\n            this.state.whatsAppCMB && this.state.whatsAppCMB.length ? ', WhatsAppCMB(' + this.state.telegram.join(', ') + ')' : '',\r\n            this.state.pushover && this.state.pushover.length ? ', Pushover(' + this.state.telegram.join(', ') + ')' : '',\r\n        ].filter(t => t).join('; ') : '';\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers')}{\r\n                    !this.state.expanded.includes('state_messengers') && messengers ?\r\n                        ' - ' + messengers\r\n                        :\r\n                        ''\r\n                }\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        disabled={this.state.alarmsOnly}\r\n                        checked={this.state.messagesInAlarmsOnly || this.state.alarmsOnly}\r\n                        onChange={e => this.setState({messagesInAlarmsOnly: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={this.state.defaultMessengers}\r\n                        onChange={e => this.setState({defaultMessengers: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({telegram: value})}\r\n                    selected={ this.state.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({whatsAppCMB: value})}\r\n                    selected={ this.state.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({pushover: value})}\r\n                    selected={ this.state.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: this.getExampleColor() || undefined}}>\r\n                            {this.props.native.icon ? <img src={this.getExampleIcon()} alt=\"event\" className={this.props.classes.exampleIcon}/>: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={!!this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                        {this.state.type === 'number' && this.state.states ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControl className={this.props.classes.formControl}>\r\n                                    <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                    <Select\r\n                                        value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                    >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current')}</MenuItem>\r\n                                    {this.state.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                                </FormControl>\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <>\r\n                        <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={!!this.state.alarmsOnly}\r\n                                onChange={e => this.setState({alarmsOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only in alarm state')}\r\n                        />\r\n                    </> : null}\r\n                {this.state.id     ? this.renderStateSettings() : null }\r\n                {this.state.states ? this.state.states.map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n                {this.state.id     ? this.renderMessengers(narrowWidth) : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}</Button>\r\n                {this.state.exists ? <Button\r\n                    disabled={!this.state.id || !this.state.type}\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || (this.state.exists && JSON.stringify(this.originalSettings) === JSON.stringify(this.getSettings()))}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.8,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <ListItemIcon><AddIcon /></ListItemIcon>\r\n                        <ListItemText primary={I18n.t('Add new state')} classes={{primary: this.props.classes.newState}}/>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    }\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showAddIdDialog: false,\r\n            showAddEventDialog: false,\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {\r\n                    this.props.native.icons ? <TableCell\r\n                        component=\"th\"\r\n                        className={this.props.classes.tdIcons}\r\n                        align=\"left\"\r\n                        padding=\"none\"\r\n                    /> : null\r\n                }\r\n\r\n                {this.headCells.map(headCell => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        className={this.props.classes['td' + headCell.id[0].toUpperCase() + headCell.id.substring(1)]}\r\n                        align={headCell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === headCell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === headCell.id}\r\n                            direction={this.state.orderBy === headCell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {this.state.orderBy === headCell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => this.setState({showAddIdDialog: this.state.selectedId})}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" onClick={() => this.setState({selectStateShow: true})}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.selectStateShow) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    this.setState({showAddIdDialog: id, selectStateShow: false});\r\n                } else {\r\n                    this.setState({selectStateShow: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n                <Table\r\n                    className={this.props.classes.table}\r\n                    size=\"small\"\r\n                >\r\n                    {this.renderHeader()}\r\n                    <TableBody>\r\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                            .map((row, index) => {\r\n                                const isItemSelected = this.state.selected.includes(row._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return <TableRow\r\n                                    hover\r\n                                    onClick={() => this.handleClick(row._id)}\r\n                                    style={row._style || undefined}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row._id}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>}\r\n                                    {this.props.native.icons ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                            {row.icon ? <img src={row.icon} width={28} height={28} alt=\"\"/> : null}</TableCell>\r\n                                        : null}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                    {this.props.native.duration ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\r\n                                            {row.duration || ''}</TableCell>\r\n                                        : null}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                                e.stopPropagation();\r\n                                                this.setState({showAddIdDialog: row.stateId})\r\n                                            }}><IconEdit/></IconButton>\r\n                                        </Tooltip>: null}\r\n                                    </TableCell>}\r\n                                </TableRow>;\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n                {this.renderToolbar()}\r\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n                {this.renderToast()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderAddEventDialog()}\r\n                {this.renderAddIdDialog()}\r\n                {this.renderSelectState()}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        minWidth: 200,\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 130,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    this.lastElement.focus();\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        const expanded = [...this.state.expanded];\r\n        if (ex) {\r\n            !expanded.includes(name) && expanded.push(name);\r\n        } else {\r\n            const pos = expanded.indexOf(name);\r\n            pos !== -1 && expanded.splice(pos, 1);\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <FormControlLabel\r\n                key=\"pdfButton\"\r\n                control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                label={I18n.t('Show PDF generate button on list')}\r\n            />\r\n            <FormControl className={this.props.classes.formControl}>\r\n                <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                <Select\r\n                    value={this.state.orientation || 'portrait'}\r\n                    onChange={e => this.props.onChange('orientation', e.target.value)}\r\n                >\r\n                    <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                    <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={'/files/eventlist/report.pdf?q=' + this.state.random} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\n//import TabMessengers from './Tabs/Messengers';\r\nimport ColorPicker from './Components/ColorPicker';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        } else\r\n        if (tab === 'messengers') {\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => this.selectTab(e.target.parentNode.dataset.name, index)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                    <Tab label={I18n.t('Messengers')} data-name=\"messengers\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {/*this.state.selectedTab === 'messengers' && <TabMessengers\r\n                    key=\"messengers\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />*/}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}