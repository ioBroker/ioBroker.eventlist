{"version":3,"sources":["../node_modules/@iobroker/adapter-react/assets/rooms sync /^/.*$","../node_modules/@iobroker/adapter-react/assets/devices sync /^/.*$","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","assets/telegram.svg","assets/pushover.svg","Components/EditState.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MessengerSelect","props","state","selected","instances","adapterName","loadedAdapterName","names","loadData","this","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","item","title","common","titleLang","name","en","setState","_id","split","pop","setTimeout","length","FormControl","className","classes","formControl","style","InputLabel","label","t","Select","multiple","value","onChange","event","target","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","i","MenuItem","Checkbox","checked","includes","ListItemText","primary","CircularProgress","React","Component","withStyles","theme","Options","onAliveChanged","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","IconButton","color","close","onClick","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","TextField","maxLength","type","inputProps","min","max","margin","dateFormat","Button","variant","buttonFormat","startIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","undefined","stateId","icons","duration","deleteAlarmsByDisable","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","display","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","openAbove","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","marginBottom","button","card","maxWidth","textAlign","media","height","verticalAlign","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","marginTop","whiteSpace","AddEventDialog","showTime","ts","icon","imagePrefix","parseFloat","toString","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","disabled","reading","DialogActions","DEFAULT_TEMPLATE","DISABLED_TEXT","EditState","onStateChanged","settings","simulateState","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","getSystemConfig","systemConfig","isFloatComma","word","lang","translations","w","ownColor","states","stateVal","find","defColor","ColorPicker","getColor","ownIcon","defIcon","defaultBooleanIconTrue","defaultBooleanIconFalse","defText","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","eventDefault","unit","duration2text","fromNow","ms","withSpaces","Math","round","floor","hours","minutes","seconds","forEach","isBoolean","original","toUpperCase","flex","setSettings","Paper","paper","root","textDense","attr","getSettings","width100minus32","count","telegram","whatsAppCMB","pushover","messengers","src","Telegram","alt","messengersIcon","clsx","whatsAppIcon","Pushover","alarmsOnly","messagesInAlarmsOnly","defaultMessengers","exampleColor","getExampleColor","Fragment","examplePaper","exampleTitle","exampleText","getExampleIcon","exampleIcon","buildExample","Switch","width100","changesOnly","iconOpenAll","iconCloseAll","renderStateSettings","a","b","renderState","renderMessengers","newState","changed","trueState","falseState","newVal","Array","nState","objStates","parseStates","_st","obj","parts","getObject","exists","getName","custom","newSettings","addBooleanStates","addNumericStates","extractIconAndColor","result","curSettings","enabled","it","withWidth","background","palette","marginLeft","padding","flexGrow","float","AddIdDialog","propsId","ids","currentId","showSelectId","confirmExit","confirmRemove","unknownIds","originalSettings","updateIds","cb","shift","setObject","writeSettings","ok","cancel","isYes","removeSettings","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","noWait","filter","trim","readTypeTimer","clearTimeout","readSettingsFromServer","console","error","tabs","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","field","unknownId","textFieldWithButton","LinearProgress","renderConfirmExit","renderConfirmRemove","renderSelectId","SelectStateDialog","promises","readIds","Promise","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","startsWith","getSelectIdIcon","ListItem","listItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","size","dialogContent","dense","renderListItem","dark","light","opacity","main","IconFilter","viewBox","xmlns","fill","stroke","d","serialPromises","_resolve","_results","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","filterStates","showEditButton","location","Router","getLocation","showDeleteConfirm","showSelectState","dialog","showAddIdDialog","showAddEventDialog","selectedId","stateIds","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","cell","component","tdIcons","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","pathname","now","focus","catch","filterDiv","filterIcon","filterClearIcon","filterControl","onOpen","filterCounts","filterSecondary","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","renderFilter","Tooltip","doNavigate","toolbarButton","Fab","buttonAddState","toolbarButtonText","paddingLeft","paddingRight","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","handleClick","_style","role","tabIndex","tdTs","scope","endsWith","tdEvent","tdVal","dr","assign","tdDurationRunning","editButton","stopPropagation","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","backgroundColor","lighten","border","clip","position","top","animationName","animationDuration","animationIterationCount","lineHeight","cursor","left","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","bottom","right","PdfSettings","random","triggerTimer","rgb2hex","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","fieldWide","toggleOrientation","onFocus","Grid","xs","md","lg","container","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","isWeb","socketUrl","selectedTab","RGB2hex","savedNative","AppBar","getSelectedTab","parentNode","dataset","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","match","getThemeName","log","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab6af4fa.chunk.js","sourcesContent":["var map = {\n\t\"./Anteroom.svg\": 529,\n\t\"./Attic.svg\": 530,\n\t\"./Balcony.svg\": 531,\n\t\"./Barn.svg\": 532,\n\t\"./Basement.svg\": 533,\n\t\"./Bathroom.svg\": 534,\n\t\"./Bedroom.svg\": 535,\n\t\"./Boiler Room.svg\": 536,\n\t\"./Carport.svg\": 537,\n\t\"./Cellar.svg\": 538,\n\t\"./Chamber.svg\": 539,\n\t\"./Corridor.svg\": 540,\n\t\"./Dining Area.svg\": 541,\n\t\"./Dining Room.svg\": 542,\n\t\"./Dining.svg\": 543,\n\t\"./Dressing Room.svg\": 544,\n\t\"./Driveway.svg\": 545,\n\t\"./Entrance.svg\": 546,\n\t\"./Equipment Room.svg\": 547,\n\t\"./Front Yard.svg\": 548,\n\t\"./Gallery.svg\": 549,\n\t\"./Garage.svg\": 550,\n\t\"./Garden.svg\": 551,\n\t\"./Ground Floor.svg\": 552,\n\t\"./Guest Bathroom.svg\": 553,\n\t\"./Guest Room.svg\": 554,\n\t\"./Gym.svg\": 555,\n\t\"./Hall.svg\": 556,\n\t\"./Home Theater.svg\": 557,\n\t\"./Kitchen.svg\": 558,\n\t\"./Laundry Room.svg\": 559,\n\t\"./Living Area.svg\": 560,\n\t\"./Living Room.svg\": 561,\n\t\"./Locker Room.svg\": 562,\n\t\"./Nursery.svg\": 563,\n\t\"./Office.svg\": 564,\n\t\"./Outdoors.svg\": 565,\n\t\"./Playroom.svg\": 566,\n\t\"./Pool.svg\": 567,\n\t\"./Rear Wall.svg\": 568,\n\t\"./Second Floor.svg\": 569,\n\t\"./Shed.svg\": 570,\n\t\"./Sleeping Area.svg\": 571,\n\t\"./Stairway.svg\": 572,\n\t\"./Stairwell.svg\": 573,\n\t\"./Storeroom.svg\": 574,\n\t\"./Summer House.svg\": 575,\n\t\"./Swimming Pool.svg\": 576,\n\t\"./Terrace.svg\": 577,\n\t\"./Toilet.svg\": 578,\n\t\"./Upstairs.svg\": 579,\n\t\"./Wardrobe.svg\": 580,\n\t\"./Washroom.svg\": 581,\n\t\"./Wc.svg\": 582,\n\t\"./Windscreen.svg\": 583,\n\t\"./Workshop.svg\": 584,\n\t\"./Workspace.svg\": 585,\n\t\"./list\": 221,\n\t\"./list.json\": 221,\n\t\"./names.txt\": 586,\n\t\"./parseNames\": 308,\n\t\"./parseNames.d.ts\": 587,\n\t\"./parseNames.js\": 308\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 528;","var map = {\n\t\"./Alarm Systems.svg\": 589,\n\t\"./Amplifier.svg\": 590,\n\t\"./Awnings.svg\": 591,\n\t\"./Battery Status.svg\": 592,\n\t\"./Ceiling Spotlights.svg\": 593,\n\t\"./Chandelier.svg\": 594,\n\t\"./Climate.svg\": 595,\n\t\"./Coffee Makers.svg\": 596,\n\t\"./Cold Water.svg\": 597,\n\t\"./Computer.svg\": 598,\n\t\"./Consumption.svg\": 599,\n\t\"./Curtains.svg\": 600,\n\t\"./Dishwashers.svg\": 601,\n\t\"./Doors.svg\": 602,\n\t\"./Doorstep.svg\": 603,\n\t\"./Dryer.svg\": 604,\n\t\"./Fan.svg\": 605,\n\t\"./Floor Lamps.svg\": 606,\n\t\"./Garage Doors.svg\": 607,\n\t\"./Gates.svg\": 608,\n\t\"./Hairdryer.svg\": 609,\n\t\"./Handle.svg\": 610,\n\t\"./Hanging Lamps.svg\": 611,\n\t\"./Heater.svg\": 612,\n\t\"./Hoods.svg\": 613,\n\t\"./Hot Water.svg\": 614,\n\t\"./Humidity.svg\": 615,\n\t\"./Iron.svg\": 616,\n\t\"./Irrigation.svg\": 617,\n\t\"./Led Strip.svg\": 618,\n\t\"./Light.svg\": 619,\n\t\"./Lightings.svg\": 620,\n\t\"./Lock.svg\": 621,\n\t\"./Louvre.svg\": 622,\n\t\"./Mowing Machine.svg\": 623,\n\t\"./Music.svg\": 624,\n\t\"./Outdoor Blinds.svg\": 625,\n\t\"./People.svg\": 626,\n\t\"./Pool.svg\": 627,\n\t\"./Power Consumption.svg\": 628,\n\t\"./Printer.svg\": 629,\n\t\"./Pump.svg\": 630,\n\t\"./Receiver.svg\": 631,\n\t\"./Sconces.svg\": 632,\n\t\"./Security.svg\": 633,\n\t\"./Shading.svg\": 634,\n\t\"./Shutters.svg\": 635,\n\t\"./SmokeDetector.svg\": 636,\n\t\"./Sockets.svg\": 637,\n\t\"./Speaker.svg\": 638,\n\t\"./Stove.svg\": 639,\n\t\"./Table Lamps.svg\": 640,\n\t\"./Temperature Sensors.svg\": 641,\n\t\"./Tv.svg\": 642,\n\t\"./Vacuum Cleaner.svg\": 643,\n\t\"./Ventilation.svg\": 644,\n\t\"./Washing Machines.svg\": 645,\n\t\"./Water Consumption.svg\": 646,\n\t\"./Water Heater.svg\": 647,\n\t\"./Water.svg\": 648,\n\t\"./Weather.svg\": 649,\n\t\"./Window.svg\": 650,\n\t\"./list\": 220,\n\t\"./list.json\": 220,\n\t\"./names.txt\": 651,\n\t\"./parseNames\": 309,\n\t\"./parseNames.d.ts\": 652,\n\t\"./parseNames.js\": 309\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 588;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\n\r\nimport MessengerSelect from  '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        minWidth: 300,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    cannotUse: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n    },\r\n    hintUnsaved: {\r\n        fontSize: 12,\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    checkBoxLabel: {\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            inAction: false,\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            errorWithPercent: false,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n\r\n        this.props.socket.getState(this.aliveId).then(state =>\r\n            this.setState({isInstanceAlive: state && state.val}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{'aria-describedby': 'message-id'}}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <form className={ this.props.classes.tab }>\r\n            <Logo\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\r\n                <TextField\r\n                    label={ I18n.t('Max list length') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.maxLength }\r\n                    type=\"number\"\r\n                    inputProps={{min: 1, max: 1000}}\r\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Date format') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.dateFormat }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}\r\n                    startIcon={<IconHelp />}\r\n                >\r\n                        {I18n.t('Format description')}\r\n                </Button>\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Show absolute time after seconds') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.relativeTime }\r\n                    type=\"number\"\r\n                    inputProps={{min: 0, max: 140000}}\r\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\r\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\r\n                    margin=\"normal\"\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.stateId === undefined ? true : this.props.native.stateId} onChange={e => this.props.onChange('stateId', e.target.checked)} />}\r\n                    label={I18n.t('Show state ID in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\r\n                    label={I18n.t('Show icons in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\r\n                    label={I18n.t('Show duration in the list')}\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.deleteAlarmsByDisable || false} onChange={e => this.props.onChange('deleteAlarmsByDisable', e.target.checked)} />}\r\n                    label={I18n.t('Remove alarm events from list by the alarm mode deactivating')}\r\n                />\r\n\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_boolean')}\r\n                    onChange={() => this.onToggle('state_boolean')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <TextField\r\n                            label={ I18n.t('Default event text for boolean') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanText }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\r\n                            margin=\"normal\"\r\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            label={ I18n.t('Default text by TRUE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextTrue }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <TextField\r\n                            label={ I18n.t('Default text by FALSE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextFalse }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        <br/>\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorTrue}\r\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                            name={I18n.t('Default color by TRUE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorFalse}\r\n                            style={{width: 300, display: 'inline-block'}}\r\n                            name={I18n.t('Default color by FALSE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <TextField\r\n                    label={ I18n.t('Default event text for non boolean states') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.defaultNonBooleanText }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\r\n                    margin=\"normal\"\r\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                />\r\n                <br/>\r\n                <FormControl className={this.props.classes.input}>\r\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.language || 'system'}\r\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\r\n                    >\r\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\r\n                        <MenuItem value=\"en\">English</MenuItem>\r\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\r\n                        <MenuItem value=\"ru\">русский</MenuItem>\r\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\r\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\r\n                        <MenuItem value=\"fr\">français</MenuItem>\r\n                        <MenuItem value=\"it\">Italiano</MenuItem>\r\n                        <MenuItem value=\"es\">Espanol</MenuItem>\r\n                        <MenuItem value=\"pl\">Polski</MenuItem>\r\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_messengers')}\r\n                    onChange={() => this.onToggle('state_messengers')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Telegram') }\r\n                            adapterName={'telegram'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultTelegram }\r\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('WhatsApp-CMB') }\r\n                            adapterName={'whatsapp-cmb'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultWhatsAppCMB }\r\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Pushover') }\r\n                            adapterName={'pushover'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultPushover }\r\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    }\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: '',\r\n            icon: ''\r\n        };\r\n\r\n        this.imagePrefix = this.props.imagePrefix || './files';\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n\r\n        if (this.state.icon) {\r\n            event.icon = this.state.icon;\r\n        }\r\n\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n                <IconPicker\r\n                    disabled={this.props.reading}\r\n                    imagePrefix={this.imagePrefix}\r\n                    label={I18n.t('Icon')}\r\n                    socket={this.props.socket}\r\n                    value={this.state.icon}\r\n                    onChange={icon =>\r\n                        this.setState({icon})}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    startIcon={<AddIcon />}\r\n                >\r\n                    {I18n.t('Insert')}\r\n                </Button>\r\n                <Button\r\n                    onClick={() => this.props.onClose()}\r\n                    variant=\"contained\"\r\n                    startIcon={<CancelIcon />}\r\n                >\r\n                    {I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","export default __webpack_public_path__ + \"static/media/telegram.2febf30d.svg\";","export default __webpack_public_path__ + \"static/media/pushover.2ec57e2c.svg\";","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\r\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\r\nimport Telegram from '../assets/telegram.svg';\r\nimport Pushover from '../assets/pushover.svg';\r\n\r\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: 'calc(100% - ' + theme.spacing(2) + 'px)',\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    flex: {\r\n        flexGrow: 1,\r\n    },\r\n    messengersIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    whatsAppIcon: {\r\n        color: '#45c655'\r\n    },\r\n    width100: {\r\n        width: '100%',\r\n    },\r\n    width100minus32: {\r\n        width: 'calc(100% - 32px)',\r\n    },\r\n    iconOpenAll: {\r\n        float: 'right',\r\n        marginRight: 4,\r\n    },\r\n    iconCloseAll: {\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\nconst DISABLED_TEXT = '-------------';\r\n\r\nclass EditState extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            settings: JSON.parse(JSON.stringify(this.props.settings)),\r\n            expanded,\r\n            simulateState: '',\r\n        };\r\n\r\n        this.imagePrefix = this.props.imagePrefix || './files';\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => this.isFloatComma = systemConfig.common.isFloatComma);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.props.id, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.props.id, this.onStateChanged);\r\n    }\r\n\r\n    static addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    static addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = EditState.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) =>\r\n        this.setState({state: state || null});\r\n\r\n    static extractIconAndColor(socket, obj) {\r\n        if (obj && obj.common && obj.common.icon) {\r\n            return {icon: obj.common.icon, color: obj.common.color};\r\n        } else {\r\n            const parts = obj._id.split('.');\r\n            parts.pop();\r\n\r\n            return socket.getObject(parts.join('.'))\r\n                .then(obj => {\r\n                    if (obj && obj.type === 'channel') {\r\n                        if (obj.common && obj.common.icon) {\r\n                            return {icon: obj.common.icon, color: obj.common.color};\r\n                        } else {\r\n                            const parts = obj._id.split('.');\r\n                            parts.pop();\r\n                            return socket.getObject(parts.join('.'))\r\n                                .then(obj => {\r\n                                    if (obj && (obj.type === 'channel' || obj.type === 'device')) {\r\n                                        if (obj.common && obj.common.icon) {\r\n                                            return {icon: obj.common.icon, color: obj.common.color};\r\n                                        } else {\r\n                                            return null;\r\n                                        }\r\n                                    } else {\r\n                                        return null;\r\n                                    }\r\n                                });\r\n                        }\r\n                    } else if (obj && obj.type === 'device' && obj.common) {\r\n                        return {icon: obj.common.icon, color: obj.common.color};\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    static readSettingsFromServer(socket, lang, native, namespace, id) {\r\n        return socket.getObject(id)\r\n            .then(obj => {\r\n                const settings = {\r\n                    type:        (obj && obj.common && obj.common.type) || '',\r\n                    name:        EditState.getName(obj, lang),\r\n                    unit:        (obj && obj.common && obj.common.unit) || '',\r\n                    whatsAppCMB: [],\r\n                    pushover:    [],\r\n                    telegram:    [],\r\n                    event:       '',\r\n                    icon:        '',\r\n                    color:       '',\r\n                    alarmsOnly:  false,\r\n                    messagesInAlarmsOnly: false,\r\n                };\r\n\r\n                let exists;\r\n\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[namespace]) {\r\n                    const newSettings = obj.common.custom[namespace];\r\n                    exists = true;\r\n\r\n                    settings.event                = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                    settings.eventDefault         = newSettings.event === DEFAULT_TEMPLATE;\r\n                    settings.icon                 = newSettings.icon;\r\n                    settings.color                = newSettings.color;\r\n                    settings.states               = newSettings.states;\r\n                    settings.alarmsOnly           = newSettings.alarmsOnly;\r\n                    settings.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                    settings.whatsAppCMB          = newSettings.whatsAppCMB || [];\r\n                    settings.pushover             = newSettings.pushover    || [];\r\n                    settings.telegram             = newSettings.telegram    || [];\r\n                    settings.changesOnly          = newSettings.changesOnly;\r\n\r\n                    settings.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                    if (settings.type === 'boolean') {\r\n                        EditState.addBooleanStates(settings);\r\n                        settings.simulateState = false;\r\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                        EditState.addNumericStates(settings, obj.common.states);\r\n                        settings.simulateState = null;\r\n                    } else {\r\n                        settings.states = null;\r\n                        settings.simulateState = null;\r\n                    }\r\n                } else {\r\n                    settings.defaultMessengers = true;\r\n                    settings.whatsAppCMB = native.defaultWhatsAppCMB || [];\r\n                    settings.pushover    = native.defaultPushover    || [];\r\n                    settings.telegram    = native.defaultTelegram    || [];\r\n\r\n                    exists = false;\r\n                    if (settings.type === 'boolean') {\r\n                        EditState.addBooleanStates(settings);\r\n                        settings.simulateState = false;\r\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                        EditState.addNumericStates(settings, obj.common.states);\r\n                        settings.simulateState = null;\r\n                    } else {\r\n                        settings.states = null;\r\n                        settings.simulateState = null;\r\n                    }\r\n                }\r\n\r\n                return EditState.extractIconAndColor(socket, obj)\r\n                    .then(result => {\r\n                        if (result && result.icon) {\r\n                            // we must get from /icons/113_hmip-psm_thumb.png => /adapter/hm-rpc/icons/113_hmip-psm_thumb.png\r\n                            // or                                                  /hm-rpc.admin/icons/113_hmip-psm_thumb.png\r\n                            settings.ownIcon = `/adapter/${obj._id.split('.')[0]}${result.icon}`;\r\n                        }\r\n                        if (result && result.color) {\r\n                            settings.ownColor = result.color;\r\n                        }\r\n                        return {settings, exists};\r\n                    });\r\n            });\r\n    }\r\n\r\n    static getName(obj, lang) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[lang] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = this.state.ownColor || '';\r\n        if (this.state.settings.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.settings.color && ColorPicker.getColor(this.state.settings.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.settings.icon || this.state.ownIcon;\r\n        let icon = defIcon || '';\r\n        if (this.state.settings.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defIcon) {\r\n                icon = (stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse) || this.state.ownIcon || '';\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.settings.type === 'boolean' ? false : null);\r\n        if (this.state.settings.states) {\r\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.settings.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.disabled) {\r\n                return DISABLED_TEXT;\r\n            }\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (valText === DISABLED_TEXT) {\r\n            return I18n.t('DISABLED');\r\n        }\r\n\r\n        if (this.state.settings.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.settings.eventDefault && !this.state.settings.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.settings.eventDefault && !this.state.settings.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.settings.event === DEFAULT_TEMPLATE || this.state.settings.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.settings.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.settings.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.settings.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.settings.unit) {\r\n                valWithUnit += this.state.settings.unit;\r\n            }\r\n            if (this.state.settings.states) {\r\n                if (!this.state.settings.eventDefault && !this.state.settings.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        if (eventTemplate.includes('%t')) {\r\n            eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n        }\r\n\r\n        if (eventTemplate.includes('%r')) {\r\n            eventTemplate = eventTemplate.replace(/%r/g, this.state.state ? moment(new Date(this.state.state.ts)).fromNow() : moment(new Date()).fromNow());\r\n        }\r\n\r\n        if (eventTemplate.includes('%o')) {\r\n            eventTemplate = eventTemplate.replace(/%o/g, '_');\r\n        }\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    static getSettings(settings) {\r\n        const curSettings = {\r\n            enabled: true,\r\n            event: settings.eventDefault ? DEFAULT_TEMPLATE : settings.event,\r\n            changesOnly: !!settings.changesOnly,\r\n            defaultMessengers: !!settings.defaultMessengers\r\n        };\r\n\r\n        if (settings.color && ColorPicker.getColor(settings.color)) {\r\n            curSettings.color = ColorPicker.getColor(settings.color);\r\n        }\r\n        if (settings.icon) {\r\n            curSettings.icon = settings.icon;\r\n        }\r\n        if (settings.alarmsOnly) {\r\n            curSettings.alarmsOnly = true;\r\n        }\r\n        if (settings.messagesInAlarmsOnly) {\r\n            curSettings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (settings.pushover && settings.pushover.length && !settings.defaultMessengers) {\r\n            curSettings.pushover = settings.pushover;\r\n        }\r\n        if (settings.telegram && settings.telegram.length && !settings.defaultMessengers) {\r\n            curSettings.telegram = settings.telegram;\r\n        }\r\n        if (settings.whatsAppCMB && settings.whatsAppCMB.length && !settings.defaultMessengers) {\r\n            curSettings.whatsAppCMB = settings.whatsAppCMB;\r\n        }\r\n\r\n        settings.states && settings.states.forEach(item => {\r\n            curSettings.states = curSettings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.disabled)  {\r\n                it.disabled = true;\r\n                curSettings.states.push(it);\r\n                return;\r\n            }\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            curSettings.states.push(it);\r\n        });\r\n\r\n        return curSettings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        let expanded;\r\n        if (id === false) {\r\n            expanded = [];\r\n        } else if (id === true) {\r\n            expanded = ['state_settings', 'state_messengers'];\r\n            this.state.settings.states && this.state.settings.states.forEach(state => expanded.push('state_' + state.val));\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            const pos = expanded.indexOf(id);\r\n            if (pos !== -1)  {\r\n                expanded.splice(pos, 1);\r\n            } else {\r\n                expanded.push(id);\r\n                expanded.sort();\r\n            }\r\n        }\r\n\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.settings.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\r\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</span></Typography>\r\n                <div className={this.props.classes.flex}/>\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        checked={!!state.disabled}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].disabled = e.target.checked;\r\n                            this.setSettings('states', states);\r\n                        }} />\r\n                    }\r\n                    label={I18n.t('Disable logging')}\r\n                />\r\n            </AccordionSummary>\r\n            {!state.disabled && <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        disabled={this.props.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setSettings('states', states);\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            disabled={this.props.reading}\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].color = color;\r\n                                this.setSettings('states', states);\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setSettings('states', states);\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        disabled={this.props.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.props.id + this.state.settings.type + state.original}\r\n                        color={color}\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={icon => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\r\n                            states[i].icon = icon;\r\n                            this.setSettings('states', states);\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    setSettings(attr, value) {\r\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\r\n        settings[attr] = value;\r\n        this.setState({settings}, () =>\r\n            this.props.onChange(this.props.id, EditState.getSettings(settings)));\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        const color = ColorPicker.getColor(this.state.settings.color);\r\n        const text = this.state.settings.eventDefault ? (this.state.settings.type === 'boolean' ? this.props.native.defaultBooleanText : this.props.native.defaultNonBooleanText) : this.state.settings.event || I18n.t('Use the specific state texts');\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{root: this.props.classes.width100minus32}}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}\r\n                    {!narrowWidth ? <span style={{color: color || undefined, fontStyle: 'italic'}}>{' - ' + text}</span> : null}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.settings.eventDefault}\r\n                            onChange={e => this.setSettings('eventDefault', e.target.checked)} />\r\n                        }\r\n                        label={<span>\r\n                            <span>{I18n.t('Default text')}</span>\r\n                        </span>}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.settings.eventDefault ? <TextField\r\n                        disabled={this.props.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.settings.event}\r\n                        onChange={e => this.setSettings('event', e.target.value)}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={ this.state.settings.type === 'number' ?\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\r\n                            :\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        disabled={this.props.reading}\r\n                        color={this.state.settings.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setSettings('color', color)}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        disabled={this.props.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.props.id + this.state.settings.type}\r\n                        color={this.state.settings.color}\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.settings.icon}\r\n                        onChange={icon => this.setSettings('icon', icon)}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const count = (this.state.settings.telegram ? this.state.settings.telegram.length : 0) +\r\n            (this.state.settings.whatsAppCMB ? this.state.settings.whatsAppCMB.length : 0) +\r\n            (this.state.settings.pushover ? this.state.settings.pushover.length : 0);\r\n\r\n        const messengers = [\r\n            this.state.settings.telegram    && this.state.settings.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.settings.telegram.join(', ')    + ')'}</span>] : null,\r\n            this.state.settings.whatsAppCMB && this.state.settings.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.settings.whatsAppCMB.join(', ') + ')'}</span>] : null,\r\n            this.state.settings.pushover    && this.state.settings.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.settings.pushover.join(', ')    + ')'}</span>] : null,\r\n        ];\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\r\n                    {messengers}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        disabled={!!this.state.settings.alarmsOnly}\r\n                        checked={!!(this.state.settings.messagesInAlarmsOnly || this.state.settings.alarmsOnly)}\r\n                        onChange={e => this.setSettings('messagesInAlarmsOnly', e.target.checked)} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    disabled={this.props.reading}\r\n                    control={<Checkbox\r\n                        checked={this.state.settings.defaultMessengers}\r\n                        onChange={e => this.setSettings('defaultMessengers', e.target.checked)} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('telegram', value)}\r\n                    selected={ this.state.settings.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('whatsAppCMB', value)}\r\n                    selected={ this.state.settings.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\r\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setSettings('pushover', value)}\r\n                    selected={ this.state.settings.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        let val = '';\r\n        if (this.state.state && this.state.state.val) {\r\n            if (this.state.state.val === null || this.state.state.val === undefined) {\r\n                val = ' - --';\r\n            } else {\r\n                val = ' - ' + this.state.state.val.toString();\r\n            }\r\n        }\r\n\r\n        const exampleColor = this.getExampleColor() || undefined;\r\n\r\n        return <React.Fragment>\r\n\r\n            {this.state.settings.type ?\r\n                <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n                    <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                    <span className={this.props.classes.exampleText} style={{color: exampleColor}}>\r\n                        {this.props.native.icons ? <Image\r\n                            src={this.getExampleIcon()}\r\n                            className={this.props.classes.exampleIcon}\r\n                            color={exampleColor}\r\n                            imagePrefix={this.imagePrefix}\r\n                        />: null}\r\n                        {this.buildExample()}\r\n                    </span>\r\n                    {this.state.settings.type === 'boolean' ?\r\n                        <>\r\n                            <br/>\r\n                            <FormControlLabel\r\n                                disabled={this.props.reading}\r\n                                control={<Switch\r\n                                    checked={!!this.state.simulateState}\r\n                                    onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                }\r\n                                label={I18n.t('Toggle state to simulate')}\r\n                            />\r\n                        </>\r\n                        : null\r\n                    }\r\n                    {this.state.settings.type === 'number' && this.state.settings.states ?\r\n                        <>\r\n                            <br/>\r\n                            <FormControl className={this.props.classes.formControl} disabled={this.props.reading}>\r\n                                <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                <Select\r\n                                    value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                    onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\r\n                                    {this.state.settings.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </>\r\n                        : null\r\n                    }\r\n                </Paper>\r\n                : null }\r\n\r\n            {this.state.settings.type ?\r\n                <div className={this.props.classes.width100}>\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.settings.changesOnly}\r\n                            onChange={e => this.setSettings('changesOnly', e.target.checked)} />\r\n                        }\r\n                        label={I18n.t('Only changes')}\r\n                    />\r\n                    {narrowWidth && <br/>}\r\n                    <FormControlLabel\r\n                        disabled={this.props.reading}\r\n                        control={<Checkbox\r\n                            checked={!!this.state.settings.alarmsOnly}\r\n                            onChange={e => this.setSettings('alarmsOnly', e.target.checked)} />\r\n                        }\r\n                        label={I18n.t('Only in alarm state')}\r\n                    />\r\n                    <IconButton disabled={this.state.expanded.length === (this.state.settings.states ? this.state.settings.states.length : 0 ) + 2} className={this.props.classes.iconOpenAll} onClick={() => this.onToggle(true)}><ExpandMoreIcon/></IconButton>\r\n                    <IconButton disabled={!this.state.expanded.length} className={this.props.classes.iconCloseAll} onClick={() => this.onToggle(false)}> <ExpandLessIcon/></IconButton>\r\n                </div> : null}\r\n            {this.renderStateSettings()}\r\n            {this.state.settings.states ? this.state.settings.states.sort((a, b) => a.val > b.val ? 1 : (a.val < b.val ? -1 : 0)).map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n            {this.renderMessengers(narrowWidth)}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nEditState.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    reading: PropTypes.bool,\r\n    settings: PropTypes.object,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(EditState));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport EditState from '../Components/EditState';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\n\r\nconst styles = theme => ({\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    }\r\n});\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.propsId = this.props.id !== 'true' ? this.props.id : '';\r\n\r\n        this.state = {\r\n            ids: [],\r\n            currentId: this.propsId || '',\r\n            showSelectId: !this.propsId,\r\n            exists: {},\r\n            settings: {},\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n            unknownIds: {},\r\n        };\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.originalSettings = {};\r\n        setTimeout(() => this.updateIds(this.propsId, true), 100);\r\n    }\r\n\r\n    writeSettings(ids, cb) {\r\n        if (!ids || !ids.length) {\r\n            cb && cb();\r\n        } else {\r\n            const id = ids.shift();\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    if (obj && obj.common) {\r\n                        obj.common.custom = obj.common.custom || {};\r\n                        const newSettings = EditState.getSettings(this.state.settings[id] || {enabled: true, event: DEFAULT_TEMPLATE, changesOnly: true, defaultMessengers: true});\r\n                        // if changed\r\n                        if (JSON.stringify(newSettings) !== JSON.stringify(obj.common.custom[this.namespace])) {\r\n                            obj.common.custom[this.namespace] = newSettings;\r\n                            return this.props.socket.setObject(obj._id, obj)\r\n                                .then(() => setTimeout(() => this.writeSettings(ids, cb), 0));\r\n                        }\r\n                    }\r\n                    setTimeout(() => this.writeSettings(ids, cb), 0);\r\n                });\r\n        }\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.ids[0])\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.ids[0], obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.ids.find(id => JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]))) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            imagePrefix={'../..'}\r\n            showExpertButton={true}\r\n            multiSelect={true}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.ids}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={ids => this.updateIds(ids, true)}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    onChange(id, newSettings) {\r\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\r\n        settings[id] = JSON.parse(JSON.stringify(newSettings));\r\n        this.setState({settings});\r\n    }\r\n\r\n    updateIds(ids, noWait) {\r\n        const newState = {\r\n            ids: ids && typeof ids === 'object' ? ids.filter(id => id && id !== 'true') : (ids || '').split(',').map(id => id.trim()),\r\n        };\r\n\r\n        if (!this.state.currentId || !newState.ids.includes(this.state.currentId)) {\r\n            newState.currentId = newState.ids[0] || '';\r\n        }\r\n\r\n        this.setState(newState, () => {\r\n            if (this.state.ids.find(id => !this.state.settings[id])) {\r\n                this.readTypeTimer && clearTimeout(this.readTypeTimer);\r\n                this.setState({reading: true});\r\n\r\n                this.readTypeTimer = setTimeout(async () => {\r\n                    this.readTypeTimer = null;\r\n\r\n                    const newState = {\r\n                        settings: JSON.parse(JSON.stringify(this.state.settings)),\r\n                        exists:   JSON.parse(JSON.stringify(this.state.exists)),\r\n                        reading:  false,\r\n                    }\r\n\r\n                    // read all settings of all IDs\r\n                    for (let i = 0; i < this.state.ids.length; i++) {\r\n                        const id = this.state.ids[i];\r\n                        if (!newState.settings[id]) {\r\n                            try {\r\n                                const result = await EditState.readSettingsFromServer(\r\n                                    this.props.socket,\r\n                                    this.props.native.language || I18n.getLanguage(),\r\n                                    this.props.native, this.namespace,\r\n                                    id\r\n                                );\r\n\r\n                                this.originalSettings[id] = JSON.parse(JSON.stringify(result.settings));\r\n                                newState.settings[id]     = result.settings;\r\n                                newState.exists[id]       = result.exists;\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                this.originalSettings[id] = {type: '', name: '', unit: ''};\r\n                                newState.settings[id]     = {type: '', name: '', unit: ''};\r\n                                newState.exists[id]       = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.setState(newState);\r\n                }, noWait ? 0 : 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const changed = this.state.ids.find(id =>\r\n                !this.state.exists[id] || JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]));\r\n\r\n        const exists = this.state.ids.find(id => this.state.exists[id]);\r\n\r\n        let tabs = null;\r\n        if (this.state.ids.length > 1) {\r\n            tabs =\r\n                <Tabs\r\n                    value={this.state.ids.indexOf(this.state.currentId)}\r\n                    onChange={(event, newValue) => this.setState({currentId: this.state.ids[newValue]})}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {this.state.ids.map(id => <Tab label={id} />)}\r\n                </Tabs>\r\n        }\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{this.propsId ? I18n.t('Edit event') : I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        disabled={!!this.propsId}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.ids && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.ids.join(', ')}\r\n                        onChange={e => this.updateIds(e.target.value)}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    {!this.propsId ? <Button\r\n                        style={{marginTop: 8}}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => this.setState({showSelectId: true})}\r\n                    >...</Button> : null}\r\n                </div>\r\n                {this.state.reading ? <LinearProgress/> : <div style={{height: 4, width: '100%'}}/>}\r\n                {tabs}\r\n                {this.state.settings[this.state.currentId] ? <EditState\r\n                    key={this.state.currentId}\r\n                    id={this.state.currentId}\r\n                    onChange={(id, settings) => this.onChange(id, settings)}\r\n                    instance={this.props.instance}\r\n                    reading={this.state.reading}\r\n                    adapterName={this.props.adapterName}\r\n                    themeName={this.props.themeName}\r\n                    themeType={this.props.themeType}\r\n                    socket={this.props.socket}\r\n                    imagePrefix={this.props.imagePrefix}\r\n                    native={this.props.native}\r\n                    settings={this.state.settings[this.state.currentId]}\r\n                /> : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                {this.state.exists[this.state.currentId] && this.state.ids.length === 1 ? <Button\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                    variant=\"contained\"\r\n                    startIcon={<RemoveIcon />}\r\n                >{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.ids.length || !changed}\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                        this.writeSettings([...this.state.ids], () =>\r\n                            this.props.onClose())\r\n                    }\r\n                    startIcon={<SaveIcon />}\r\n                    color=\"primary\"\r\n                >{exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n                <Button\r\n                    onClick={() => this.props.onClose()}\r\n                    startIcon={<CancelIcon />}\r\n                    variant=\"contained\"\r\n                >\r\n                    {!changed ? I18n.t('Close') : I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n            {this.renderSelectId()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(styles)(AddIdDialog);","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listItem: {\r\n        padding: 3,\r\n        '&:hover': {\r\n            background: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light,\r\n        }\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.7,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ?\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                        : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <Button variant=\"contained\"><AddIcon />{I18n.t('Add new states')}</Button>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    onClick={() => this.props.onClose()}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    startIcon={<CancelIcon />}\r\n                >\r\n                    {I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\nimport CircularProgress  from '@material-ui/core/CircularProgress';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconEvent from '@material-ui/icons/Event';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\n\r\n// Copyright Apache 2.0 https://raw.githubusercontent.com/material-icons/material-icons/master/svg/filter_alt/baseline.svg\r\n// https://github.com/material-icons/material-icons/blob/master/LICENSE\r\nclass IconFilter extends React.Component {\r\n    render() {\r\n        return <svg viewBox=\"0 0 24 24\" width={24} height={24} xmlns=\"http://www.w3.org/2000/svg\" className={ this.props.className }>\r\n            <path fill=\"currentColor\" stroke=\"currentColor\" d=\"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39A.998.998 0 0 0 18.95 4H5.04c-.83 0-1.3.95-.79 1.61z\"/>\r\n        </svg>;\r\n    }\r\n}\r\n\r\nfunction serialPromises(promises, _resolve, _results) {\r\n    if (!_resolve) {\r\n        return new Promise(resolve => serialPromises(promises, resolve, []));\r\n    } else if (!promises || !promises.length) {\r\n        _resolve(_results);\r\n    } else {\r\n        const prom = promises.shift();\r\n        prom.then(result => {\r\n            _results.push(result);\r\n            setTimeout(() => serialPromises(promises, _resolve, _results), 0);\r\n        });\r\n    }\r\n}\r\n\r\nconst COLOR_RUNNING_DURATION = '#59be78';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdDurationRunning: {\r\n        animationName: 'running',\r\n        animationDuration: '2s',\r\n        animationIterationCount: 'infinite'\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    buttonAddState: {\r\n        minWidth: '120px !important',\r\n    },\r\n    icon: {\r\n        width: 28,\r\n        height: 28,\r\n        verticalAlign: 'middle',\r\n    },\r\n    filterControl: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(1),\r\n        marginLeft: 3,\r\n    },\r\n    filterDiv: {\r\n        position: 'relative',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n    },\r\n    filterIcon: {\r\n\r\n    },\r\n    filterClearIcon: {\r\n        color: '#FF0000',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: 24,\r\n        height: 24,\r\n        opacity: 0.5,\r\n    },\r\n    filterCounts: {\r\n        fontSize: 10,\r\n        opacity: 0.7,\r\n        float: 'right',\r\n        marginTop: 16,\r\n    },\r\n    filterSecondary: {\r\n        opacity: 0.7,\r\n        fontSize: 'smaller',\r\n    }\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        let filterStates   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`) || null;\r\n        try {\r\n            filterStates = filterStates ? JSON.parse(filterStates) : [];\r\n        } catch (e) {\r\n            filterStates = [];\r\n        }\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        const location = Router.getLocation();\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            filterStates,\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showSelectState: location.dialog === 'selectState',\r\n            showAddIdDialog: location.dialog === 'addId' ? location.id || true : false,\r\n            showAddEventDialog: location.dialog === 'addEvent',\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n            stateIds: null,\r\n            isFloatComma: true,\r\n        };\r\n\r\n        this.imagePrefix    = this.props.imagePrefix || 'files/'; // by default is admin\r\n        this.aliveId        = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId    = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId   = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'icon'},\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {this.headCells.map(cell =>\r\n                    cell.id === 'icon' ?  (\r\n                            this.props.native.icons ? <TableCell\r\n                                key={cell.id}\r\n                                component=\"th\"\r\n                                className={this.props.classes.tdIcons}\r\n                                align=\"left\"\r\n                                padding=\"none\"\r\n                            /> : null\r\n                        )\r\n                    :\r\n                    <TableCell\r\n                        key={cell.id}\r\n                        className={this.props.classes['td' + cell.id[0].toUpperCase() + cell.id.substring(1)]}\r\n                        align={cell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === cell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === cell.id}\r\n                            direction={this.state.orderBy === cell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(cell.id)}\r\n                        >\r\n                            {cell.label}\r\n                            {this.state.orderBy === cell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                )}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    const promises = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                (id => promises.push(this.props.socket.getObject(id)\r\n                                    .then(obj => {\r\n                                        if (obj) {\r\n                                            let count = 0;\r\n                                            // count states\r\n                                            this.state.eventList.forEach(item => item.id === obj._id && count++);\r\n                                            ids.push({id: obj._id, name: Utils.getObjectNameFromObj(obj, I18n.getLanguage()), count});\r\n                                        }\r\n                                    })\r\n                                    .catch(e => ids.push({id}))\r\n                                ))(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    serialPromises(promises)\r\n                        .then(() => {\r\n                            ids.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0));\r\n                            resolve(ids);\r\n                        });\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    renderFilter() {\r\n        return <>\r\n            <div className={this.props.classes.filterDiv}\r\n                 title={I18n.t('Clear filter')}\r\n                 onClick={() => {\r\n                     window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, '');\r\n                     this.setState({filterStates: []});\r\n                 }}\r\n            >\r\n                <IconFilter className={this.props.classes.filterIcon}/>\r\n                {this.state.filterStates.length ? <IconClose className={this.props.classes.filterClearIcon}/> : null}\r\n            </div>\r\n            <Select\r\n                className={this.props.classes.filterControl}\r\n                multiple\r\n                label={I18n.t('Filter by ID')}\r\n                value={this.state.filterStates}\r\n                onChange={event => {\r\n                    window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, JSON.stringify(event.target.value));\r\n                    this.setState({filterStates: event.target.value});\r\n                }}\r\n                //input={<Input placeholder={I18n.t('Filter by ID')}/>}\r\n                onOpen={() => this.readIds().then(ids => this.setState({stateIds: ids}))}\r\n                renderValue={selected => selected.length === 1 ? selected[0] : selected.length}\r\n            >\r\n                {!this.state.stateIds ?\r\n                    <MenuItem><CircularProgress /></MenuItem>\r\n                    :\r\n                    this.state.stateIds.map(item =>\r\n                        <MenuItem key={item.id} value={item.id}>\r\n                            <Checkbox checked={this.state.filterStates.includes(item.id)} />\r\n                            <ListItemText\r\n                                primary={<span>{item.name} <span className={this.props.classes.filterCounts}>{item.count}</span></span>}\r\n                                secondary={item.id}\r\n                                classes={{secondary: this.props.classes.filterSecondary}}\r\n                            />\r\n                        </MenuItem>)\r\n                }\r\n            </Select>\r\n        </>;\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {!this.state.selected.length ? this.renderFilter() : null}\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => {\r\n                                Router.doNavigate(null, 'addId', this.state.selectedId);\r\n                                this.setState({showAddIdDialog: this.state.selectedId})\r\n                            }}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => {\r\n                            Router.doNavigate(null, 'selectState', '');\r\n                            this.setState({showSelectState: true});\r\n                        }}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8, paddingLeft: 16}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle', paddingRight: 16}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        if (this.state.filterStates && this.state.filterStates.length) {\r\n            array = array.filter(item => this.state.filterStates.includes(item.id));\r\n        }\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.showSelectState) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    Router.doNavigate(null, 'addId', id);\r\n                    this.setState({showAddIdDialog: id, showSelectState: false});\r\n                } else {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showSelectState: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n            <Table\r\n                className={this.props.classes.table}\r\n                size=\"small\"\r\n            >\r\n                {this.renderHeader()}\r\n                <TableBody>\r\n                    {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                        .map((row, index) => {\r\n                            const isItemSelected = this.state.selected.includes(row._id);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return <TableRow\r\n                                hover\r\n                                onClick={() => this.handleClick(row._id)}\r\n                                style={row._style || undefined}\r\n                                role=\"checkbox\"\r\n                                aria-checked={isItemSelected}\r\n                                tabIndex={-1}\r\n                                key={row._id}\r\n                                selected={isItemSelected}\r\n                            >\r\n                                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        checked={isItemSelected}\r\n                                        inputProps={{ 'aria-labelledby': labelId }}\r\n                                    />\r\n                                </TableCell>}\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                {this.props.native.icons ?\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                        {row.icon ? (row.icon.endsWith('default') ? <IconEvent/> : <Image\r\n                                            imagePrefix={this.imagePrefix}\r\n                                            src={row.icon}\r\n                                            className={this.props.classes.icon}\r\n                                            color={(row._style && row._style.color) || ''}\r\n                                        />) : null}\r\n                                    </TableCell>\r\n                                    : null}\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                {this.props.native.duration ?\r\n                                    <TableCell style={row.dr ? Object.assign({}, row._style || {}, {color: COLOR_RUNNING_DURATION}) : row._style || undefined } className={clsx(row.dr && this.props.classes.tdDurationRunning, this.props.classes.tdDuration)} component=\"td\" padding=\"none\" align=\"right\">\r\n                                        {row.duration || ''}</TableCell>\r\n                                    : null}\r\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                    <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                        <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                            e.stopPropagation();\r\n                                            Router.doNavigate(null, 'addId', row.stateId);\r\n                                            this.setState({showAddIdDialog: row.stateId});\r\n                                        }}><IconEdit/></IconButton>\r\n                                    </Tooltip>: null}\r\n                                </TableCell>}\r\n                            </TableRow>;\r\n                        })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                imagePrefix={this.imagePrefix}\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                imagePrefix={this.imagePrefix}\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n            {this.renderToolbar()}\r\n            {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n            {this.renderToast()}\r\n            {this.renderConfirmDialog()}\r\n            {this.renderAddEventDialog()}\r\n            {this.renderAddIdDialog()}\r\n            {this.renderSelectState()}\r\n        </Paper>;\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fieldWide: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        paddingRight: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    orientation: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fontSize: {\r\n        marginTop: -3,\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    titleText: {\r\n        width: 310,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 105,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list on {{YYYY MM DD H:mm:ss}}',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\r\n                Object.keys(settings).forEach(attr => {\r\n                    if (attr.toLowerCase().includes('color')) {\r\n                        if (typeof settings[attr] === 'object') {\r\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\r\n                        }\r\n                        if (settings[attr].startsWith('rgb')) {\r\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    try {\r\n                                        this.lastElement.focus();\r\n                                    } catch (e) {\r\n\r\n                                    }\r\n\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e && e.target) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        let expanded;\r\n        if (name === true) {\r\n            expanded = ['sizes', 'enabledTitle', 'enabledHeader', 'margins', 'text', 'enabledTime', 'enabledEvent', 'enabledValue', 'enabledDuration', 'pageNumberEnabled'];\r\n        } else if (name === false) {\r\n            expanded = [];\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            if (ex) {\r\n                !expanded.includes(name) && expanded.push(name);\r\n            } else {\r\n                const pos = expanded.indexOf(name);\r\n                pos !== -1 && expanded.splice(pos, 1);\r\n            }\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    toggleOrientation(orientation, e) {\r\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\r\n            const native = JSON.parse(JSON.stringify(this.props.native));\r\n            const pageWidth = native.pdfSettings.pageWidth;\r\n            const top = native.pdfSettings.margins.top;\r\n            const bottom = native.pdfSettings.margins.bottom;\r\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\r\n            native.pdfSettings.pageHeight = pageWidth;\r\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\r\n            native.pdfSettings.margins.left = top;\r\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\r\n            native.pdfSettings.margins.right = bottom;\r\n            native.pdfSettings.orientation = orientation;\r\n            this.props.updateNative(native);\r\n        }\r\n    }\r\n\r\n    renderPageSize(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('sizes')}\r\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControl className={clsx(this.props.classes.fieldWide, this.props.classes.orientation)}>\r\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                    <Select\r\n                        disabled={this.state.pdfInGeneration}\r\n                        value={settings.orientation || 'portrait'}\r\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\r\n                    >\r\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Width')}\r\n                    value={settings.pageWidth}\r\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Height')}\r\n                    value={settings.pageHeight}\r\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for first page')}\r\n                    value={settings.paddingTopFirst}\r\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for other pages')}\r\n                    value={settings.paddingTop}\r\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Padding left')}\r\n                    value={settings.paddingLeft}\r\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={clsx(this.props.classes.titleText)}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                    helperText={I18n.t('You can add time with {{YYYY MM DD}}')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}\r\n                    startIcon={<IconHelp />}\r\n                >\r\n                    {I18n.t('Time format description')}\r\n                </Button>\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={clsx(this.props.classes.field, this.props.classes.fontSize)}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 408, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 400, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textValue}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    key=\"pdfButton\"\r\n                    control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                    label={I18n.t('Show PDF generate button on list')}\r\n                />\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton onClick={() => this.onExpand(false)} title={I18n.t('Collapse all')} disabled={!this.state.expanded.length}><ExpandLessIcon /></IconButton>\r\n                <IconButton onClick={() => this.onExpand(true)} title={I18n.t('Expand all')} disabled={this.state.expanded.length === 10}><ExpandMoreIcon /></IconButton>\r\n            </Grid>\r\n            {this.renderPageSize(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={`/files/eventlist/report${this.props.instance ? '-' + this.props.instance : ''}.pdf?q=${this.state.random}`} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    updateNative: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n        this.isWeb = window.socketUrl !== undefined;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n\r\n        Object.keys(native.pdfSettings).forEach(attr => {\r\n            if (attr.toLowerCase().includes('color')) {\r\n                if (typeof native.pdfSettings[attr] === 'object') {\r\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\r\n                }\r\n                if (native.pdfSettings[attr].startsWith('rgb')) {\r\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\r\n                }\r\n            }\r\n        });\r\n\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    updateNative(native, cb) {\r\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n        this.setState({native, changed}, cb);\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => Router.doNavigate(e.target.parentNode.dataset.name)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            imagePrefix={this.isWeb ? '../' : '../../files/'}\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://f41fcdf099e848c590da9b96d0ba67c8@sentry.iobroker.net/109',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}