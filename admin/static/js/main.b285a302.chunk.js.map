{"version":3,"sources":["../node_modules/@iobroker/adapter-react/assets/rooms sync /^/.//.*$","../node_modules/@iobroker/adapter-react/assets/devices sync /^/.//.*$","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","assets/telegram.svg","assets/pushover.svg","Components/EditState.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MessengerSelect","props","state","selected","instances","adapterName","loadedAdapterName","names","loadData","this","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","item","title","common","titleLang","name","en","setState","_id","split","pop","setTimeout","length","FormControl","className","classes","formControl","style","InputLabel","label","t","Select","multiple","value","onChange","event","target","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","i","MenuItem","Checkbox","checked","includes","ListItemText","primary","CircularProgress","React","Component","withStyles","theme","Options","onAliveChanged","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","IconButton","color","close","onClick","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","TextField","maxLength","type","inputProps","min","max","margin","dateFormat","Button","variant","buttonFormat","startIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","undefined","stateId","icons","duration","deleteAlarmsByDisable","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","display","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","openAbove","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","marginBottom","button","card","maxWidth","textAlign","media","height","verticalAlign","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","marginTop","whiteSpace","AddEventDialog","showTime","ts","icon","imagePrefix","parseFloat","toString","Dialog","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","disabled","reading","DialogActions","DEFAULT_TEMPLATE","DISABLED_TEXT","EditState","onStateChanged","settings","simulateState","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","getSystemConfig","systemConfig","isFloatComma","word","lang","translations","w","ownColor","states","stateVal","find","defColor","ColorPicker","getColor","ownIcon","defIcon","defaultBooleanIconTrue","defaultBooleanIconFalse","defText","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","eventDefault","unit","duration2text","fromNow","ms","withSpaces","Math","round","floor","hours","minutes","seconds","forEach","isBoolean","original","toUpperCase","flex","setSettings","Paper","paper","root","textDense","attr","getSettings","width100minus32","count","telegram","whatsAppCMB","pushover","messengers","src","Telegram","alt","messengersIcon","clsx","whatsAppIcon","Pushover","alarmsOnly","messagesInAlarmsOnly","defaultMessengers","exampleColor","getExampleColor","Fragment","examplePaper","exampleTitle","exampleText","getExampleIcon","exampleIcon","buildExample","Switch","width100","changesOnly","iconOpenAll","iconCloseAll","renderStateSettings","a","b","renderState","renderMessengers","newState","changed","trueState","falseState","newVal","Array","nState","objStates","parseStates","_st","obj","Promise","parts","getObject","exists","getName","custom","newSettings","addBooleanStates","addNumericStates","extractIconAndColor","result","curSettings","enabled","it","withWidth","background","palette","marginLeft","padding","flexGrow","float","AddIdDialog","propsId","ids","currentId","showSelectId","confirmExit","confirmRemove","unknownIds","originalSettings","updateIds","cb","shift","setObject","writeSettings","ok","cancel","isYes","removeSettings","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","noWait","filter","trim","readTypeTimer","clearTimeout","readSettingsFromServer","console","error","tabs","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","field","unknownId","textFieldWithButton","LinearProgress","renderConfirmExit","renderConfirmRemove","renderSelectId","SelectStateDialog","promises","readIds","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","startsWith","getSelectIdIcon","ListItem","listItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","size","dialogContent","dense","renderListItem","dark","light","opacity","main","IconFilter","viewBox","xmlns","fill","stroke","d","serialPromises","_resolve","_results","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","filterStates","showEditButton","location","Router","getLocation","showDeleteConfirm","showSelectState","dialog","showAddIdDialog","showAddEventDialog","selectedId","stateIds","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","cell","component","tdIcons","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","pathname","now","focus","catch","filterDiv","filterIcon","filterClearIcon","filterControl","onOpen","filterCounts","filterSecondary","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","renderFilter","Tooltip","doNavigate","toolbarButton","Fab","buttonAddState","toolbarButtonText","paddingLeft","paddingRight","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","handleClick","_style","role","tabIndex","tdTs","scope","endsWith","tdEvent","tdVal","dr","assign","tdDurationRunning","editButton","stopPropagation","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","backgroundColor","lighten","border","clip","position","top","animationName","animationDuration","animationIterationCount","lineHeight","cursor","left","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","bottom","right","PdfSettings","random","triggerTimer","rgb2hex","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","fieldWide","toggleOrientation","onFocus","Grid","xs","md","lg","container","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","isWeb","socketUrl","selectedTab","RGB2hex","savedNative","AppBar","getSelectedTab","parentNode","dataset","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","match","getThemeName","log","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b285a302.chunk.js","sourcesContent":["var map = {\n\t\"./Anteroom.svg\": 551,\n\t\"./Attic.svg\": 552,\n\t\"./Balcony.svg\": 553,\n\t\"./Barn.svg\": 554,\n\t\"./Basement.svg\": 555,\n\t\"./Bathroom.svg\": 556,\n\t\"./Bedroom.svg\": 557,\n\t\"./Boiler Room.svg\": 558,\n\t\"./Carport.svg\": 559,\n\t\"./Cellar.svg\": 560,\n\t\"./Chamber.svg\": 561,\n\t\"./Corridor.svg\": 562,\n\t\"./Dining Area.svg\": 563,\n\t\"./Dining Room.svg\": 564,\n\t\"./Dining.svg\": 565,\n\t\"./Dressing Room.svg\": 566,\n\t\"./Driveway.svg\": 567,\n\t\"./Entrance.svg\": 568,\n\t\"./Equipment Room.svg\": 569,\n\t\"./Front Yard.svg\": 570,\n\t\"./Gallery.svg\": 571,\n\t\"./Garage.svg\": 572,\n\t\"./Garden.svg\": 573,\n\t\"./Ground Floor.svg\": 574,\n\t\"./Guest Bathroom.svg\": 575,\n\t\"./Guest Room.svg\": 576,\n\t\"./Gym.svg\": 577,\n\t\"./Hall.svg\": 578,\n\t\"./Home Theater.svg\": 579,\n\t\"./Kitchen.svg\": 580,\n\t\"./Laundry Room.svg\": 581,\n\t\"./Living Area.svg\": 582,\n\t\"./Living Room.svg\": 583,\n\t\"./Locker Room.svg\": 584,\n\t\"./Nursery.svg\": 585,\n\t\"./Office.svg\": 586,\n\t\"./Outdoors.svg\": 587,\n\t\"./Playroom.svg\": 588,\n\t\"./Pool.svg\": 589,\n\t\"./Rear Wall.svg\": 590,\n\t\"./Second Floor.svg\": 591,\n\t\"./Shed.svg\": 592,\n\t\"./Sleeping Area.svg\": 593,\n\t\"./Stairway.svg\": 594,\n\t\"./Stairwell.svg\": 595,\n\t\"./Storeroom.svg\": 596,\n\t\"./Summer House.svg\": 597,\n\t\"./Swimming Pool.svg\": 598,\n\t\"./Terrace.svg\": 599,\n\t\"./Toilet.svg\": 600,\n\t\"./Upstairs.svg\": 601,\n\t\"./Wardrobe.svg\": 602,\n\t\"./Washroom.svg\": 603,\n\t\"./Wc.svg\": 604,\n\t\"./Windscreen.svg\": 605,\n\t\"./Workshop.svg\": 606,\n\t\"./Workspace.svg\": 607,\n\t\"./list\": 231,\n\t\"./list.json\": 231,\n\t\"./names.txt\": 608,\n\t\"./parseNames\": 324,\n\t\"./parseNames.d.ts\": 609,\n\t\"./parseNames.js\": 324\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 550;","var map = {\n\t\"./Alarm Systems.svg\": 611,\n\t\"./Amplifier.svg\": 612,\n\t\"./Awnings.svg\": 613,\n\t\"./Battery Status.svg\": 614,\n\t\"./Ceiling Spotlights.svg\": 615,\n\t\"./Chandelier.svg\": 616,\n\t\"./Climate.svg\": 617,\n\t\"./Coffee Makers.svg\": 618,\n\t\"./Cold Water.svg\": 619,\n\t\"./Computer.svg\": 620,\n\t\"./Consumption.svg\": 621,\n\t\"./Curtains.svg\": 622,\n\t\"./Dishwashers.svg\": 623,\n\t\"./Doors.svg\": 624,\n\t\"./Doorstep.svg\": 625,\n\t\"./Dryer.svg\": 626,\n\t\"./Fan.svg\": 627,\n\t\"./Floor Lamps.svg\": 628,\n\t\"./Garage Doors.svg\": 629,\n\t\"./Gates.svg\": 630,\n\t\"./Hairdryer.svg\": 631,\n\t\"./Handle.svg\": 632,\n\t\"./Hanging Lamps.svg\": 633,\n\t\"./Heater.svg\": 634,\n\t\"./Hoods.svg\": 635,\n\t\"./Hot Water.svg\": 636,\n\t\"./Humidity.svg\": 637,\n\t\"./Iron.svg\": 638,\n\t\"./Irrigation.svg\": 639,\n\t\"./Led Strip.svg\": 640,\n\t\"./Light.svg\": 641,\n\t\"./Lightings.svg\": 642,\n\t\"./Lock.svg\": 643,\n\t\"./Louvre.svg\": 644,\n\t\"./Mowing Machine.svg\": 645,\n\t\"./Music.svg\": 646,\n\t\"./Outdoor Blinds.svg\": 647,\n\t\"./People.svg\": 648,\n\t\"./Pool.svg\": 649,\n\t\"./Power Consumption.svg\": 650,\n\t\"./Printer.svg\": 651,\n\t\"./Pump.svg\": 652,\n\t\"./Receiver.svg\": 653,\n\t\"./Sconces.svg\": 654,\n\t\"./Security.svg\": 655,\n\t\"./Shading.svg\": 656,\n\t\"./Shutters.svg\": 657,\n\t\"./SmokeDetector.svg\": 658,\n\t\"./Sockets.svg\": 659,\n\t\"./Speaker.svg\": 660,\n\t\"./Stove.svg\": 661,\n\t\"./Table Lamps.svg\": 662,\n\t\"./Temperature Sensors.svg\": 663,\n\t\"./Tv.svg\": 664,\n\t\"./Vacuum Cleaner.svg\": 665,\n\t\"./Ventilation.svg\": 666,\n\t\"./Washing Machines.svg\": 667,\n\t\"./Water Consumption.svg\": 668,\n\t\"./Water Heater.svg\": 669,\n\t\"./Water.svg\": 670,\n\t\"./Weather.svg\": 671,\n\t\"./Window.svg\": 672,\n\t\"./list\": 230,\n\t\"./list.json\": 230,\n\t\"./names.txt\": 673,\n\t\"./parseNames\": 325,\n\t\"./parseNames.d.ts\": 674,\n\t\"./parseNames.js\": 325\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 610;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst styles = theme => ({\n\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nclass MessengerSelect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: this.props.selected || [],\n            instances: null,\n            adapterName: this.props.adapterName,\n            loadedAdapterName: this.props.adapterName,\n            names: [],\n        };\n\n        this.loadData(this.state.adapterName);\n    }\n\n    loadData(adapterName) {\n        return this.props.socket.getAdapterInstances(adapterName)\n            .then(instances => {\n                const systemLang = I18n.getLanguage();\n                const names = instances.map(item => {\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\n                    if (typeof title === 'object') {\n                        return title[systemLang] || title.en;\n                    } else {\n                        return title;\n                    }\n                });\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\n            });\n    }\n\n    /*static getDerivedStateFromProps(props, state) {\n        const newState = {};\n        let changed = false;\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\n            changed = true;\n        }\n        if (props.adapterName && props.adapterName !== state.adapterName) {\n            newState.adapterName = props.adapterName;\n            changed = true;\n        }\n\n        return changed ? newState : null;\n    }*/\n\n\n    render() {\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\n        }\n\n        if (this.state.instances && !this.state.instances.length) {\n            return null;\n        }\n\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\n            {!this.state.instances ?\n                <CircularProgress/> :\n                <>\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\n                    <Select\n                        multiple\n                        value={this.state.selected}\n                        onChange={event => {\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\n                        }}\n                        input={<Input />}\n                        renderValue={selected => selected.join(', ')}\n                        MenuProps={{\n                            PaperProps: {\n                                style: {\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                                    width: 250\n                                }\n                            }\n                        }}\n                    >\n                        {this.state.instances.map((name, i) =>\n                            <MenuItem key={name} value={name}>\n                                <Checkbox checked={this.state.selected.includes(name)} />\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\n                            </MenuItem>\n                        )}\n                    </Select>\n                </>}\n            </FormControl>;\n    }\n}\n\nMessengerSelect.propTypes = {\n    selected: PropTypes.array,\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MessengerSelect);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdHelp as IconHelp} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\n\nimport MessengerSelect from  '../Components/MessengerSelect';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    inputMessengers: {\n        minWidth: 200,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    },\n    buttonFormat: {\n        marginTop: 20,\n    },\n    checkBoxLabel: {\n        whiteSpace: 'nowrap'\n    },\n    heading: {\n        fontWeight: 'bold',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\n        try {\n            expanded = JSON.parse(expanded);\n        } catch (e) {\n            expanded = [];\n        }\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n            expanded,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n\n        this.props.socket.getState(this.aliveId).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{'aria-describedby': 'message-id'}}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onToggle(id) {\n        const expanded = [...this.state.expanded];\n        const pos = expanded.indexOf(id);\n        if (pos !== -1)  {\n            expanded.splice(pos, 1);\n        } else {\n            expanded.push(id);\n            expanded.sort();\n        }\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\n        this.setState({expanded});\n    }\n\n    render() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                <TextField\n                    label={ I18n.t('Max list length') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.maxLength }\n                    type=\"number\"\n                    inputProps={{min: 1, max: 1000}}\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\n                    margin=\"normal\"\n                />\n                <br/>\n                <TextField\n                    label={ I18n.t('Date format') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.dateFormat }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\n                    margin=\"normal\"\n                />\n                <Button\n                    variant=\"contained\"\n                    className={this.props.classes.buttonFormat}\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}\n                    startIcon={<IconHelp />}\n                >\n                        {I18n.t('Format description')}\n                </Button>\n                <br/>\n                <TextField\n                    label={ I18n.t('Show absolute time after seconds') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.relativeTime }\n                    type=\"number\"\n                    inputProps={{min: 0, max: 140000}}\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\n                    margin=\"normal\"\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.stateId === undefined ? true : this.props.native.stateId} onChange={e => this.props.onChange('stateId', e.target.checked)} />}\n                    label={I18n.t('Show state ID in the list')}\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\n                    label={I18n.t('Show icons in the list')}\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\n                    label={I18n.t('Show duration in the list')}\n                />\n                <br/>\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.deleteAlarmsByDisable || false} onChange={e => this.props.onChange('deleteAlarmsByDisable', e.target.checked)} />}\n                    label={I18n.t('Remove alarm events from list by the alarm mode deactivating')}\n                />\n\n                <Accordion\n                    expanded={this.state.expanded.includes('state_boolean')}\n                    onChange={() => this.onToggle('state_boolean')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <TextField\n                            label={ I18n.t('Default event text for boolean') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanText }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\n                            margin=\"normal\"\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                        />\n                        <br/>\n                        <TextField\n                            label={ I18n.t('Default text by TRUE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextTrue }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        {narrowWidth && <br/>}\n                        <TextField\n                            label={ I18n.t('Default text by FALSE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextFalse }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        <br/>\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorTrue}\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\n                            name={I18n.t('Default color by TRUE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\n                        />\n                        {narrowWidth && <br/>}\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorFalse}\n                            style={{width: 300, display: 'inline-block'}}\n                            name={I18n.t('Default color by FALSE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n\n                <TextField\n                    label={ I18n.t('Default event text for non boolean states') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.defaultNonBooleanText }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                    margin=\"normal\"\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                />\n                <br/>\n                <FormControl className={this.props.classes.input}>\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\n                    <Select\n                        value={this.props.native.language || 'system'}\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\n                    >\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\n                        <MenuItem value=\"en\">English</MenuItem>\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\n                        <MenuItem value=\"ru\">русский</MenuItem>\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\n                        <MenuItem value=\"fr\">français</MenuItem>\n                        <MenuItem value=\"it\">Italiano</MenuItem>\n                        <MenuItem value=\"es\">Espanol</MenuItem>\n                        <MenuItem value=\"pl\">Polski</MenuItem>\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\n                    </Select>\n                </FormControl>\n                <Accordion\n                    expanded={this.state.expanded.includes('state_messengers')}\n                    onChange={() => this.onToggle('state_messengers')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <MessengerSelect\n                            label={ I18n.t('Telegram') }\n                            adapterName={'telegram'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultTelegram }\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('WhatsApp-CMB') }\n                            adapterName={'whatsapp-cmb'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultWhatsAppCMB }\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('Pushover') }\n                            adapterName={'pushover'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultPushover }\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\n                            socket={this.props.socket}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\n\nconst styles = theme => ({\n    textField: {\n\n    }\n});\n\nclass AddEventDialog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showTime: false,\n            event: '',\n            val: '',\n            ts: '',\n            icon: ''\n        };\n\n        this.imagePrefix = this.props.imagePrefix;\n    }\n\n    onOk() {\n        const event = {event: this.state.event};\n        if (this.state.ts) {\n            event.ts = this.state.ts;\n        }\n\n        if (this.state.icon) {\n            event.icon = this.state.icon;\n        }\n\n        if (this.state.val) {\n            if (parseFloat(this.state.val).toString() === this.state.val) {\n                event.val = parseFloat(this.state.val);\n            } else if (this.state.val === 'true') {\n                event.val = true;\n            } else if (this.state.val === 'false') {\n                event.val = false;\n            } else  {\n                event.val = this.state.val;\n            }\n        }\n        this.props.onClose(event);\n    }\n\n    render() {\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    {I18n.t('You can add event to table, e.g. some comment.')}\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label={I18n.t('Event text')}\n                    className={this.props.classes.textField}\n                    value={this.state.event}\n                    onKeyUp={e =>\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\n                    onChange={e => this.setState({event: e.target.value})}\n                    type=\"text\"\n                    fullWidth\n                />\n                <br/>\n                <TextField\n                    margin=\"dense\"\n                    label={I18n.t('Value')}\n                    value={this.state.val}\n                    onChange={e => this.setState({val: e.target.value})}\n                    type=\"text\"\n                    className={this.props.classes.textField}\n                    helperText={I18n.t('optional')}\n                    fullWidth\n                />\n                <br/>\n                <FormControlLabel\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\n                    } />}\n                    label={I18n.t('Set time')}\n                />\n                <br/>\n                {this.state.showTime ? <TextField\n                    label={I18n.t('Time')}\n                    type=\"datetime-local\"\n                    value={this.state.ts}\n                    onChange={e => this.setState({ts: e.target.value})}\n                    className={this.props.classes.textField}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                /> : null }\n                <IconPicker\n                    disabled={this.props.reading}\n                    imagePrefix={this.imagePrefix}\n                    label={I18n.t('Icon')}\n                    socket={this.props.socket}\n                    value={this.state.icon}\n                    onChange={icon =>\n                        this.setState({icon})}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\n                    onClick={() => this.onOk()}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<AddIcon />}\n                >\n                    {I18n.t('Insert')}\n                </Button>\n                <Button\n                    onClick={() => this.props.onClose()}\n                    variant=\"contained\"\n                    startIcon={<CancelIcon />}\n                >\n                    {I18n.t('Cancel')}\n                </Button>\n            </DialogActions>\n        </Dialog>;\n    }\n}\n\nAddEventDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    imagePrefix: PropTypes.string,\n};\n\nexport default withStyles(styles)(AddEventDialog);\n","export default __webpack_public_path__ + \"static/media/telegram.e95e905a.svg\";","export default __webpack_public_path__ + \"static/media/pushover.9215368a.svg\";","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport moment from 'moment'\nimport clsx from 'clsx'\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport 'moment/locale/fr';\nimport 'moment/locale/de';\nimport 'moment/locale/en-gb';\nimport 'moment/locale/ru';\nimport 'moment/locale/it';\nimport 'moment/locale/es';\nimport 'moment/locale/pt';\nimport 'moment/locale/zh-cn';\nimport 'moment/locale/pl';\nimport 'moment/locale/pt';\nimport 'moment/locale/nl';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\nimport Telegram from '../assets/telegram.svg';\nimport Pushover from '../assets/pushover.svg';\n\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\nimport Image from '@iobroker/adapter-react/Components/Image';\n\nimport MessengerSelect from '../Components/MessengerSelect';\n\nconst styles = theme => ({\n    textField: {\n        width: 250,\n        marginRight: theme.spacing(1),\n    },\n    examplePaper: {\n        marginBottom: theme.spacing(2),\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\n    },\n    exampleTitle: {\n        fontWeight: 'bold',\n    },\n    exampleText: {\n        marginLeft: theme.spacing(1),\n        fontStyle: 'italic',\n        fontSize: 20,\n    },\n    exampleIcon: {\n        maxWidth: 32,\n        maxHeight: 32,\n        marginRight: theme.spacing(1)\n    },\n    textDense: {\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    paper: {\n        marginBottom: theme.spacing(1),\n        padding: theme.spacing(1),\n        width: 'calc(100% - ' + theme.spacing(2) + 'px)',\n    },\n    formControl: {\n        width: 200\n    },\n    inputMessengers: {\n        minWidth: 200,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    flex: {\n        flexGrow: 1,\n    },\n    messengersIcon: {\n        width: 24,\n        height: 24,\n    },\n    whatsAppIcon: {\n        color: '#45c655'\n    },\n    width100: {\n        width: '100%',\n    },\n    width100minus32: {\n        width: 'calc(100% - 32px)',\n    },\n    iconOpenAll: {\n        float: 'right',\n        marginRight: 4,\n    },\n    iconCloseAll: {\n        float: 'right'\n    }\n});\n\nconst DEFAULT_TEMPLATE = 'default';\nconst DISABLED_TEXT = '-------------';\n\nclass EditState extends Component {\n    constructor(props) {\n        super(props);\n\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\n        try {\n            expanded = JSON.parse(expanded);\n        } catch (e) {\n            expanded = [];\n        }\n\n        this.state = {\n            id: this.props.id || '',\n            settings: JSON.parse(JSON.stringify(this.props.settings)),\n            expanded,\n            simulateState: '',\n        };\n\n        this.imagePrefix = this.props.imagePrefix;\n        this.language = this.props.native.language || I18n.getLanguage();\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\n\n        this.textSwitchedOn = this.translate('switched on', this.language);\n        this.textSwitchedOff = this.translate('switched off', this.language);\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\n\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\n\n        this.props.socket.getSystemConfig()\n            .then(systemConfig => this.isFloatComma = systemConfig.common.isFloatComma);\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.props.id, this.onStateChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.props.id, this.onStateChanged);\n    }\n\n    static addBooleanStates(newState) {\n        const states = JSON.parse(JSON.stringify(newState.states || []));\n        let changed;\n        let trueState = states.find(item => item.val === 'true');\n        if (!trueState) {\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\n            states.push(trueState);\n            changed = true;\n        } else {\n            trueState.original = 'true';\n        }\n        let falseState = states.find(item => item.val === 'false');\n        if (!falseState) {\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\n            states.push(falseState);\n            changed = true;\n        } else {\n            falseState.original = 'false';\n        }\n\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\n        if (newVal !== trueState.defText) {\n            changed = true;\n            trueState.defText = newVal;\n        }\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\n        if (newVal !== trueState.text) {\n            changed = true;\n            trueState.text = newVal;\n        }\n\n        newVal = trueState.color === DEFAULT_TEMPLATE;\n        if (newVal !== trueState.defColor) {\n            changed = true;\n            trueState.defColor = newVal;\n        }\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\n        if (newVal !== trueState.color) {\n            changed = true;\n            trueState.color = newVal;\n        }\n\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\n        if (newVal !== trueState.defIcon) {\n            changed = true;\n            trueState.defIcon = newVal;\n        }\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\n        if (newVal !== trueState.icon) {\n            changed = true;\n            trueState.icon = newVal;\n        }\n\n        newVal = falseState.text === DEFAULT_TEMPLATE;\n        if (newVal !== falseState.defText) {\n            changed = true;\n            falseState.defText = newVal;\n        }\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\n        if (newVal !== falseState.text) {\n            changed = true;\n            falseState.text = newVal;\n        }\n\n        newVal = falseState.color === DEFAULT_TEMPLATE;\n        if (newVal !== falseState.defColor) {\n            changed = true;\n            falseState.defColor = newVal;\n        }\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\n        if (newVal !== falseState.color) {\n            changed = true;\n            falseState.color = newVal;\n        }\n\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\n        if (newVal !== falseState.defIcon) {\n            changed = true;\n            falseState.defIcon = newVal;\n        }\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\n        if (newVal !== falseState.icon) {\n            changed = true;\n            falseState.icon = newVal;\n        }\n\n        if (changed) {\n            newState.states = states;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    static parseStates(states) {\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\n        if (states instanceof Array) {\n            const nState = {};\n            states.forEach((val, i) => nState[i] = val);\n            return nState;\n        } else if (typeof states !== 'object') {\n            return null;\n        } else {\n            return states;\n        }\n    }\n\n    static addNumericStates(newState, objStates) {\n        const states = JSON.parse(JSON.stringify(newState.states || []));\n        let changed;\n        objStates = EditState.parseStates(objStates);\n        if (objStates) {\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\n            Object.keys(objStates).forEach(attr => {\n                let _st = states.find(item => item.val === attr);\n                if (!_st) {\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\n                    states.push(_st);\n                    changed = true;\n                }\n            });\n\n            states.forEach(item => {\n                if (item.original !== objStates[item.val]) {\n                    item.original = objStates[item.val];\n                    changed = true;\n                }\n            });\n\n            if (changed) {\n                newState.states = states;\n                return true;\n            } else {\n                return false;\n            }\n        } else if (newState.states) {\n            newState.states = null;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    onStateChanged = (id, state) =>\n        this.setState({state: state || null});\n\n    static extractIconAndColor(socket, obj) {\n        if (obj && obj.common && obj.common.icon) {\n            return Promise.resolve({icon: obj.common.icon, color: obj.common.color});\n        } else {\n            const parts = obj._id.split('.');\n            parts.pop();\n\n            return socket.getObject(parts.join('.'))\n                .then(obj => {\n                    if (obj && obj.type === 'channel') {\n                        if (obj.common && obj.common.icon) {\n                            return {icon: obj.common.icon, color: obj.common.color};\n                        } else {\n                            const parts = obj._id.split('.');\n                            parts.pop();\n                            return socket.getObject(parts.join('.'))\n                                .then(obj => {\n                                    if (obj && (obj.type === 'channel' || obj.type === 'device')) {\n                                        if (obj.common && obj.common.icon) {\n                                            return {icon: obj.common.icon, color: obj.common.color};\n                                        } else {\n                                            return null;\n                                        }\n                                    } else {\n                                        return null;\n                                    }\n                                });\n                        }\n                    } else if (obj && obj.type === 'device' && obj.common) {\n                        return {icon: obj.common.icon, color: obj.common.color};\n                    } else {\n                        return null;\n                    }\n                });\n        }\n    }\n\n    static readSettingsFromServer(socket, lang, native, namespace, id) {\n        return socket.getObject(id)\n            .then(obj => {\n                const settings = {\n                    type:        (obj && obj.common && obj.common.type) || '',\n                    name:        EditState.getName(obj, lang),\n                    unit:        (obj && obj.common && obj.common.unit) || '',\n                    whatsAppCMB: [],\n                    pushover:    [],\n                    telegram:    [],\n                    event:       '',\n                    icon:        '',\n                    color:       '',\n                    alarmsOnly:  false,\n                    messagesInAlarmsOnly: false,\n                };\n\n                let exists;\n\n                if (obj && obj.common && obj.common.custom && obj.common.custom[namespace]) {\n                    const newSettings = obj.common.custom[namespace];\n                    exists = true;\n\n                    settings.event                = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\n                    settings.eventDefault         = newSettings.event === DEFAULT_TEMPLATE;\n                    settings.icon                 = newSettings.icon;\n                    settings.color                = newSettings.color;\n                    settings.states               = newSettings.states;\n                    settings.alarmsOnly           = newSettings.alarmsOnly;\n                    settings.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\n                    settings.whatsAppCMB          = newSettings.whatsAppCMB || [];\n                    settings.pushover             = newSettings.pushover    || [];\n                    settings.telegram             = newSettings.telegram    || [];\n                    settings.changesOnly          = newSettings.changesOnly;\n\n                    settings.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\n\n                    if (settings.type === 'boolean') {\n                        EditState.addBooleanStates(settings);\n                        settings.simulateState = false;\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\n                        EditState.addNumericStates(settings, obj.common.states);\n                        settings.simulateState = null;\n                    } else {\n                        settings.states = null;\n                        settings.simulateState = null;\n                    }\n                } else {\n                    settings.defaultMessengers = true;\n                    settings.whatsAppCMB = native.defaultWhatsAppCMB || [];\n                    settings.pushover    = native.defaultPushover    || [];\n                    settings.telegram    = native.defaultTelegram    || [];\n\n                    exists = false;\n                    if (settings.type === 'boolean') {\n                        EditState.addBooleanStates(settings);\n                        settings.simulateState = false;\n                    } else if (settings.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\n                        EditState.addNumericStates(settings, obj.common.states);\n                        settings.simulateState = null;\n                    } else {\n                        settings.states = null;\n                        settings.simulateState = null;\n                    }\n                }\n\n                return EditState.extractIconAndColor(socket, obj)\n                    .then(result => {\n                        if (result && result.icon) {\n                            // we must get from /icons/113_hmip-psm_thumb.png => /adapter/hm-rpc/icons/113_hmip-psm_thumb.png\n                            // or                                                  /hm-rpc.admin/icons/113_hmip-psm_thumb.png\n                            settings.ownIcon = `/adapter/${obj._id.split('.')[0]}${result.icon}`;\n                        }\n                        if (result && result.color) {\n                            settings.ownColor = result.color;\n                        }\n                        return {settings, exists};\n                    });\n            });\n    }\n\n    static getName(obj, lang) {\n        let name = obj.common.name;\n        if (typeof name === 'object') {\n            name = name[lang] || name.en;\n        }\n        return name || obj._id;\n    }\n\n    translate(word, lang) {\n        lang = lang || I18n.lang;\n        if (I18n.translations[lang]) {\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\n            if (w) {\n                word = w;\n            }\n        }\n        return word;\n    }\n\n    getExampleColor() {\n        let color = this.state.ownColor || '';\n        if (this.state.settings.states) {\n            let stateVal = !!(this.state.state && this.state.state.val);\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\n                stateVal = !stateVal;\n            } else\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\n                stateVal = this.state.simulateState;\n            }\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\n            const item = this.state.settings.states.find(item => item.val === stateVal);\n\n            if (item && item.defColor) {\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\n                color = ColorPicker.getColor(item.color);\n            }\n        }\n        color = color || (this.state.settings.color && ColorPicker.getColor(this.state.settings.color)) || '';\n\n        return color;\n    }\n\n    getExampleIcon() {\n        const defIcon = this.state.settings.icon || this.state.ownIcon;\n        let icon = defIcon || '';\n        if (this.state.settings.states) {\n            let stateVal = !!(this.state.state && this.state.state.val);\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\n                stateVal = !stateVal;\n            } else\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\n                stateVal = this.state.simulateState;\n            }\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\n            const item = this.state.settings.states.find(item => item.val === stateVal);\n\n            if (item && item.defIcon) {\n                icon = (stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse) || this.state.ownIcon || '';\n            } else if (item && item.icon) {\n                icon = item.icon;\n            }\n        }\n\n        return icon;\n    }\n\n    getExampleText() {\n        let text = '';\n        let stateVal = this.state.state ? this.state.state.val : (this.state.settings.type === 'boolean' ? false : null);\n        if (this.state.settings.states) {\n            if (this.state.settings.type === 'boolean' && this.state.simulateState) {\n                stateVal = !stateVal;\n            } else\n            if (this.state.settings.type !== 'boolean' && this.state.simulateState !== null) {\n                stateVal = this.state.simulateState;\n            }\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\n            const item = this.state.settings.states.find(item => item.val === stateVal);\n\n            if (item && item.disabled) {\n                return DISABLED_TEXT;\n            }\n\n            if (stateVal === 'true' && item) {\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\n            } else if (stateVal === 'false' && item) {\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\n            } else {\n                if (item && item.defText) {\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\n                } else if (item && item.text) {\n                    text = item.text;\n                } else {\n                    text = stateVal;\n                }\n            }\n        } else {\n            if (stateVal === null || stateVal === undefined) {\n                text = 'null';\n            } else if (typeof stateVal === 'number') {\n                text = stateVal.toString();\n                if (this.isFloatComma) {\n                    text = text.replace('.', ',');\n                }\n            } else {\n                text = stateVal.toString();\n            }\n        }\n\n        return text || '';\n    }\n\n    buildExample() {\n        let eventTemplate = '';\n        let valWithUnit = '';\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\n\n        let valText = this.getExampleText();\n\n        if (valText === DISABLED_TEXT) {\n            return I18n.t('DISABLED');\n        }\n\n        if (this.state.settings.type === 'boolean') {\n            let stateVal = !!(this.state.state && this.state.state.val);\n            if (this.state.simulateState) {\n                stateVal = !stateVal;\n            }\n\n            if (!this.state.settings.eventDefault && !this.state.settings.event && stateVal && valText) {\n                eventTemplate = valText;\n            } else if (!this.state.settings.eventDefault && !this.state.settings.event && !stateVal && valText) {\n                eventTemplate = valText;\n            } else {\n                if (this.state.settings.event === DEFAULT_TEMPLATE || this.state.settings.eventDefault) {\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\n                } else {\n                    eventTemplate = this.state.settings.event;\n                }\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\n            }\n        } else {\n            eventTemplate = this.state.settings.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.settings.event || this.textDeviceChangedStatus;\n\n            valWithUnit = valText;\n            if (valWithUnit !== '' && this.state.settings.unit) {\n                valWithUnit += this.state.settings.unit;\n            }\n            if (this.state.settings.states) {\n                if (!this.state.settings.eventDefault && !this.state.settings.event) {\n                    eventTemplate = valWithUnit;\n                    valWithUnit = '';\n                }\n            }\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.settings.unit || '');\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.settings.name || this.props.id);\n        }\n\n        if (eventTemplate.includes('%d')) {\n            let text;\n            text = this.duration2text(5000);\n            eventTemplate = eventTemplate.replace(/%d/g, text);\n        }\n\n        if (eventTemplate.includes('%s')) {\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\n            valWithUnit = '';\n        }\n\n        if (eventTemplate.includes('%t')) {\n            eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\n        }\n\n        if (eventTemplate.includes('%r')) {\n            eventTemplate = eventTemplate.replace(/%r/g, this.state.state ? moment(new Date(this.state.state.ts)).fromNow() : moment(new Date()).fromNow());\n        }\n\n        if (eventTemplate.includes('%o')) {\n            eventTemplate = eventTemplate.replace(/%o/g, '_');\n        }\n\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\n    }\n\n    static getSettings(settings) {\n        const curSettings = {\n            enabled: true,\n            event: settings.eventDefault ? DEFAULT_TEMPLATE : settings.event,\n            changesOnly: !!settings.changesOnly,\n            defaultMessengers: !!settings.defaultMessengers\n        };\n\n        if (settings.color && ColorPicker.getColor(settings.color)) {\n            curSettings.color = ColorPicker.getColor(settings.color);\n        }\n        if (settings.icon) {\n            curSettings.icon = settings.icon;\n        }\n        if (settings.alarmsOnly) {\n            curSettings.alarmsOnly = true;\n        }\n        if (settings.messagesInAlarmsOnly) {\n            curSettings.messagesInAlarmsOnly = true;\n        }\n        if (settings.pushover && settings.pushover.length && !settings.defaultMessengers) {\n            curSettings.pushover = settings.pushover;\n        }\n        if (settings.telegram && settings.telegram.length && !settings.defaultMessengers) {\n            curSettings.telegram = settings.telegram;\n        }\n        if (settings.whatsAppCMB && settings.whatsAppCMB.length && !settings.defaultMessengers) {\n            curSettings.whatsAppCMB = settings.whatsAppCMB;\n        }\n\n        settings.states && settings.states.forEach(item => {\n            curSettings.states = curSettings.states || [];\n            const it = {val: item.val};\n\n            if (item.disabled)  {\n                it.disabled = true;\n                curSettings.states.push(it);\n                return;\n            }\n\n            if (item.val === 'true' || item.val === 'false') {\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\n                }\n                if (item.defIcon || item.icon) {\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\n                }\n            } else {\n                it.text  = item.text || '';\n                if (item.color && ColorPicker.getColor(item.color))  {\n                    it.color = ColorPicker.getColor(item.color);\n                }\n                if (item.icon)  {\n                    it.icon = item.icon;\n                }\n            }\n\n            curSettings.states.push(it);\n        });\n\n        return curSettings;\n    }\n\n    duration2text(ms, withSpaces) {\n        if (ms < 1000) {\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\n        } else if (ms < 90000) {\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\n        } else if (ms < 3600000) {\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\n        } else {\n            const hours = Math.floor(ms / 3600000);\n            const minutes = Math.floor(ms / 60000) % 60;\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\n        }\n    }\n\n    onToggle(id) {\n        let expanded;\n        if (id === false) {\n            expanded = [];\n        } else if (id === true) {\n            expanded = ['state_settings', 'state_messengers'];\n            this.state.settings.states && this.state.settings.states.forEach(state => expanded.push('state_' + state.val));\n        } else {\n            expanded = [...this.state.expanded];\n            const pos = expanded.indexOf(id);\n            if (pos !== -1)  {\n                expanded.splice(pos, 1);\n            } else {\n                expanded.push(id);\n                expanded.sort();\n            }\n        }\n\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\n\n        this.setState({expanded});\n    }\n\n    renderState(i, narrowWidth) {\n        const state = this.state.settings.states[i];\n        const isBoolean = state.val === 'true' || state.val === 'false';\n\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\n\n        return <Accordion\n            key={state.val}\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\n            onChange={() => this.onToggle('state_' + state.val)}\n        >\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\n                    state.original === 'true' || state.original === 'false' ?\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\n                        :\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\n                }</span></Typography>\n                <div className={this.props.classes.flex}/>\n                <FormControlLabel\n                    disabled={this.props.reading}\n                    control={<Checkbox\n                        checked={!!state.disabled}\n                        onChange={e => {\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\n                            states[i].disabled = e.target.checked;\n                            this.setSettings('states', states);\n                        }} />\n                    }\n                    label={I18n.t('Disable logging')}\n                />\n            </AccordionSummary>\n            {!state.disabled && <AccordionDetails>\n                <Paper className={this.props.classes.paper}>\n                    {isBoolean ? <FormControlLabel\n                        disabled={this.props.reading}\n                        control={<Checkbox\n                            checked={state.defText}\n                            onChange={e => {\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\n                                states[i].defText = e.target.checked;\n                                this.setSettings('states', states);\n                            }} />\n                        }\n                        label={I18n.t('Use default text')}\n                    /> : null}\n                    {!isBoolean || !state.defText ? <TextField\n                        disabled={this.props.reading}\n                        margin=\"dense\"\n                        label={I18n.t('Text')}\n                        value={state.text}\n                        classes={{root: this.props.classes.textDense}}\n                        onChange={e => {\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\n                            states[i].text = e.target.value;\n                            this.setSettings('states', states);\n                        }}\n                        type=\"text\"\n                        className={this.props.classes.textField}\n                    /> : null}\n                    {narrowWidth ? <br/> : null}\n                    {isBoolean ? <FormControlLabel\n                        disabled={this.props.reading}\n                        control={<Checkbox\n                            checked={state.defColor}\n                            onChange={e => {\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\n                                states[i].defColor = e.target.checked;\n                                this.setSettings('states', states);\n                            }} />\n                        }\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\n                    /> : null}\n                    {!isBoolean || !state.defColor ?\n                        <ColorPicker\n                            disabled={this.props.reading}\n                            openAbove={true}\n                            color={state.color}\n                            style={{width: 250, display: 'inline-block'}}\n                            name={I18n.t('Color')}\n                            onChange={color => {\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\n                                states[i].color = color;\n                                this.setSettings('states', states);\n                            }}\n                        /> : null}\n                    {narrowWidth ? <br/> : null}\n                    {isBoolean ? <FormControlLabel\n                        disabled={this.props.reading}\n                        control={<Checkbox\n                            checked={state.defIcon}\n                            onChange={e => {\n                                const states = JSON.parse(JSON.stringify(this.state.settings.states));\n                                states[i].defIcon = e.target.checked;\n                                this.setSettings('states', states);\n                            }} />\n                        }\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\n                    /> : null}\n                    {!isBoolean || !state.defIcon ? <IconPicker\n                        disabled={this.props.reading}\n                        imagePrefix={this.imagePrefix}\n                        key={this.props.id + this.state.settings.type + state.original}\n                        color={color}\n                        label={I18n.t('Icon')}\n                        socket={this.props.socket}\n                        value={state.icon}\n                        onChange={icon => {\n                            const states = JSON.parse(JSON.stringify(this.state.settings.states));\n                            states[i].icon = icon;\n                            this.setSettings('states', states);\n                        }}\n                    /> : null}\n                    {narrowWidth ? <br/> : null}\n                </Paper>\n            </AccordionDetails>}\n        </Accordion>;\n    }\n\n    setSettings(attr, value) {\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\n        settings[attr] = value;\n        this.setState({settings}, () =>\n            this.props.onChange(this.props.id, EditState.getSettings(settings)));\n    }\n\n    renderStateSettings(narrowWidth) {\n        const color = ColorPicker.getColor(this.state.settings.color);\n        const text = this.state.settings.eventDefault ? (this.state.settings.type === 'boolean' ? this.props.native.defaultBooleanText : this.props.native.defaultNonBooleanText) : this.state.settings.event || I18n.t('Use the specific state texts');\n\n        return <Accordion\n            expanded={this.state.expanded.includes('state_settings')}\n            onChange={() => this.onToggle('state_settings')}\n        >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{root: this.props.classes.width100minus32}}>\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}\n                    {!narrowWidth ? <span style={{color: color || undefined, fontStyle: 'italic'}}>{' - ' + text}</span> : null}\n                </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <Paper className={this.props.classes.paper}>\n                    <FormControlLabel\n                        disabled={this.props.reading}\n                        control={<Checkbox\n                            checked={this.state.settings.eventDefault}\n                            onChange={e => this.setSettings('eventDefault', e.target.checked)} />\n                        }\n                        label={<span>\n                            <span>{I18n.t('Default text')}</span>\n                        </span>}\n                    />\n                    {narrowWidth ? <br/> : null}\n                    {!this.state.settings.eventDefault ? <TextField\n                        disabled={this.props.reading}\n                        margin=\"dense\"\n                        label={I18n.t('Event text')}\n                        value={this.state.settings.event}\n                        onChange={e => this.setSettings('event', e.target.value)}\n                        type=\"text\"\n                        className={this.props.classes.textField}\n                        helperText={ this.state.settings.type === 'number' ?\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\n                            :\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                        fullWidth\n                    /> : null}\n                    <br/>\n                    <ColorPicker\n                        disabled={this.props.reading}\n                        color={this.state.settings.color}\n                        style={{width: 250, display: 'inline-block'}}\n                        name={I18n.t('Event color')}\n                        openAbove={true}\n                        onChange={color => this.setSettings('color', color)}\n                    />\n                    <br/>\n                    <IconPicker\n                        disabled={this.props.reading}\n                        imagePrefix={this.imagePrefix}\n                        key={this.props.id + this.state.settings.type}\n                        color={this.state.settings.color}\n                        socket={this.props.socket}\n                        label={I18n.t('Event icon')}\n                        value={this.state.settings.icon}\n                        onChange={icon => this.setSettings('icon', icon)}\n                    />\n                </Paper>\n            </AccordionDetails>\n        </Accordion>;\n    }\n\n    renderMessengers(narrowWidth) {\n        const count = (this.state.settings.telegram ? this.state.settings.telegram.length : 0) +\n            (this.state.settings.whatsAppCMB ? this.state.settings.whatsAppCMB.length : 0) +\n            (this.state.settings.pushover ? this.state.settings.pushover.length : 0);\n\n        const messengers = [\n            this.state.settings.telegram    && this.state.settings.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.settings.telegram.join(', ')    + ')'}</span>] : null,\n            this.state.settings.whatsAppCMB && this.state.settings.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.settings.whatsAppCMB.join(', ') + ')'}</span>] : null,\n            this.state.settings.pushover    && this.state.settings.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.settings.pushover.join(', ')    + ')'}</span>] : null,\n        ];\n\n        return <Accordion\n            expanded={this.state.expanded.includes('state_messengers')}\n            onChange={() => this.onToggle('state_messengers')}\n        >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\n                    {messengers}\n                </Typography>\n            </AccordionSummary>\n            <AccordionDetails style={{display: 'block'}}>\n                <FormControlLabel\n                    disabled={this.props.reading}\n                    control={<Checkbox\n                        disabled={!!this.state.settings.alarmsOnly}\n                        checked={!!(this.state.settings.messagesInAlarmsOnly || this.state.settings.alarmsOnly)}\n                        onChange={e => this.setSettings('messagesInAlarmsOnly', e.target.checked)} />\n                    }\n                    label={I18n.t('Only in alarm state')}\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    disabled={this.props.reading}\n                    control={<Checkbox\n                        checked={this.state.settings.defaultMessengers}\n                        onChange={e => this.setSettings('defaultMessengers', e.target.checked)} />\n                    }\n                    label={I18n.t('Default messengers')}\n                />\n                <br/>\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\n                    label={ I18n.t('Telegram') }\n                    adapterName={'telegram'}\n                    className={ this.props.classes.inputMessengers }\n                    onChange={value => this.setSettings('telegram', value)}\n                    selected={ this.state.settings.telegram }\n                    socket={this.props.socket}\n                />}\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\n                    label={ I18n.t('WhatsApp-CMB') }\n                    adapterName={'whatsapp-cmb'}\n                    className={ this.props.classes.inputMessengers }\n                    onChange={value => this.setSettings('whatsAppCMB', value)}\n                    selected={ this.state.settings.whatsAppCMB}\n                    socket={this.props.socket}\n                />}\n                {narrowWidth && !this.state.settings.defaultMessengers && <br/>}\n                {this.state.settings.defaultMessengers ? null : <MessengerSelect\n                    label={ I18n.t('Pushover') }\n                    adapterName={'pushover'}\n                    className={ this.props.classes.inputMessengers }\n                    onChange={value => this.setSettings('pushover', value)}\n                    selected={ this.state.settings.pushover}\n                    socket={this.props.socket}\n                />}\n            </AccordionDetails>\n        </Accordion>;\n    }\n\n    render() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\n        let val = '';\n        if (this.state.state && this.state.state.val) {\n            if (this.state.state.val === null || this.state.state.val === undefined) {\n                val = ' - --';\n            } else {\n                val = ' - ' + this.state.state.val.toString();\n            }\n        }\n\n        const exampleColor = this.getExampleColor() || undefined;\n\n        return <React.Fragment>\n\n            {this.state.settings.type ?\n                <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\n                    <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\n                    <span className={this.props.classes.exampleText} style={{color: exampleColor}}>\n                        {this.props.native.icons ? <Image\n                            src={this.getExampleIcon()}\n                            className={this.props.classes.exampleIcon}\n                            color={exampleColor}\n                            imagePrefix={this.imagePrefix}\n                        />: null}\n                        {this.buildExample()}\n                    </span>\n                    {this.state.settings.type === 'boolean' ?\n                        <>\n                            <br/>\n                            <FormControlLabel\n                                disabled={this.props.reading}\n                                control={<Switch\n                                    checked={!!this.state.simulateState}\n                                    onChange={e => this.setState({simulateState: e.target.checked})}/>\n                                }\n                                label={I18n.t('Toggle state to simulate')}\n                            />\n                        </>\n                        : null\n                    }\n                    {this.state.settings.type === 'number' && this.state.settings.states ?\n                        <>\n                            <br/>\n                            <FormControl className={this.props.classes.formControl} disabled={this.props.reading}>\n                                <InputLabel>{I18n.t('Simulate value')}</InputLabel>\n                                <Select\n                                    value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\n                                    onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\n                                >\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\n                                    {this.state.settings.states.map(item =>\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\n                                </Select>\n                            </FormControl>\n                        </>\n                        : null\n                    }\n                </Paper>\n                : null }\n\n            {this.state.settings.type ?\n                <div className={this.props.classes.width100}>\n                    <FormControlLabel\n                        disabled={this.props.reading}\n                        control={<Checkbox\n                            checked={this.state.settings.changesOnly}\n                            onChange={e => this.setSettings('changesOnly', e.target.checked)} />\n                        }\n                        label={I18n.t('Only changes')}\n                    />\n                    {narrowWidth && <br/>}\n                    <FormControlLabel\n                        disabled={this.props.reading}\n                        control={<Checkbox\n                            checked={!!this.state.settings.alarmsOnly}\n                            onChange={e => this.setSettings('alarmsOnly', e.target.checked)} />\n                        }\n                        label={I18n.t('Only in alarm state')}\n                    />\n                    <IconButton disabled={this.state.expanded.length === (this.state.settings.states ? this.state.settings.states.length : 0 ) + 2} className={this.props.classes.iconOpenAll} onClick={() => this.onToggle(true)}><ExpandMoreIcon/></IconButton>\n                    <IconButton disabled={!this.state.expanded.length} className={this.props.classes.iconCloseAll} onClick={() => this.onToggle(false)}> <ExpandLessIcon/></IconButton>\n                </div> : null}\n            {this.renderStateSettings()}\n            {this.state.settings.states ? this.state.settings.states.sort((a, b) => a.val > b.val ? 1 : (a.val < b.val ? -1 : 0)).map((item, i) => this.renderState(i, narrowWidth)) : null }\n            {this.renderMessengers(narrowWidth)}\n        </React.Fragment>;\n    }\n}\n\nEditState.propTypes = {\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    themeName: PropTypes.string,\n    themeType: PropTypes.string,\n    socket: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    id: PropTypes.string,\n    reading: PropTypes.bool,\n    settings: PropTypes.object,\n    imagePrefix: PropTypes.string,\n};\n\nexport default withWidth()(withStyles(styles)(EditState));","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport 'moment/locale/fr';\nimport 'moment/locale/de';\nimport 'moment/locale/en-gb';\nimport 'moment/locale/ru';\nimport 'moment/locale/it';\nimport 'moment/locale/es';\nimport 'moment/locale/pt';\nimport 'moment/locale/zh-cn';\nimport 'moment/locale/pl';\nimport 'moment/locale/pt';\nimport 'moment/locale/nl';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\nimport EditState from '../Components/EditState';\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst DEFAULT_TEMPLATE = 'default';\n\nconst styles = theme => ({\n    textFieldWithButton: {\n        width: 'calc(100% - 70px)'\n    }\n});\n\nclass AddIdDialog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.propsId = this.props.id !== 'true' ? this.props.id : '';\n\n        this.state = {\n            ids: [],\n            currentId: this.propsId || '',\n            showSelectId: !this.propsId,\n            exists: {},\n            settings: {},\n            confirmExit: false,\n            confirmRemove: false,\n            unknownIds: {},\n        };\n\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\n\n        this.originalSettings = {};\n        setTimeout(() => this.updateIds(this.propsId, true), 100);\n    }\n\n    writeSettings(ids, cb) {\n        if (!ids || !ids.length) {\n            cb && cb();\n        } else {\n            const id = ids.shift();\n            this.props.socket.getObject(id)\n                .then(obj => {\n                    if (obj && obj.common) {\n                        obj.common.custom = obj.common.custom || {};\n                        const newSettings = EditState.getSettings(this.state.settings[id] || {enabled: true, event: DEFAULT_TEMPLATE, changesOnly: true, defaultMessengers: true});\n                        // if changed\n                        if (JSON.stringify(newSettings) !== JSON.stringify(obj.common.custom[this.namespace])) {\n                            obj.common.custom[this.namespace] = newSettings;\n                            return this.props.socket.setObject(obj._id, obj)\n                                .then(() => setTimeout(() => this.writeSettings(ids, cb), 0));\n                        }\n                    }\n                    setTimeout(() => this.writeSettings(ids, cb), 0);\n                });\n        }\n    }\n\n    removeSettings(cb) {\n        this.props.socket.getObject(this.state.ids[0])\n            .then(obj => {\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\n                    obj.common.custom[this.namespace] = null;\n                    this.props.socket.setObject(this.state.ids[0], obj)\n                        .then(() => cb && cb());\n                } else {\n                    cb && cb();\n                }\n            });\n    }\n\n    onClose() {\n        if (this.state.ids.find(id => JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]))) {\n            this.setState({confirmExit: true});\n        } else {\n            this.props.onClose();\n        }\n    }\n\n    renderConfirmExit() {\n        if (!this.state.confirmExit) {\n            return null;\n        } else {\n            return <ConfirmDialog\n                title={ I18n.t('Changes not saved.') }\n                text={ I18n.t('All changes will be lost. Exit?') }\n                ok={ I18n.t('Yes') }\n                cancel={ I18n.t('No') }\n                onClose={isYes => {\n                    this.setState({ confirmExit: false} );\n                    isYes && this.props.onClose();\n                }}\n            />;\n        }\n    }\n\n    renderConfirmRemove() {\n        if (!this.state.confirmRemove) {\n            return null;\n        } else {\n            return <ConfirmDialog\n                title={ I18n.t('Settings will be erased.') }\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\n                ok={ I18n.t('Remove from list') }\n                cancel={ I18n.t('Cancel') }\n                onClose={isYes => {\n                    this.setState({ confirmRemove: false} );\n                    if (isYes) {\n                        this.removeSettings();\n                        this.props.onClose();\n                    }\n                }}\n            />;\n        }\n    }\n\n    renderSelectId() {\n        if (!this.state.showSelectId) {\n            return null;\n        }\n\n        return <SelectIDDialog\n            statesOnly={true}\n            imagePrefix={this.props.imagePrefix}\n            showExpertButton={true}\n            multiSelect={true}\n            notEditable={true}\n            dialogName={I18n.t('Define state ID for event list')}\n            socket={this.props.socket}\n            selected={this.state.ids}\n            themeName={this.props.themeName}\n            themeType={this.props.themeType}\n            onOk={ids => this.updateIds(ids, true)}\n            onClose={() => this.setState({showSelectId: false})}\n        />;\n    }\n\n    onChange(id, newSettings) {\n        const settings = JSON.parse(JSON.stringify(this.state.settings));\n        settings[id] = JSON.parse(JSON.stringify(newSettings));\n        this.setState({settings});\n    }\n\n    updateIds(ids, noWait) {\n        const newState = {\n            ids: ids && typeof ids === 'object' ? ids.filter(id => id && id !== 'true') : (ids || '').split(',').map(id => id.trim()),\n        };\n\n        if (!this.state.currentId || !newState.ids.includes(this.state.currentId)) {\n            newState.currentId = newState.ids[0] || '';\n        }\n\n        this.setState(newState, () => {\n            if (this.state.ids.find(id => !this.state.settings[id])) {\n                this.readTypeTimer && clearTimeout(this.readTypeTimer);\n                this.setState({reading: true});\n\n                this.readTypeTimer = setTimeout(async () => {\n                    this.readTypeTimer = null;\n\n                    const newState = {\n                        settings: JSON.parse(JSON.stringify(this.state.settings)),\n                        exists:   JSON.parse(JSON.stringify(this.state.exists)),\n                        reading:  false,\n                    }\n\n                    // read all settings of all IDs\n                    for (let i = 0; i < this.state.ids.length; i++) {\n                        const id = this.state.ids[i];\n                        if (!newState.settings[id]) {\n                            try {\n                                const result = await EditState.readSettingsFromServer(\n                                    this.props.socket,\n                                    this.props.native.language || I18n.getLanguage(),\n                                    this.props.native, this.namespace,\n                                    id\n                                );\n\n                                this.originalSettings[id] = JSON.parse(JSON.stringify(result.settings));\n                                newState.settings[id]     = result.settings;\n                                newState.exists[id]       = result.exists;\n                            } catch (e) {\n                                console.error(e);\n                                this.originalSettings[id] = {type: '', name: '', unit: ''};\n                                newState.settings[id]     = {type: '', name: '', unit: ''};\n                                newState.exists[id]       = false;\n                            }\n                        }\n                    }\n\n                    this.setState(newState);\n                }, noWait ? 0 : 500);\n            }\n        });\n    }\n\n    render() {\n        const changed = this.state.ids.find(id =>\n                !this.state.exists[id] || JSON.stringify(this.originalSettings[id]) !== JSON.stringify(this.state.settings[id]));\n\n        const exists = this.state.ids.find(id => this.state.exists[id]);\n\n        let tabs = null;\n        if (this.state.ids.length > 1) {\n            tabs =\n                <Tabs\n                    value={this.state.ids.indexOf(this.state.currentId)}\n                    onChange={(event, newValue) => this.setState({currentId: this.state.ids[newValue]})}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    {this.state.ids.map(id => <Tab label={id} />)}\n                </Tabs>\n        }\n\n        return <Dialog\n            open={true}\n            onClose={() => this.onClose()}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth={true}\n            maxWidth=\"lg\"\n        >\n            <DialogTitle id=\"form-dialog-title\">{this.propsId ? I18n.t('Edit event') : I18n.t('Add event')}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\n                </DialogContentText>\n                <div className={this.props.classes.field}>\n                    <TextField\n                        autoFocus\n                        disabled={!!this.propsId}\n                        margin=\"dense\"\n                        label={I18n.t('State ID')}\n                        error={!!(this.state.ids && this.state.unknownId)}\n                        className={this.props.classes.textFieldWithButton}\n                        value={this.state.ids.join(', ')}\n                        onChange={e => this.updateIds(e.target.value)}\n                        type=\"text\"\n                        fullWidth\n                    />\n                    {!this.propsId ? <Button\n                        style={{marginTop: 8}}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => this.setState({showSelectId: true})}\n                    >...</Button> : null}\n                </div>\n                {this.state.reading ? <LinearProgress/> : <div style={{height: 4, width: '100%'}}/>}\n                {tabs}\n                {this.state.settings[this.state.currentId] ? <EditState\n                    key={this.state.currentId}\n                    id={this.state.currentId}\n                    onChange={(id, settings) => this.onChange(id, settings)}\n                    instance={this.props.instance}\n                    reading={this.state.reading}\n                    adapterName={this.props.adapterName}\n                    themeName={this.props.themeName}\n                    themeType={this.props.themeType}\n                    socket={this.props.socket}\n                    imagePrefix={this.props.imagePrefix}\n                    native={this.props.native}\n                    settings={this.state.settings[this.state.currentId]}\n                /> : null}\n            </DialogContent>\n            <DialogActions>\n                {this.state.exists[this.state.currentId] && this.state.ids.length === 1 ? <Button\n                    onClick={() => this.setState({confirmRemove: true})}\n                    variant=\"contained\"\n                    startIcon={<RemoveIcon />}\n                >{I18n.t('Remove')}</Button> : null}\n                <Button\n                    disabled={!this.state.ids.length || !changed}\n                    variant=\"contained\"\n                    onClick={() =>\n                        this.writeSettings([...this.state.ids], () =>\n                            this.props.onClose())\n                    }\n                    startIcon={<SaveIcon />}\n                    color=\"primary\"\n                >{exists ? I18n.t('Update') : I18n.t('Add')}</Button>\n                <Button\n                    onClick={() => this.props.onClose()}\n                    startIcon={<CancelIcon />}\n                    variant=\"contained\"\n                >\n                    {!changed ? I18n.t('Close') : I18n.t('Cancel')}\n                </Button>\n            </DialogActions>\n            {this.renderConfirmExit()}\n            {this.renderConfirmRemove()}\n            {this.renderSelectId()}\n        </Dialog>;\n    }\n}\n\nAddIdDialog.propTypes = {\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    themeName: PropTypes.string,\n    themeType: PropTypes.string,\n    socket: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    id: PropTypes.string,\n    imagePrefix: PropTypes.string,\n};\n\nexport default withStyles(styles)(AddIdDialog);","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Close';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nconst styles = theme => ({\n    textField: {\n\n    },\n    icon: {\n        width: 32,\n        maxHeight: 32\n    },\n    emptyIcon: {\n        marginRight: theme.spacing(1)\n    },\n    listItem: {\n        padding: 3,\n        '&:hover': {\n            background: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.light,\n        }\n    },\n    listPrimary: {\n\n    },\n    listSecondary: {\n        opacity: 0.7,\n        fontStyle: 'italic',\n        fontSize: 'smaller',\n    },\n    newState: {\n        color: theme.palette.primary.main,\n        fontSize: 'greater',\n        fontWeight: 'bold'\n    }\n});\n\nfunction getSelectIdIcon(obj, prefix) {\n    prefix = prefix || '.';//http://localhost:8081';\n    let src = '';\n    let id = obj._id.replace('system.adapter.');\n    let adapter = id.split('.')[0];\n\n    const aIcon = obj && obj.common && obj.common.icon;\n    if (aIcon) {\n        // if not BASE64\n        if (!aIcon.startsWith('data:image/')) {\n            if (aIcon.includes('.')) {\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\n            } else {\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\n            }\n        } else {\n            src = aIcon;\n        }\n    }\n\n    return src || null;\n}\n\nclass SelectStateDialog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selected: '',\n            ids: [],\n            reading: true,\n            filter: '',\n        };\n\n        this.promises = {};\n\n        this.readIds()\n            .then(ids => this.setState({ids}));\n    }\n\n    readIds() {\n        return new Promise((resolve, reject) => {\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\n                if (!err) {\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\n                    const ids = [];\n                    if (res && res.rows) {\n                        for (let i = 0; i < res.rows.length; i++) {\n                            const obj = res.rows[i].value;\n                            if (obj[namespace]) {\n                                ids.push(res.rows[i].id);\n                            }\n                        }\n                    }\n\n                    resolve(ids);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    getObject(id) {\n        return this.props.socket.getObject(id)\n            .then(obj =>\n                this.setState({[obj._id]: obj}));\n    }\n\n    renderListItem(id, filter) {\n        const obj = this.state[id];\n        if (obj) {\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\n                return null;\n            }\n\n            const icon = getSelectIdIcon(obj, this.props.imagePrefix);\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\n                <ListItemIcon>\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\n                </ListItemIcon>\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\n            </ListItem>;\n        } else {\n            this.promises[id] = this.promises[id] || this.getObject(id);\n            if (filter && !id.toLowerCase().includes(filter)) {\n                return null;\n            }\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id} className={this.props.classes.listItem}>\n                <ListItemIcon>\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\n                </ListItemIcon>\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\n            </ListItem>;\n        }\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n        return <Dialog\n            open={true}\n            fullWidth={true}\n            maxWidth=\"md\"\n            onClose={() => this.props.onClose()}>\n            <DialogTitle>{I18n.t('Select state')}<TextField\n                label={I18n.t('Filter')}\n                InputLabelProps={ {shrink: true} }\n                InputProps={{\n                    endAdornment: this.state.searchedValue ?\n                        <IconButton\n                            onClick={() => this.setState({ searchedValue: '' })}>\n                            <ClearIcon />\n                        </IconButton>\n                        : undefined,\n                }}\n                autoFocus\n                value={this.state.filter}\n                onChange={e => this.setState({filter: e.target.value})}\n                fullWidth\n                size=\"small\"\n            /></DialogTitle>\n            <DialogContent className={this.props.classes.dialogContent}>\n                <List dense={true}>\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\n                        <Button variant=\"contained\"><AddIcon />{I18n.t('Add new states')}</Button>\n                    </ListItem>}\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    onClick={() => this.props.onClose()}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<CancelIcon />}\n                >\n                    {I18n.t('Cancel')}\n                </Button>\n            </DialogActions>\n        </Dialog>;\n    }\n}\n\nSelectStateDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    socket: PropTypes.object.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    instance: PropTypes.number.isRequired,\n    imagePrefix: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(SelectStateDialog);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten } from '@material-ui/core/styles';\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport LinearProgress  from '@material-ui/core/LinearProgress';\nimport CircularProgress  from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\n\nimport {MdRefresh as IconReload} from 'react-icons/md';\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\nimport {MdEdit as IconEdit} from 'react-icons/md';\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconEvent from '@material-ui/icons/Event';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\nimport Router from '@iobroker/adapter-react/Components/Router';\nimport Image from '@iobroker/adapter-react/Components/Image';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nimport AddEventDialog from '../Dialogs/AddEvent';\nimport AddIdDialog from '../Dialogs/AddId';\nimport SelectStateDialog from '../Dialogs/SelectState';\n\n// Copyright Apache 2.0 https://raw.githubusercontent.com/material-icons/material-icons/master/svg/filter_alt/baseline.svg\n// https://github.com/material-icons/material-icons/blob/master/LICENSE\nclass IconFilter extends React.Component {\n    render() {\n        return <svg viewBox=\"0 0 24 24\" width={24} height={24} xmlns=\"http://www.w3.org/2000/svg\" className={ this.props.className }>\n            <path fill=\"currentColor\" stroke=\"currentColor\" d=\"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39A.998.998 0 0 0 18.95 4H5.04c-.83 0-1.3.95-.79 1.61z\"/>\n        </svg>;\n    }\n}\n\nfunction serialPromises(promises, _resolve, _results) {\n    if (!_resolve) {\n        return new Promise(resolve => serialPromises(promises, resolve, []));\n    } else if (!promises || !promises.length) {\n        _resolve(_results);\n    } else {\n        const prom = promises.shift();\n        prom.then(result => {\n            _results.push(result);\n            setTimeout(() => serialPromises(promises, _resolve, _results), 0);\n        });\n    }\n}\n\nconst COLOR_RUNNING_DURATION = '#59be78';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    instanceNotOnline: {\n        color: '#883333',\n        marginLeft: theme.spacing(1)\n    },\n    toolbarRoot: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    toolbarHighlight: theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    toolbarTitle: {\n        flex: '1 1 100%',\n    },\n    toolbarButton: {\n        marginRight: theme.spacing(1),\n        //height: 37.25,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    tableContainer: {\n        height: '100%',\n        overflow: 'auto'\n    },\n    table:{\n        width: 'auto',\n    },\n    tdIcons: {\n        textAlign: 'right',\n        marginRight: theme.spacing(1),\n        marginTop: 2,\n    },\n    tdTs: {\n        //width: 100\n        paddingRight: theme.spacing(1),\n    },\n    tdEvent: {\n        //width: `calc(100% - 250px - 52px)`,\n        paddingRight: theme.spacing(1),\n    },\n    tdVal: {\n        //width: 150,\n    },\n    tdDuration: {\n        //paddingRight: theme.spacing(1),\n    },\n    tdDurationRunning: {\n        animationName: 'running',\n        animationDuration: '2s',\n        animationIterationCount: 'infinite'\n    },\n    tdID: {\n        opacity: 0.3\n    },\n    tdEdit: {\n\n    },\n    editButton: {\n        height: 16,\n        opacity: 0.3,\n        '&:hover': {\n            opacity: 1,\n        }\n    },\n    toolbarButtonText: {\n        whiteSpace: 'nowrap',\n        marginLeft: 16,\n        marginRight: 16,\n        lineHeight: 24,\n        display: 'inline-block'\n    },\n    tabMargins: {\n        paddingLeft: theme.spacing(2),\n    },\n    buttonAddState: {\n        minWidth: '120px !important',\n    },\n    icon: {\n        width: 28,\n        height: 28,\n        verticalAlign: 'middle',\n    },\n    filterControl: {\n        minWidth: 200,\n        marginRight: theme.spacing(1),\n        marginLeft: 3,\n    },\n    filterDiv: {\n        position: 'relative',\n        display: 'inline-block',\n        cursor: 'pointer',\n    },\n    filterIcon: {\n\n    },\n    filterClearIcon: {\n        color: '#FF0000',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: 24,\n        height: 24,\n        opacity: 0.5,\n    },\n    filterCounts: {\n        fontSize: 10,\n        opacity: 0.7,\n        float: 'right',\n        marginTop: 16,\n    },\n    filterSecondary: {\n        opacity: 0.7,\n        fontSize: 'smaller',\n    }\n});\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\n\n        let filterStates   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`) || null;\n        try {\n            filterStates = filterStates ? JSON.parse(filterStates) : [];\n        } catch (e) {\n            filterStates = [];\n        }\n\n        if (!editAvailable) {\n            editEnabled = false;\n        } else if (!this.props.showEditButton || editEnabled === null) {\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\n        } else if (editEnabled === 'true') {\n            editEnabled = true;\n        } else if (editEnabled === 'false') {\n            editEnabled = false;\n        }\n\n        const location = Router.getLocation();\n\n        this.state = {\n            toast: '',\n            isInstanceAlive: false,\n            eventList: false,\n            eventRawList: false,\n            order: 'desc',\n            orderBy: 'ts',\n            filterStates,\n            selected: [],\n            showDeleteConfirm: false,\n            showSelectState: location.dialog === 'selectState',\n            showAddIdDialog: location.dialog === 'addId' ? location.id || true : false,\n            showAddEventDialog: location.dialog === 'addEvent',\n            selectedId: '',\n            editEnabled,\n            editAvailable,\n            pdfInGeneration: false,\n            stateIds: null,\n            isFloatComma: true,\n        };\n\n        this.imagePrefix    = this.props.imagePrefix; // by default is admin\n        this.aliveId        = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n        this.eventListId    = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\n        this.triggerPDFId   = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\n\n        this.headCells = [\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\n            { id: 'icon'},\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\n        ];\n    }\n\n    readStatus(cb) {\n        this.props.socket.getState(this.aliveId)\n            .then(aliveState =>\n                this.props.socket.getState(this.eventListId)\n                    .then(state =>\n                        this.props.socket.getState(this.eventRawListId)\n                            .then(rawState => {\n                                let eventList;\n                                try {\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\n                                } catch (e) {\n                                    eventList = [];\n                                }\n                                let eventRawList;\n                                try {\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\n                                } catch (e) {\n                                    eventRawList = [];\n                                }\n\n                                // merge together\n                                eventList.forEach(item => {\n                                    const raw = eventRawList.find(it => it.ts === item._id);\n                                    if (raw) {\n                                        item.stateId = raw.id;\n                                    }\n                                });\n\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\n                            })));\n    }\n\n    componentDidMount() {\n        this.readStatus(() => {\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\n        });\n   }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\n    }\n\n    onStateChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        } if (id === this.triggerPDFId) {\n            this.setState({pdfInGeneration: state && state.val});\n        } else if (id === this.eventListId) {\n            let eventList;\n            try {\n                eventList = state && state.val ? JSON.parse(state.val) : []\n            } catch (e) {\n                eventList = [];\n            }\n            // merge together\n            this.state.eventRawList && eventList.forEach(item => {\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\n                if (raw) {\n                    item.stateId = raw.id;\n                }\n            });\n            this.setState({eventList});\n        } else if (id === this.eventRawListId) {\n            let eventRawList;\n            try {\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\n            } catch (e) {\n                eventRawList = [];\n            }\n            // merge together\n            let eventList = null;\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\n                if (!item.stateId) {\n                    const raw = eventRawList.find(it => it.ts === item._id);\n                    if (raw) {\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\n                        eventList[i].stateId = raw.id;\n                    }\n                }\n            });\n            const newState = {eventRawList};\n            if (eventList) {\n                newState.eventList = eventList;\n            }\n            this.setState(newState);\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onRequestSort = (event, property) => {\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\n    };\n\n    renderHeader() {\n        const createSortHandler = (property) => event =>\n            this.onRequestSort(event, property);\n\n        return <TableHead>\n            <TableRow>\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\n                        disabled={!this.state.eventList.length}\n                        onChange={e => {\n                            if (e.target.checked) {\n                                const selected = this.state.eventList.map(n => n._id);\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\n                                this.setState({selected, selectedId});\n                            } else {\n                                this.setState({selected: [], selectedId: ''});\n                            }\n                        }}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>}\n                {this.headCells.map(cell =>\n                    cell.id === 'icon' ?  (\n                            this.props.native.icons ? <TableCell\n                                key={cell.id}\n                                component=\"th\"\n                                className={this.props.classes.tdIcons}\n                                align=\"left\"\n                                padding=\"none\"\n                            /> : null\n                        )\n                    :\n                    <TableCell\n                        key={cell.id}\n                        className={this.props.classes['td' + cell.id[0].toUpperCase() + cell.id.substring(1)]}\n                        align={cell.align}\n                        padding=\"none\"\n                        component=\"th\"\n                        sortDirection={this.state.orderBy === cell.id ? this.state.order : false}\n                    >\n                        <TableSortLabel\n                            active={this.state.orderBy === cell.id}\n                            direction={this.state.orderBy === cell.id ? this.state.order : 'asc'}\n                            onClick={createSortHandler(cell.id)}\n                        >\n                            {cell.label}\n                            {this.state.orderBy === cell.id ?\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\n                                : null\n                            }\n                        </TableSortLabel>\n                    </TableCell>\n                )}\n                {this.props.native.duration ?\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\n                        {I18n.t('Duration')}</TableCell>\n                    : null}\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\n            </TableRow>\n        </TableHead>;\n    }\n\n    triggerPdf() {\n        if (this.state.isInstanceAlive) {\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\n                .then(() => {\n                    let myWindow;\n                    if (!window.location.pathname.includes('adapter/')) {\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\n                    } else {\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\n                    }\n\n                    myWindow && myWindow.focus();\n                });\n        }\n    }\n\n    readIds() {\n        return new Promise((resolve, reject) => {\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\n                if (!err) {\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\n                    const ids = [];\n                    const promises = [];\n                    if (res && res.rows) {\n                        for (let i = 0; i < res.rows.length; i++) {\n                            const obj = res.rows[i].value;\n                            if (obj[namespace]) {\n                                (id => promises.push(this.props.socket.getObject(id)\n                                    .then(obj => {\n                                        if (obj) {\n                                            let count = 0;\n                                            // count states\n                                            this.state.eventList.forEach(item => item.id === obj._id && count++);\n                                            ids.push({id: obj._id, name: Utils.getObjectNameFromObj(obj, I18n.getLanguage()), count});\n                                        }\n                                    })\n                                    .catch(e => ids.push({id}))\n                                ))(res.rows[i].id);\n                            }\n                        }\n                    }\n\n                    serialPromises(promises)\n                        .then(() => {\n                            ids.sort((a, b) => a.id > b.id ? 1 : (a.id < b.id ? -1 : 0));\n                            resolve(ids);\n                        });\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    renderFilter() {\n        return <>\n            <div className={this.props.classes.filterDiv}\n                 title={I18n.t('Clear filter')}\n                 onClick={() => {\n                     window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, '');\n                     this.setState({filterStates: []});\n                 }}\n            >\n                <IconFilter className={this.props.classes.filterIcon}/>\n                {this.state.filterStates.length ? <IconClose className={this.props.classes.filterClearIcon}/> : null}\n            </div>\n            <Select\n                className={this.props.classes.filterControl}\n                multiple\n                label={I18n.t('Filter by ID')}\n                value={this.state.filterStates}\n                onChange={event => {\n                    window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.filterStates`, JSON.stringify(event.target.value));\n                    this.setState({filterStates: event.target.value});\n                }}\n                //input={<Input placeholder={I18n.t('Filter by ID')}/>}\n                onOpen={() => this.readIds().then(ids => this.setState({stateIds: ids}))}\n                renderValue={selected => selected.length === 1 ? selected[0] : selected.length}\n            >\n                {!this.state.stateIds ?\n                    <MenuItem><CircularProgress /></MenuItem>\n                    :\n                    this.state.stateIds.map(item =>\n                        <MenuItem key={item.id} value={item.id}>\n                            <Checkbox checked={this.state.filterStates.includes(item.id)} />\n                            <ListItemText\n                                primary={<span>{item.name} <span className={this.props.classes.filterCounts}>{item.count}</span></span>}\n                                secondary={item.id}\n                                classes={{secondary: this.props.classes.filterSecondary}}\n                            />\n                        </MenuItem>)\n                }\n            </Select>\n        </>;\n    }\n\n    renderToolbar() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\n\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {this.state.selected.length} {I18n.t('selected')}\n                </Typography>\n            :\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    <span>{I18n.t('Event list')}</span>\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\n                </Typography>\n            }\n\n            {!this.state.selected.length ? this.renderFilter() : null}\n\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\n                <>\n                    <Tooltip title={I18n.t('Delete')}>\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                    {this.state.selectedId ?\n                        <Tooltip title={I18n.t('Edit settings for state')}>\n                            <IconButton aria-label=\"edit\" onClick={() => {\n                                Router.doNavigate(null, 'addId', this.state.selectedId);\n                                this.setState({showAddIdDialog: this.state.selectedId})\n                            }}>\n                                <IconEdit />\n                            </IconButton>\n                        </Tooltip>\n                        : null}\n                </>\n                :\n                <>\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => {\n                            Router.doNavigate(null, 'selectState', '');\n                            this.setState({showSelectState: true});\n                        }}>\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8, paddingLeft: 16}}/>\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle', paddingRight: 16}}>{I18n.t('States')}</span>}\n                            </div>\n                        </Fab>\n                    </Tooltip>}\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\n                        <span>\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\n                                </div>\n                            </Fab>\n                        </span>\n                    </Tooltip>}\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\n                        <Fab\n                            variant=\"extended\"\n                            aria-label=\"enable-edit\"\n                            size=\"small\"\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\n                            onClick={() => {\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\n                                this.setState({editEnabled: !this.state.editEnabled});\n                            }}>\n                            <IconEdit />\n                        </Fab>\n                    </Tooltip>}\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\n                        <span>\n                            <Fab\n                                variant=\"extended\"\n                                aria-label=\"generate-pdf\"\n                                size=\"small\"\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\n                                onClick={() => this.triggerPdf()}>\n                                <IconPdf />\n                            </Fab>\n                        </span>\n                    </Tooltip>}\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\n                            <IconReload />\n                        </Fab>\n                    </Tooltip>\n                </>\n            }\n        </Toolbar>;\n    }\n\n    stableSort(array, comparator) {\n        if (this.state.filterStates && this.state.filterStates.length) {\n            array = array.filter(item => this.state.filterStates.includes(item.id));\n        }\n        const stabilizedThis = array.map((el, index) => [el, index]);\n\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) {\n                return order;\n            } else {\n                return a[1] - b[1];\n            }\n        });\n        return stabilizedThis.map(el => el[0]);\n    }\n\n    descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\n    }\n\n    handleClick(id) {\n        const selectedIndex = this.state.selected.indexOf(id);\n        let newSelected = [];\n        let selectedId = '';\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(this.state.selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(this.state.selected.slice(1));\n        } else if (selectedIndex === this.state.selected.length - 1) {\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                this.state.selected.slice(0, selectedIndex),\n                this.state.selected.slice(selectedIndex + 1),\n            );\n        }\n        if (newSelected.length === 1) {\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\n        }\n\n        this.setState({selected: newSelected, selectedId});\n    };\n\n    deleteEntries(cb) {\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\n            .then(state => {\n                let eventList;\n                try {\n                    eventList = state && state.val ? JSON.parse(state.val) : []\n                } catch (e) {\n                    eventList = [];\n                }\n\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\n\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\n                    .then(() =>\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\n            });\n    }\n\n    renderSelectState() {\n        if (!this.state.showSelectState) {\n            return null;\n        }\n        return <SelectStateDialog\n            imagePrefix={this.props.imagePrefix}\n            socket={this.props.socket}\n            adapterName={this.props.adapterName}\n            instance={this.props.instance}\n            onClose={id => {\n                if (id) {\n                    Router.doNavigate(null, 'addId', id);\n                    this.setState({showAddIdDialog: id, showSelectState: false});\n                } else {\n                    Router.doNavigate(null, '', '');\n                    this.setState({showSelectState: false});\n                }\n            }}\n            />;\n    }\n\n    renderList() {\n        return <TableContainer className={this.props.classes.tableContainer}>\n            <Table\n                className={this.props.classes.table}\n                size=\"small\"\n            >\n                {this.renderHeader()}\n                <TableBody>\n                    {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\n                        .map((row, index) => {\n                            const isItemSelected = this.state.selected.includes(row._id);\n                            const labelId = `enhanced-table-checkbox-${index}`;\n\n                            return <TableRow\n                                hover\n                                onClick={() => this.handleClick(row._id)}\n                                style={row._style || undefined}\n                                role=\"checkbox\"\n                                aria-checked={isItemSelected}\n                                tabIndex={-1}\n                                key={row._id}\n                                selected={isItemSelected}\n                            >\n                                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        checked={isItemSelected}\n                                        inputProps={{ 'aria-labelledby': labelId }}\n                                    />\n                                </TableCell>}\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\n                                {this.props.native.icons ?\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\n                                        {row.icon ? (row.icon.endsWith('default') ? <IconEvent/> : <Image\n                                            imagePrefix={this.imagePrefix}\n                                            src={row.icon}\n                                            className={this.props.classes.icon}\n                                            color={(row._style && row._style.color) || ''}\n                                        />) : null}\n                                    </TableCell>\n                                    : null}\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\n                                <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\n                                {this.props.native.duration ?\n                                    <TableCell style={row.dr ? Object.assign({}, row._style || {}, {color: COLOR_RUNNING_DURATION}) : row._style || undefined } className={clsx(row.dr && this.props.classes.tdDurationRunning, this.props.classes.tdDuration)} component=\"td\" padding=\"none\" align=\"right\">\n                                        {row.duration || ''}</TableCell>\n                                    : null}\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\n                                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\n                                    <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\n                                        <IconButton className={this.props.classes.editButton} onClick={e => {\n                                            e.stopPropagation();\n                                            Router.doNavigate(null, 'addId', row.stateId);\n                                            this.setState({showAddIdDialog: row.stateId});\n                                        }}><IconEdit/></IconButton>\n                                    </Tooltip>: null}\n                                </TableCell>}\n                            </TableRow>;\n                        })}\n                </TableBody>\n            </Table>\n        </TableContainer>;\n    }\n\n    renderConfirmDialog() {\n        if (!this.state.showDeleteConfirm) {\n            return null;\n        } else {\n            return <ConfirmDialog\n                title={I18n.t('Please confirm')}\n                text={I18n.t('Are you sure to delete events from list?')}\n                ok={I18n.t('Ok')}\n                cancel={I18n.t('Cancel')}\n                icon={<IconQuestion/>}\n                onClose={result =>\n                    this.setState({showDeleteConfirm: false}, () =>\n                        result && this.deleteEntries())}\n                />\n        }\n    }\n\n    renderAddEventDialog() {\n        if (!this.state.showAddEventDialog) {\n            return null;\n        } else {\n            return <AddEventDialog\n                imagePrefix={this.imagePrefix}\n                onClose={event => {\n                    this.setState({showAddEventDialog: false}, () =>\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\n                }}\n            />;\n        }\n    }\n\n    renderAddIdDialog() {\n        if (!this.state.showAddIdDialog) {\n            return null;\n        } else {\n            return <AddIdDialog\n                imagePrefix={this.imagePrefix}\n                instance={this.props.instance}\n                adapterName={this.props.adapterName}\n                themeName={this.props.themeName}\n                themeType={this.props.themeType}\n                socket={this.props.socket}\n                native={this.props.native}\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\n                onClose={event => {\n                    Router.doNavigate(null, '', '');\n                    this.setState({showAddIdDialog: false}, () =>\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\n                }}\n            />;\n        }\n    }\n\n    render() {\n        return <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\n            {this.renderToolbar()}\n            {this.state.eventList ? this.renderList() : <LinearProgress />}\n            {this.renderToast()}\n            {this.renderConfirmDialog()}\n            {this.renderAddEventDialog()}\n            {this.renderAddIdDialog()}\n            {this.renderSelectState()}\n        </Paper>;\n    }\n}\n\nList.propTypes = {\n    editAvailable: PropTypes.bool,\n    editEnabled: PropTypes.bool,\n    showEditButton: PropTypes.bool,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    socket: PropTypes.object.isRequired,\n    themeName: PropTypes.string,\n    themeType: PropTypes.string,\n    native: PropTypes.object.isRequired,\n    imagePrefix: PropTypes.string,\n};\n\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport TextField from '@material-ui/core/TextField';\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\nimport {MdHelp as IconHelp} from 'react-icons/md';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        height: '100%'\n    },\n    gridContainer: {\n        width: '100%',\n        height: '100%'\n    },\n    button: {\n        marginRight: 20,\n    },\n    settingsDivLandscape: {\n    },\n    iframePdfLandscape: {\n        width: '100%',\n        height: '100%'\n    },\n    field: {\n        width: 100,\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    fieldWide: {\n        width: 250,\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    accordionContent: {\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    noCheckbox: {\n        paddingLeft: 32,\n    },\n    formControl: {\n        paddingRight: theme.spacing(1),\n        minWidth: 200,\n    },\n    orientation: {\n        marginTop: theme.spacing(1),\n    },\n    fontSize: {\n        marginTop: -3,\n    },\n    buttonFormat: {\n        marginTop: 20,\n    },\n    titleText: {\n        width: 310,\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    }\n});\n\nconst SETTINGS = {\n    orientation: 'portrait',\n    enabledTime: true,\n    enabledValue: true,\n    enabledDuration: true,\n    widthTime: 105,\n    widthEvent: 200,\n    widthValue: 110,\n    widthDuration: 100,\n    textTime: 'Time',\n    textEvent: 'Event',\n    textValue: 'Value',\n    textDuration: 'Duration',\n    paddingLeft: 60,\n    paddingTopFirst: 120,\n    paddingTop: 60,\n    pageWidth: 510,\n    pageHeight: 740,\n\n    textColor: '#000000',\n    fontSize: 10,\n    colorLineOdd: '#E8E8E8',\n    colorLineEven: '#FFFFFF',\n    lineHeight: 18,\n\n    colorHeaderBackground: '#888888',\n    colorHeader: '#FFFFFF',\n    fontSizeHeader: 13,\n    enabledHeader: true,\n\n    titleColor: '#000000',\n    titleText: 'Event list on {{YYYY MM DD H:mm:ss}}',\n    titleFontSize: 18,\n\n    pageNumberOffsetX: 50,\n    pageNumberOffsetY: 10,\n    pageNumberFontSize: 10,\n    pageNumberColor: '#000000',\n    pageNumberEnabled: true,\n\n    margins: {\n        top: 30,\n        bottom: 30,\n        left: 30,\n        right: 30,\n    }\n};\n\nclass PdfSettings extends Component {\n    constructor(props) {\n        super(props);\n\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\n        try {\n            expanded = JSON.parse(expanded);\n        } catch (e) {\n\n        }\n\n        this.state = {\n            isInstanceAlive: false,\n            pdfInGeneration: false,\n            random: 0,\n            expanded,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\n    }\n\n    onStateChanged = (id, state) => {\n        if (id === this.aliveId) {\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\n            }\n        } if (id === this.triggerPDFId) {\n            this.setState({pdfInGeneration: state && state.val});\n        }\n    };\n\n    triggerPdf() {\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\n            this.triggerTimer && clearTimeout(this.triggerTimer);\n            this.triggerTimer = setTimeout(() => {\n                this.triggerTimer = null;\n                this.setState({pdfInGeneration: true});\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\n                Object.keys(settings).forEach(attr => {\n                    if (attr.toLowerCase().includes('color')) {\n                        if (typeof settings[attr] === 'object') {\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\n                        }\n                        if (settings[attr].startsWith('rgb')) {\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\n                        }\n                    }\n                });\n\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\n                    .then(() =>\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\n                            setTimeout(() => {\n                                if (this.lastElement) {\n                                    try {\n                                        this.lastElement.focus();\n                                    } catch (e) {\n\n                                    }\n\n                                    this.lastElement = null;\n                                }\n                            })));\n            }, 1000);\n        }\n    }\n\n    onChange(attr, value, e) {\n        if (e && e.target) {\n            this.lastElement = e.target;\n            //e.stopPropagation();\n        }\n        this.props.onChange('pdfSettings.' + attr, value, () =>\n            this.triggerPdf());\n    }\n\n    onExpand(name, ex) {\n        let expanded;\n        if (name === true) {\n            expanded = ['sizes', 'enabledTitle', 'enabledHeader', 'margins', 'text', 'enabledTime', 'enabledEvent', 'enabledValue', 'enabledDuration', 'pageNumberEnabled'];\n        } else if (name === false) {\n            expanded = [];\n        } else {\n            expanded = [...this.state.expanded];\n            if (ex) {\n                !expanded.includes(name) && expanded.push(name);\n            } else {\n                const pos = expanded.indexOf(name);\n                pos !== -1 && expanded.splice(pos, 1);\n            }\n        }\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\n        this.setState({expanded});\n    }\n\n    toggleOrientation(orientation, e) {\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\n            const native = JSON.parse(JSON.stringify(this.props.native));\n            const pageWidth = native.pdfSettings.pageWidth;\n            const top = native.pdfSettings.margins.top;\n            const bottom = native.pdfSettings.margins.bottom;\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\n            native.pdfSettings.pageHeight = pageWidth;\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\n            native.pdfSettings.margins.left = top;\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\n            native.pdfSettings.margins.right = bottom;\n            native.pdfSettings.orientation = orientation;\n            this.props.updateNative(native);\n        }\n    }\n\n    renderPageSize(settings) {\n        return <Accordion\n            expanded={this.state.expanded.includes('sizes')}\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\n        >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\n            <AccordionDetails style={{display: 'block'}}>\n                <FormControl className={clsx(this.props.classes.fieldWide, this.props.classes.orientation)}>\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\n                    <Select\n                        disabled={this.state.pdfInGeneration}\n                        value={settings.orientation || 'portrait'}\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\n                    >\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Width')}\n                    value={settings.pageWidth}\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Height')}\n                    value={settings.pageHeight}\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\n                />\n                <br/>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    type=\"number\"\n                    className={this.props.classes.fieldWide}\n                    label={I18n.t('Padding top for first page')}\n                    value={settings.paddingTopFirst}\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    type=\"number\"\n                    className={this.props.classes.fieldWide}\n                    label={I18n.t('Padding top for other pages')}\n                    value={settings.paddingTop}\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Padding left')}\n                    value={settings.paddingLeft}\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\n                />\n            </AccordionDetails>\n        </Accordion>;\n    }\n\n    renderSettingsTitle(settings) {\n        return <Accordion\n            expanded={this.state.expanded.includes('enabledTitle')}\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\n        >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\n            <AccordionDetails style={{display: 'inline-block'}}>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"titleText\"\n                    type=\"text\"\n                    className={clsx(this.props.classes.titleText)}\n                    label={I18n.t('Title')}\n                    value={settings.titleText}\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\n                    helperText={I18n.t('You can add time with {{YYYY MM DD}}')}\n                />\n                <Button\n                    variant=\"contained\"\n                    className={this.props.classes.buttonFormat}\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}\n                    startIcon={<IconHelp />}\n                >\n                    {I18n.t('Time format description')}\n                </Button>\n                <br/>\n                <ColorPicker\n                    disabled={this.state.pdfInGeneration}\n                    color={settings.titleColor}\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\n                    name={I18n.t('Color')}\n                    onChange={color => this.onChange('titleColor', color)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"titleFontSize\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Title')}\n                    value={settings.titleFontSize}\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\n                />\n            </AccordionDetails>\n        </Accordion>;\n    }\n\n    renderPageHeader(settings) {\n        return <Accordion\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\n        >\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\n                <FormControlLabel\n                    onFocus={event => event.stopPropagation()}\n                    onClick={event => event.stopPropagation()}\n                    disabled={this.state.pdfInGeneration}\n                    key=\"enabledHeader\"\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\n                    label={I18n.t('Show table header')}\n                />\n            </AccordionSummary>\n            {!!settings.enabledHeader && <AccordionDetails>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"fontSizeHeader\"\n                    type=\"number\"\n                    className={clsx(this.props.classes.field, this.props.classes.fontSize)}\n                    label={I18n.t('Font size')}\n                    value={settings.fontSizeHeader}\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\n                />\n                <ColorPicker\n                    disabled={this.state.pdfInGeneration}\n                    color={settings.colorHeaderBackground}\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\n                    name={I18n.t('Background')}\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\n                />\n                <ColorPicker\n                    disabled={this.state.pdfInGeneration}\n                    color={settings.colorHeader}\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\n                    name={I18n.t('Text color')}\n                    onChange={color => this.onChange('colorHeader', color)}\n                />\n            </AccordionDetails>}\n        </Accordion>;\n    }\n\n    renderPageMargins(settings) {\n        return <Accordion\n            expanded={this.state.expanded.includes('margins')}\n            onChange={(event, ex) => this.onExpand('margins', ex)}\n        >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\n            <AccordionDetails>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"top\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Top')}\n                    value={settings.margins.top}\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"left\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Left')}\n                    value={settings.margins.left}\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"bottom\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Bottom')}\n                    value={settings.margins.bottom}\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"right\"\n                    type=\"right\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Right')}\n                    value={settings.margins.right}\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\n                />\n            </AccordionDetails>\n        </Accordion>;\n    }\n\n    renderSettingsText(settings) {\n        return <Accordion\n            expanded={this.state.expanded.includes('text')}\n            onChange={(event, ex) => this.onExpand('text', ex)}\n        >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\n            <AccordionDetails style={{display: 'inline-block'}}>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"fontSize\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Font size')}\n                    value={settings.fontSize}\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\n                />\n                <ColorPicker\n                    disabled={this.state.pdfInGeneration}\n                    color={settings.textColor}\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\n                    name={I18n.t('Color')}\n                    onChange={color => this.onChange('textColor', color)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"lineHeight\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Line height')}\n                    value={settings.lineHeight}\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\n                />\n                <br/>\n                <ColorPicker\n                    disabled={this.state.pdfInGeneration}\n                    color={settings.colorLineOdd}\n                    style={{width: 408, display: 'inline-block', marginRight: 16, marginTop: 8}}\n                    name={I18n.t('Odd line background')}\n                    onChange={color => this.onChange('colorLineOdd', color)}\n                />\n                <ColorPicker\n                    disabled={this.state.pdfInGeneration}\n                    color={settings.colorLineEven}\n                    style={{width: 400, display: 'inline-block', marginRight: 16, marginTop: 8}}\n                    name={I18n.t('Even line background')}\n                    onChange={color => this.onChange('colorLineEven', color)}\n                />\n            </AccordionDetails>\n        </Accordion>;\n    }\n\n    renderSettingsTime(settings) {\n        return <Accordion\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\n        >\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\n                <FormControlLabel\n                    disabled={this.state.pdfInGeneration}\n                    key=\"enabledTime\"\n                    onFocus={event => event.stopPropagation()}\n                    onClick={event => event.stopPropagation()}\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\n                    label={I18n.t('Show time')}\n                />\n            </AccordionSummary>\n            {!!settings.enabledTime && <AccordionDetails>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"widthTime\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Column width')}\n                    value={settings.widthTime}\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\n                />\n                {!!settings.enabledHeader && <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"textTime\"\n                    type=\"text\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Header text')}\n                    value={settings.textTime}\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\n                />}\n            </AccordionDetails>}\n        </Accordion>\n    }\n\n    renderSettingsEvent(settings) {\n        return <Accordion\n            expanded={this.state.expanded.includes('enabledEvent')}\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\n        >\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\n            <AccordionDetails>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"widthEvent\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Column width')}\n                    value={settings.widthEvent}\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\n                />\n                {!!settings.enabledHeader && <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"textEvent\"\n                    type=\"text\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Header text')}\n                    value={settings.textEvent}\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\n                />}\n            </AccordionDetails>\n        </Accordion>;\n    }\n\n    renderSettingsValue(settings) {\n        return <Accordion\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\n        >\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\n                <FormControlLabel\n                    disabled={this.state.pdfInGeneration}\n                    onFocus={event => event.stopPropagation()}\n                    onClick={event => event.stopPropagation()}\n                    key=\"enabledValue\"\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\n                    label={I18n.t('Show value')}\n                />\n            </AccordionSummary>\n            {!!settings.enabledValue && <AccordionDetails>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"widthValue\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Column width')}\n                    value={settings.widthValue}\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\n                />\n                {!!settings.enabledHeader &&  <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"textValue\"\n                    type=\"text\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Header text')}\n                    value={settings.textValue}\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\n                />}\n            </AccordionDetails>}\n        </Accordion>;\n    }\n\n    renderSettingsDuration(settings) {\n        return <Accordion\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\n\n        >\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\n                <FormControlLabel\n                    disabled={this.state.pdfInGeneration}\n                    onFocus={event => event.stopPropagation()}\n                    onClick={event => event.stopPropagation()}\n                    key=\"enabledDuration\"\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\n                        this.onChange('enabledDuration', e.target.checked, e)\n                    }} />}\n                    label={I18n.t('Show duration')}\n                />\n            </AccordionSummary>\n            {!!settings.enabledDuration && <AccordionDetails>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"widthDuration\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Column width')}\n                    value={settings.widthDuration}\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\n                />\n                {!!settings.enabledHeader && <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"textDuration\"\n                    type=\"text\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Header text')}\n                    value={settings.textDuration}\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\n                />}\n            </AccordionDetails>}\n        </Accordion>;\n    }\n\n    renderPageNumbers(settings) {\n        return <Accordion\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\n        >\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\n                <FormControlLabel\n                    disabled={this.state.pdfInGeneration}\n                    onFocus={event => event.stopPropagation()}\n                    onClick={event => event.stopPropagation()}\n                    key=\"pageNumberEnabled\"\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\n                    label={I18n.t('Show page numbers')}\n                />\n            </AccordionSummary>\n            {!!settings.pageNumberEnabled && <AccordionDetails>\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"pageNumberFontSize\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Font size')}\n                    value={settings.pageNumberFontSize}\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\n                />\n                <ColorPicker\n                    disabled={this.state.pdfInGeneration}\n                    color={settings.pageNumberColor}\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\n                    name={I18n.t('Color')}\n                    onChange={color => this.onChange('pageNumberColor', color)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"pageNumberOffsetX\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('X Offset')}\n                    value={settings.pageNumberOffsetX}\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\n                />\n                <TextField\n                    disabled={this.state.pdfInGeneration}\n                    key=\"pageNumberOffsetY\"\n                    type=\"number\"\n                    className={this.props.classes.field}\n                    label={I18n.t('Y Offset')}\n                    value={settings.pageNumberOffsetY}\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\n                />\n            </AccordionDetails>}\n        </Accordion>;\n    }\n\n    renderSettings() {\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\n\n        return <Grid item xs={12} md={12} lg={6}>\n            <Grid container>\n                <FormControlLabel\n                    key=\"pdfButton\"\n                    control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\n                    label={I18n.t('Show PDF generate button on list')}\n                />\n                <div style={{flexGrow: 1}}/>\n                <IconButton onClick={() => this.onExpand(false)} title={I18n.t('Collapse all')} disabled={!this.state.expanded.length}><ExpandLessIcon /></IconButton>\n                <IconButton onClick={() => this.onExpand(true)} title={I18n.t('Expand all')} disabled={this.state.expanded.length === 10}><ExpandMoreIcon /></IconButton>\n            </Grid>\n            {this.renderPageSize(settings)}\n            {this.renderSettingsTitle(settings)}\n            {this.renderPageHeader(settings)}\n            {this.renderPageMargins(settings)}\n            {this.renderSettingsText(settings)}\n            {this.renderSettingsTime(settings)}\n            {this.renderSettingsEvent(settings)}\n            {this.renderSettingsValue(settings)}\n            {this.renderSettingsDuration(settings)}\n            {this.renderPageNumbers(settings)}\n\n        </Grid>;\n    }\n\n    renderPdfFile() {\n        return <Grid item xs={12} md={12} lg={6}>\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={`/files/eventlist/report${this.props.instance ? '-' + this.props.instance : ''}.pdf?q=${this.state.random}`} />\n        </Grid>\n    }\n\n    renderMessage() {\n        if (!this.state.messageText) {\n            return null;\n        }\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\n    }\n\n    render() {\n        return (\n            <form className={this.props.classes.tab}>\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\n                    {this.renderSettings()}\n                    {this.renderPdfFile()}\n                </Grid>\n            </form>\n        );\n    }\n}\n\nPdfSettings.propTypes = {\n    native: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    updateNative: PropTypes.func,\n    socket: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(PdfSettings);\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\nimport Router from '@iobroker/adapter-react/Components/Router';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport TabOptions from './Tabs/Options';\nimport TabList from './Tabs/List';\nimport TabPDF from './Tabs/PdfSettings';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = {...props};\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        extendedProps.bottomButtons = true;\n\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\n            extendedProps.bottomButtons = false;\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\n            extendedProps.bottomButtons = false;\n        }\n\n        super(props, extendedProps);\n\n        this.isTab = !extendedProps.bottomButtons;\n        this.isWeb = window.socketUrl !== undefined;\n    }\n\n    getSelectedTab() {\n        const tab = this.state.selectedTab;\n        if (!tab || tab === 'options') {\n            return 0;\n        } else\n        if (tab === 'list') {\n            return 1;\n        } else\n        if (tab === 'pdf') {\n            return 2;\n        }\n    }\n\n    onPrepareSave(native) {\n        if (native.defaultBooleanColorTrue) {\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\n        }\n        if (native.defaultBooleanColorFalse) {\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\n        }\n\n        Object.keys(native.pdfSettings).forEach(attr => {\n            if (attr.toLowerCase().includes('color')) {\n                if (typeof native.pdfSettings[attr] === 'object') {\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\n                }\n                if (native.pdfSettings[attr].startsWith('rgb')) {\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\n                }\n            }\n        });\n\n        super.onPrepareSave();\n    }\n\n    updateNative(native, cb) {\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\n        this.setState({native, changed}, cb);\n    }\n\n    renderTabsForConfig() {\n        return <>\n            <AppBar position=\"static\">\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => Router.doNavigate(e.target.parentNode.dataset.name)}>\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\n                </Tabs>\n            </AppBar>\n\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\n                    key=\"options\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={this.state.native}\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n                    onLoad={native => this.onLoadConfig(native)}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                    changed={this.state.changed}\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                />}\n                {this.state.selectedTab === 'list' && this.renderEventList()}\n                {this.state.selectedTab === 'pdf' && <TabPDF\n                    key=\"pdf\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={this.state.native}\n                    onError={text => this.setState({errorText: text})}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\n                />}\n            </div>\n            {this.renderSaveCloseButtons()}\n        </>;\n    }\n\n    renderEventList() {\n        return <TabList\n            key=\"enums\"\n            imagePrefix={this.isWeb ? '../' : '../..'}\n            editEnabled={!this.isTab}\n            showEditButton={this.isTab}\n            themeName={this.state.themeName}\n            themeType={this.state.themeType}\n            common={this.common}\n            socket={this.socket}\n            native={this.state.native}\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\n            instance={this.instance}\n            adapterName={this.adapterName}\n        />;\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <MuiThemeProvider theme={this.state.theme}>\n                <Loader themeType={this.state.themeType} />\n            </MuiThemeProvider>\n        }\n\n        return <MuiThemeProvider theme={this.state.theme}>\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\n                {!this.isTab ?\n                    this.renderTabsForConfig()\n                    :\n                    this.renderEventList()\n                }\n                {this.renderError()}\n            </div>\n        </MuiThemeProvider>;\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {version} from '../package.json';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nwindow.adapterName = 'eventlist';\nlet themeName = Utils.getThemeName();\n\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\n\nfunction build() {\n    return ReactDOM.render(\n        <MuiThemeProvider theme={theme(themeName)}>\n            <App\n                onThemeChange={_theme => {\n                    themeName = _theme;\n                    build();\n                }}\n            />\n        </MuiThemeProvider>,\n        document.getElementById('root')\n    );\n}\n\nif (window.location.host !== 'localhost:3000') {\n    Sentry.init({\n        dsn: 'https://f41fcdf099e848c590da9b96d0ba67c8@sentry.iobroker.net/109',\n        release: 'iobroker.' + window.adapterName + '@' + version,\n        integrations: [\n            new SentryIntegrations.Dedupe()\n        ]\n    });\n}\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}