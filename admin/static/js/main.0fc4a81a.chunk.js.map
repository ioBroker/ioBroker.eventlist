{"version":3,"sources":["assets/telegram.svg","assets/pushover.svg","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MessengerSelect","props","state","selected","instances","adapterName","loadedAdapterName","names","loadData","this","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","map","item","title","common","titleLang","name","en","setState","_id","split","pop","setTimeout","length","FormControl","className","classes","formControl","style","InputLabel","label","t","Select","multiple","value","onChange","event","target","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","i","MenuItem","key","Checkbox","checked","includes","ListItemText","primary","CircularProgress","React","Component","withStyles","theme","Options","onAliveChanged","id","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","e","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","IconButton","aria-label","color","close","onClick","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","TextField","maxLength","type","inputProps","min","max","margin","dateFormat","Button","variant","buttonFormat","buttonIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","icons","duration","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","display","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","openAbove","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","marginBottom","button","card","maxWidth","textAlign","media","height","verticalAlign","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","marginTop","whiteSpace","AddEventDialog","showTime","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","disabled","AddIdDialog","onStateChanged","unit","eventDefault","alarmsOnly","defaultMessengers","messagesInAlarmsOnly","whatsAppCMB","pushover","telegram","states","icon","changesOnly","showSelectId","unknownId","simulateState","exists","confirmExit","confirmRemove","imagePrefix","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","newState","changed","trueState","find","original","falseState","newVal","defText","defColor","defIcon","Array","nState","forEach","objStates","parseStates","Object","keys","attr","_st","obj","Promise","resolve","getObject","parts","noWait","readTypeTimer","clearTimeout","reading","getName","custom","newSettings","undefined","addBooleanStates","addNumericStates","readIconAndColor","result","ownIcon","ownColor","getSettings","catch","subscribe","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","word","lang","translations","w","stateVal","ColorPicker","getColor","defaultBooleanIconTrue","defaultBooleanIconFalse","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","duration2text","settings","enabled","it","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","ok","cancel","isYes","removeSettings","isBoolean","toUpperCase","flex","Paper","paper","root","textDense","width100minus32","count","messengers","src","Telegram","alt","messengersIcon","clsx","whatsAppIcon","Pushover","exampleColor","getExampleColor","field","error","textFieldWithButton","LinearProgress","examplePaper","exampleTitle","exampleText","getExampleIcon","exampleIcon","buildExample","Switch","width100","iconOpenAll","iconCloseAll","renderStateSettings","renderState","renderMessengers","writeSettings","renderSelectId","renderConfirmExit","renderConfirmRemove","withWidth","background","palette","marginLeft","padding","flexGrow","float","SelectStateDialog","ids","filter","promises","readIds","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","startsWith","getSelectIdIcon","ListItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","size","dialogContent","dense","renderListItem","opacity","main","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","stateId","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","showEditButton","location","Router","getLocation","showDeleteConfirm","showSelectState","dialog","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","cell","component","tdIcons","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","pathname","now","focus","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","doNavigate","toolbarButton","Fab","buttonAddState","toolbarButtonText","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","a","b","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","handleClick","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","light","dark","border","clip","position","top","lineHeight","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","textColor","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","bottom","left","right","PdfSettings","random","triggerTimer","rgb2hex","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","fieldWide","toggleOrientation","onFocus","assign","Grid","xs","md","lg","container","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","isWeb","selectedTab","RGB2hex","savedNative","AppBar","Tabs","getSelectedTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","match","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0fc4a81a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telegram.629c958a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pushover.e000ae58.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdHelp as IconHelp} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\n\nimport MessengerSelect from  '../Components/MessengerSelect';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    inputMessengers: {\n        minWidth: 200,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(2),\n    },\n    buttonFormat: {\n        marginTop: 20,\n    },\n    checkBoxLabel: {\n        whiteSpace: 'nowrap'\n    },\n    heading: {\n        fontWeight: 'bold',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\n        try {\n            expanded = JSON.parse(expanded);\n        } catch (e) {\n            expanded = [];\n        }\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n            expanded,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n\n        this.props.socket.getState(this.aliveId).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onToggle(id) {\n        const expanded = [...this.state.expanded];\n        const pos = expanded.indexOf(id);\n        if (pos !== -1)  {\n            expanded.splice(pos, 1);\n        } else {\n            expanded.push(id);\n            expanded.sort();\n        }\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\n        this.setState({expanded});\n    }\n\n    render() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                <TextField\n                    label={ I18n.t('Max list length') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.maxLength }\n                    type=\"number\"\n                    inputProps={{min: 1, max: 1000}}\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\n                    margin=\"normal\"\n                />\n                <br/>\n                <TextField\n                    label={ I18n.t('Date format') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.dateFormat }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\n                    margin=\"normal\"\n                />\n                <Button\n                    variant=\"contained\"\n                    className={this.props.classes.buttonFormat}\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\n                        <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Format description')}\n                </Button>\n                <br/>\n                <TextField\n                    label={ I18n.t('Show absolute time after seconds') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.relativeTime }\n                    type=\"number\"\n                    inputProps={{min: 0, max: 140000}}\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\n                    margin=\"normal\"\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\n                    label={I18n.t('Show icons in the list')}\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\n                    label={I18n.t('Show duration in the list')}\n                />\n                <Accordion\n                    expanded={this.state.expanded.includes('state_boolean')}\n                    onChange={() => this.onToggle('state_boolean')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <TextField\n                            label={ I18n.t('Default event text for boolean') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanText }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\n                            margin=\"normal\"\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                        />\n                        <br/>\n                        <TextField\n                            label={ I18n.t('Default text by TRUE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextTrue }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        {narrowWidth && <br/>}\n                        <TextField\n                            label={ I18n.t('Default text by FALSE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextFalse }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        <br/>\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorTrue}\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\n                            name={I18n.t('Default color by TRUE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\n                        />\n                        {narrowWidth && <br/>}\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorFalse}\n                            style={{width: 300, display: 'inline-block'}}\n                            name={I18n.t('Default color by FALSE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n\n                <TextField\n                    label={ I18n.t('Default event text for non boolean states') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.defaultNonBooleanText }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                    margin=\"normal\"\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                />\n                <br/>\n                <FormControl className={this.props.classes.input}>\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\n                    <Select\n                        value={this.props.native.language || 'system'}\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\n                    >\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\n                        <MenuItem value=\"en\">English</MenuItem>\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\n                        <MenuItem value=\"ru\">русский</MenuItem>\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\n                        <MenuItem value=\"fr\">français</MenuItem>\n                        <MenuItem value=\"it\">Italiano</MenuItem>\n                        <MenuItem value=\"es\">Espanol</MenuItem>\n                        <MenuItem value=\"pl\">Polski</MenuItem>\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\n                    </Select>\n                </FormControl>\n                <Accordion\n                    expanded={this.state.expanded.includes('state_messengers')}\n                    onChange={() => this.onToggle('state_messengers')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <MessengerSelect\n                            label={ I18n.t('Telegram') }\n                            adapterName={'telegram'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultTelegram }\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('WhatsApp-CMB') }\n                            adapterName={'whatsapp-cmb'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultWhatsAppCMB }\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('Pushover') }\n                            adapterName={'pushover'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultPushover }\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\n                            socket={this.props.socket}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\r\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\r\nimport Telegram from '../assets/telegram.svg';\r\nimport Pushover from '../assets/pushover.svg';\r\n\r\n//import IconPicker from '../Components/IconPicker';\r\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: 'calc(100% - ' + theme.spacing(2) + 'px)',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    flex: {\r\n        flexGrow: 1,\r\n    },\r\n    messengersIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    whatsAppIcon: {\r\n        color: '#45c655'\r\n    },\r\n    width100: {\r\n        width: '100%',\r\n    },\r\n    width100minus32: {\r\n        width: 'calc(100% - 32px)',\r\n    },\r\n    iconOpenAll: {\r\n        float: 'right',\r\n        marginRight: 4,\r\n    },\r\n    iconCloseAll: {\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\nconst DISABLED_TEXT = '-------------';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n            alarmsOnly: false,\r\n\r\n            defaultMessengers: true,\r\n            messagesInAlarmsOnly: false,\r\n            whatsAppCMB: [],\r\n            pushover: [],\r\n            telegram: [],\r\n\r\n            states: null,\r\n            color: '',\r\n            icon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n            expanded,\r\n\r\n            simulateState: '',\r\n            exists: false,\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n        };\r\n\r\n        this.imagePrefix = this.props.imagePrefix || './files';\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings(null, true);\r\n                } else {\r\n                    this.setState({showSelectId: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = this.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;\r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readIconAndColor(id, obj) {\r\n        return new Promise(resolve => {\r\n            if (obj) {\r\n                resolve(obj);\r\n            } else {\r\n                return this.props.socket.getObject(id);\r\n            }\r\n        })\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.icon) {\r\n                    return {icon: obj.common.icon, color: obj.common.color};\r\n                } else {\r\n                    const parts = id.split('.');\r\n                    parts.pop();\r\n                    return this.props.socket.getObject(parts.join('.'))\r\n                        .then(obj => {\r\n                            if (obj && obj.type === 'channel') {\r\n                                if (obj.common && obj.common.icon) {\r\n                                    return {icon: obj.common.icon, color: obj.common.color};\r\n                                } else {\r\n                                    const parts = obj._id.split('.');\r\n                                    parts.pop();\r\n                                    return this.props.socket.getObject(parts.join('.'))\r\n                                        .then(obj => {\r\n                                            if (obj && (obj.type === 'channel' || obj.type === 'device')) {\r\n                                                if (obj.common && obj.common.icon) {\r\n                                                    return {icon: obj.common.icon, color: obj.common.color};\r\n                                                } else {\r\n                                                    return null;\r\n                                                }\r\n                                            } else {\r\n                                                return null;\r\n                                            }\r\n                                        });\r\n                                }\r\n                            } else if (obj && obj.type === 'device' && obj.common) {\r\n                                return {icon: obj.common.icon, color: obj.common.color};\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    readSettings(id, noWait) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.setState({reading: true});\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type:        (obj && obj.common && obj.common.type) || '',\r\n                        unknownId:   !obj || !obj.common || !obj.common.type,\r\n                        name:        this.getName(obj),\r\n                        unit:        (obj && obj.common && obj.common.unit) || '',\r\n                        whatsAppCMB: [],\r\n                        pushover:    [],\r\n                        telegram:    [],\r\n                        event:       '',\r\n                        icon:        '',\r\n                        color:       '',\r\n                        alarmsOnly:  false,\r\n                        messagesInAlarmsOnly: false,\r\n                        reading: false,\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n\r\n                        newState.event        = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n                        newState.icon         = newSettings.icon;\r\n                        newState.color        = newSettings.color;\r\n                        newState.states       = newSettings.states;\r\n                        newState.alarmsOnly   = newSettings.alarmsOnly;\r\n                        newState.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                        newState.whatsAppCMB  = newSettings.whatsAppCMB || [];\r\n                        newState.pushover     = newSettings.pushover || [];\r\n                        newState.telegram     = newSettings.telegram || [];\r\n                        newState.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    } else {\r\n                        newState.defaultMessengers = true;\r\n                        newState.whatsAppCMB = this.props.native.defaultWhatsAppCMB || [];\r\n                        newState.pushover    = this.props.native.defaultPushover    || [];\r\n                        newState.telegram    = this.props.native.defaultTelegram    || [];\r\n\r\n                        newState.exists = false;\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    }\r\n\r\n                    return this.readIconAndColor(id, obj)\r\n                        .then(result => {\r\n                            if (result && result.icon) {\r\n                                // we must get from /icons/113_hmip-psm_thumb.png => /adapter/hm-rpc/icons/113_hmip-psm_thumb.png\r\n                                // or                                                  /hm-rpc.admin/icons/113_hmip-psm_thumb.png\r\n                                newState.ownIcon = `/adapter/${id.split('.')[0]}${result.icon}`;\r\n                            }\r\n                            if (result && result.color) {\r\n                                newState.ownColor = result.color;\r\n                            }\r\n                            this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                        });\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: '', reading: false}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,noWait ? 0 : 500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = this.state.ownColor || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.color && ColorPicker.getColor(this.state.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.icon || this.state.ownIcon;\r\n        let icon = defIcon || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defIcon) {\r\n                icon = (stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse) || this.state.ownIcon || '';\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.type === 'boolean' ? false : null);\r\n        if (this.state.states) {\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.disabled) {\r\n                return DISABLED_TEXT;\r\n            }\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (valText === DISABLED_TEXT) {\r\n            return I18n.t('DISABLED');\r\n        }\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n            if (this.state.states) {\r\n                if (!this.state.eventDefault && !this.state.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly,\r\n            defaultMessengers: !!this.state.defaultMessengers\r\n        };\r\n        if (this.state.color && ColorPicker.getColor(this.state.color)) {\r\n            settings.color = ColorPicker.getColor(this.state.color);\r\n        }\r\n        if (this.state.icon) {\r\n            settings.icon = this.state.icon;\r\n        }\r\n        if (this.state.alarmsOnly) {\r\n            settings.alarmsOnly = true;\r\n        }\r\n        if (this.state.messagesInAlarmsOnly) {\r\n            settings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (this.state.pushover && this.state.pushover.length && !this.state.defaultMessengers) {\r\n            settings.pushover = this.state.pushover;\r\n        }\r\n        if (this.state.telegram && this.state.telegram.length && !this.state.defaultMessengers) {\r\n            settings.telegram = this.state.telegram;\r\n        }\r\n        if (this.state.whatsAppCMB && this.state.whatsAppCMB.length && !this.state.defaultMessengers) {\r\n            settings.whatsAppCMB = this.state.whatsAppCMB;\r\n        }\r\n\r\n        this.state.states && this.state.states.forEach(item => {\r\n            settings.states = settings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.disabled)  {\r\n                it.disabled = true;\r\n                return;\r\n            }\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            settings.states.push(it);\r\n        });\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        let expanded;\r\n        if (id === false) {\r\n            expanded = [];\r\n        } else if (id === true) {\r\n            expanded = ['state_settings', 'state_messengers'];\r\n            this.state.states && this.state.states.forEach(state => expanded.push('state_' + state.val));\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            const pos = expanded.indexOf(id);\r\n            if (pos !== -1)  {\r\n                expanded.splice(pos, 1);\r\n            } else {\r\n                expanded.push(id);\r\n                expanded.sort();\r\n            }\r\n        }\r\n\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\r\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</span></Typography>\r\n                <div className={this.props.classes.flex}/>\r\n                <FormControlLabel\r\n                    disabled={this.state.reading}\r\n                    control={<Checkbox\r\n                        checked={!!state.disabled}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].disabled = e.target.checked;\r\n                            this.setState({states});\r\n                        }} />\r\n                    }\r\n                    label={I18n.t('Disable logging')}\r\n                />\r\n            </AccordionSummary>\r\n            {!state.disabled && <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        disabled={this.state.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            disabled={this.state.reading}\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].color = color;\r\n                                this.setState({states});\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        disabled={this.state.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.state.id + this.state.type + state.original}\r\n                        color={color}\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={icon => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].icon = icon;\r\n                            this.setState({states});\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        const text = this.state.eventDefault ? (this.state.type === 'boolean' ? this.props.native.defaultBooleanText : this.props.native.defaultNonBooleanText) : this.state.event || I18n.t('Use the specific state texts');\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{root: this.props.classes.width100minus32}}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}\r\n                    {!narrowWidth ? <span style={{color: color || undefined, fontStyle: 'italic'}}>{' - ' + text}</span> : null}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.eventDefault}\r\n                            onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                        }\r\n                        label={<span>\r\n                            <span>{I18n.t('Default text')}</span>\r\n                        </span>}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.eventDefault ? <TextField\r\n                        disabled={this.state.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.event}\r\n                        onChange={e => this.setState({event: e.target.value})}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={ this.state.type === 'number' ?\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\r\n                            :\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        disabled={this.state.reading}\r\n                        color={this.state.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setState({color})}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        disabled={this.state.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.state.id + this.state.type}\r\n                        color={this.state.color}\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.icon}\r\n                        onChange={icon => this.setState({icon: icon})}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const count = (this.state.telegram ? this.state.telegram.length : 0) +\r\n            (this.state.whatsAppCMB ? this.state.whatsAppCMB.length : 0) +\r\n            (this.state.pushover ? this.state.pushover.length : 0);\r\n\r\n        const messengers = [\r\n            this.state.telegram    && this.state.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.telegram.join(', ')    + ')'}</span>] : null,\r\n            this.state.whatsAppCMB && this.state.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.whatsAppCMB.join(', ') + ')'}</span>] : null,\r\n            this.state.pushover    && this.state.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.pushover.join(', ')    + ')'}</span>] : null,\r\n        ];\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\r\n                    {messengers}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.reading}\r\n                    control={<Checkbox\r\n                        disabled={!!this.state.alarmsOnly}\r\n                        checked={!!(this.state.messagesInAlarmsOnly || this.state.alarmsOnly)}\r\n                        onChange={e => this.setState({messagesInAlarmsOnly: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    disabled={this.state.reading}\r\n                    control={<Checkbox\r\n                        checked={this.state.defaultMessengers}\r\n                        onChange={e => this.setState({defaultMessengers: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({telegram: value})}\r\n                    selected={ this.state.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({whatsAppCMB: value})}\r\n                    selected={ this.state.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({pushover: value})}\r\n                    selected={ this.state.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        let val = '';\r\n        if (this.state.state && this.state.state.val) {\r\n            if (this.state.state.val === null || this.state.state.val === undefined) {\r\n                val = ' - --';\r\n            } else {\r\n                val = ' - ' + this.state.state.val.toString();\r\n            }\r\n        }\r\n\r\n        const changed = !this.state.exists || JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings());\r\n        const exampleColor = this.getExampleColor() || undefined;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n                {this.state.reading ? <LinearProgress/> : <div style={{height: 4, width: '100%'}}/>}\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: exampleColor}}>\r\n                            {this.props.native.icons ? <Image\r\n                                src={this.getExampleIcon()}\r\n                                className={this.props.classes.exampleIcon}\r\n                                color={exampleColor}\r\n                                imagePrefix={this.imagePrefix}\r\n                            />: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    disabled={this.state.reading}\r\n                                    control={<Switch\r\n                                        checked={!!this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                        {this.state.type === 'number' && this.state.states ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControl className={this.props.classes.formControl} disabled={this.state.reading}>\r\n                                    <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                    <Select\r\n                                        value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                    >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\r\n                                    {this.state.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                                </FormControl>\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <div className={this.props.classes.width100}>\r\n                        <FormControlLabel\r\n                            disabled={this.state.reading}\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <FormControlLabel\r\n                            disabled={this.state.reading}\r\n                            control={<Checkbox\r\n                                checked={!!this.state.alarmsOnly}\r\n                                onChange={e => this.setState({alarmsOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only in alarm state')}\r\n                        />\r\n                        <IconButton disabled={this.state.expanded.length === (this.state.states ? this.state.states.length : 0 ) + 2} className={this.props.classes.iconOpenAll} onClick={() => this.onToggle(true)}><ExpandMoreIcon/></IconButton>\r\n                        <IconButton disabled={!this.state.expanded.length} className={this.props.classes.iconCloseAll} onClick={() => this.onToggle(false)}> <ExpandLessIcon/></IconButton>\r\n                    </div> : null}\r\n                {this.state.id     ? this.renderStateSettings() : null }\r\n                {this.state.states ? this.state.states.map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n                {this.state.id     ? this.renderMessengers(narrowWidth) : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{!changed ? I18n.t('Close') : I18n.t('Cancel')}</Button>\r\n                {this.state.exists ? <Button\r\n                    disabled={!this.state.id || !this.state.type}\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || !changed}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.8,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <ListItemIcon><AddIcon /></ListItemIcon>\r\n                        <ListItemText primary={I18n.t('Add new state')} classes={{primary: this.props.classes.newState}}/>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    buttonAddState: {\r\n        minWidth: '120px !important',\r\n    },\r\n    icon: {\r\n        width: 28,\r\n        height: 28,\r\n        verticalAlign: 'middle',\r\n    }\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        const location = Router.getLocation();\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showSelectState: location.dialog === 'selectState',\r\n            showAddIdDialog: location.dialog === 'addId' ? location.id || true : false,\r\n            showAddEventDialog: location.dialog === 'addEvent',\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n        };\r\n\r\n        this.imagePrefix    = this.props.imagePrefix || 'files/'; // by default is admin\r\n        this.aliveId        = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId    = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId   = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'icon'},\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {this.headCells.map(cell =>\r\n                    cell.id === 'icon' ?  (\r\n                            this.props.native.icons ? <TableCell\r\n                                key={cell.id}\r\n                                component=\"th\"\r\n                                className={this.props.classes.tdIcons}\r\n                                align=\"left\"\r\n                                padding=\"none\"\r\n                            /> : null\r\n                        )\r\n                    :\r\n                    <TableCell\r\n                        key={cell.id}\r\n                        className={this.props.classes['td' + cell.id[0].toUpperCase() + cell.id.substring(1)]}\r\n                        align={cell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === cell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === cell.id}\r\n                            direction={this.state.orderBy === cell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(cell.id)}\r\n                        >\r\n                            {cell.label}\r\n                            {this.state.orderBy === cell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                )}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => {\r\n                                Router.doNavigate(null, 'addId', this.state.selectedId);\r\n                                this.setState({showAddIdDialog: this.state.selectedId})\r\n                            }}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => {\r\n                            Router.doNavigate(null, 'selectState', '');\r\n                            this.setState({showSelectState: true});\r\n                        }}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.showSelectState) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    Router.doNavigate(null, 'addId', id);\r\n                    this.setState({showAddIdDialog: id, showSelectState: false});\r\n                } else {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showSelectState: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n                <Table\r\n                    className={this.props.classes.table}\r\n                    size=\"small\"\r\n                >\r\n                    {this.renderHeader()}\r\n                    <TableBody>\r\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                            .map((row, index) => {\r\n                                const isItemSelected = this.state.selected.includes(row._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return <TableRow\r\n                                    hover\r\n                                    onClick={() => this.handleClick(row._id)}\r\n                                    style={row._style || undefined}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row._id}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                    {this.props.native.icons ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                            {row.icon ? <Image\r\n                                                imagePrefix={this.imagePrefix}\r\n                                                src={row.icon}\r\n                                                className={this.props.classes.icon}\r\n                                                color={(row._style && row._style.color) || ''}\r\n                                            /> : null}\r\n                                        </TableCell>\r\n                                        : null}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                    {this.props.native.duration ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\r\n                                            {row.duration || ''}</TableCell>\r\n                                        : null}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                                e.stopPropagation();\r\n                                                Router.doNavigate(null, 'addId', row.stateId);\r\n                                                this.setState({showAddIdDialog: row.stateId});\r\n                                            }}><IconEdit/></IconButton>\r\n                                        </Tooltip>: null}\r\n                                    </TableCell>}\r\n                                </TableRow>;\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                imagePrefix={this.imagePrefix}\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n                {this.renderToolbar()}\r\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n                {this.renderToast()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderAddEventDialog()}\r\n                {this.renderAddIdDialog()}\r\n                {this.renderSelectState()}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fieldWide: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        paddingRight: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    orientation: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fontSize: {\r\n        marginTop: -3,\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    titleText: {\r\n        width: 310,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 105,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list on {{YYYY MM DD H:mm:ss}}',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\r\n                Object.keys(settings).forEach(attr => {\r\n                    if (attr.toLowerCase().includes('color')) {\r\n                        if (typeof settings[attr] === 'object') {\r\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\r\n                        }\r\n                        if (settings[attr].startsWith('rgb')) {\r\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    try {\r\n                                        this.lastElement.focus();\r\n                                    } catch (e) {\r\n\r\n                                    }\r\n\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e && e.target) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        let expanded;\r\n        if (name === true) {\r\n            expanded = ['sizes', 'enabledTitle', 'enabledHeader', 'margins', 'text', 'enabledTime', 'enabledEvent', 'enabledValue', 'enabledDuration', 'pageNumberEnabled'];\r\n        } else if (name === false) {\r\n            expanded = [];\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            if (ex) {\r\n                !expanded.includes(name) && expanded.push(name);\r\n            } else {\r\n                const pos = expanded.indexOf(name);\r\n                pos !== -1 && expanded.splice(pos, 1);\r\n            }\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    toggleOrientation(orientation, e) {\r\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\r\n            const native = JSON.parse(JSON.stringify(this.props.native));\r\n            const pageWidth = native.pdfSettings.pageWidth;\r\n            const top = native.pdfSettings.margins.top;\r\n            const bottom = native.pdfSettings.margins.bottom;\r\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\r\n            native.pdfSettings.pageHeight = pageWidth;\r\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\r\n            native.pdfSettings.margins.left = top;\r\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\r\n            native.pdfSettings.margins.right = bottom;\r\n            native.pdfSettings.orientation = orientation;\r\n            this.props.updateNative(native);\r\n        }\r\n    }\r\n\r\n    renderPageSize(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('sizes')}\r\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControl className={clsx(this.props.classes.fieldWide, this.props.classes.orientation)}>\r\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                    <Select\r\n                        disabled={this.state.pdfInGeneration}\r\n                        value={settings.orientation || 'portrait'}\r\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\r\n                    >\r\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Width')}\r\n                    value={settings.pageWidth}\r\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Height')}\r\n                    value={settings.pageHeight}\r\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for first page')}\r\n                    value={settings.paddingTopFirst}\r\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for other pages')}\r\n                    value={settings.paddingTop}\r\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Padding left')}\r\n                    value={settings.paddingLeft}\r\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={clsx(this.props.classes.titleText)}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                    helperText={I18n.t('You can add time with {{YYYY MM DD}}')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                    <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Time format description')}\r\n                </Button>\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={clsx(this.props.classes.field, this.props.classes.fontSize)}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 408, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 400, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    key=\"pdfButton\"\r\n                    control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                    label={I18n.t('Show PDF generate button on list')}\r\n                />\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton onClick={() => this.onExpand(false)} title={I18n.t('Collapse all')} disabled={!this.state.expanded.length}><ExpandLessIcon /></IconButton>\r\n                <IconButton onClick={() => this.onExpand(true)} title={I18n.t('Expand all')} disabled={this.state.expanded.length === 10}><ExpandMoreIcon /></IconButton>\r\n            </Grid>\r\n            {this.renderPageSize(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={'/files/eventlist/report.pdf?q=' + this.state.random} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    updateNative: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n        this.isWeb = false;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n\r\n        Object.keys(native.pdfSettings).forEach(attr => {\r\n            if (attr.toLowerCase().includes('color')) {\r\n                if (typeof native.pdfSettings[attr] === 'object') {\r\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\r\n                }\r\n                if (native.pdfSettings[attr].startsWith('rgb')) {\r\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\r\n                }\r\n            }\r\n        });\r\n\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    updateNative(native, cb) {\r\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n        this.setState({native, changed}, cb);\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => Router.doNavigate(e.target.parentNode.dataset.name)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            imagePrefix={this.isWeb ? './' : '../../files/'}\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}