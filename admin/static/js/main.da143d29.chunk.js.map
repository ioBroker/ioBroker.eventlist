{"version":3,"sources":["Components/assets/no_icon.svg","assets/telegram.svg","assets/pushover.svg","Components/assets/lamp_table.svg","Components/assets/lamp_ceiling.svg","Components/ColorPicker.js","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","Components/Image.js","Components/IconPicker.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ColorPicker","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","onChange","getColor","divRef","React","createRef","this","style","openAbove","top","Object","assign","position","className","ref","TextField","disabled","id","width","label","name","value","margin","classes","root","textDense","e","target","IconButton","onClick","size","delButton","opacity","cursor","swatch","background","popover","cover","onChangeComplete","isHex","rgb","r","toString","padStart","g","b","a","rgb2hex","m","match","length","parseInt","Component","withStyles","theme","height","borderRadius","marginTop","padding","boxShadow","display","verticalAlign","zIndex","right","bottom","left","marginBottom","MessengerSelect","selected","instances","adapterName","loadedAdapterName","names","loadData","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","map","item","title","common","titleLang","en","_id","split","pop","setTimeout","FormControl","formControl","InputLabel","t","Select","multiple","event","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","i","MenuItem","key","Checkbox","checked","includes","ListItemText","primary","CircularProgress","Options","onAliveChanged","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","aria-label","close","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","maxLength","type","inputProps","min","max","dateFormat","Button","variant","buttonFormat","buttonIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","icons","duration","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","button","card","maxWidth","textAlign","media","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","whiteSpace","AddEventDialog","showTime","ts","parseFloat","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","Image","svg","src","startsWith","created","imgError","showError","getSvgFromData","len","substring","svgContainer","document","createElement","innerHTML","firstElementChild","remove","removeChild","getElementFromSource","atob","inner","svgProps","ret","replace","toUpperCase","serializeAttrs","attributes","dangerouslySetInnerHTML","__html","IconNoIcon","alt","newState","changed","ICONS","icon","IconLampTable","IconLampCeiling","IconPicker","dialogValue","showDialog","selectedTab","Grid","xs","clsx","gridIcon","endsWith","iconSelected","onDoubleClick","onDialogClose","container","justify","grid","renderOneIcon","fetch","response","console","warn","find","fetchIcon","valueSvg","btoa","dialogInitialValue","Tabs","Tab","renderPredefinedIcons","div","imagePreviewDiv","imagePreview","InputProps","endAdornment","undefined","textFieldWithButton","selectButton","getIdFromSrc","renderDialog","lineHeight","palette","dark","main","light","AddIdDialog","onStateChanged","unit","eventDefault","alarmsOnly","defaultMessengers","messagesInAlarmsOnly","whatsAppCMB","pushover","telegram","states","changesOnly","showSelectId","unknownId","simulateState","exists","confirmExit","confirmRemove","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","trueState","original","falseState","newVal","defText","defColor","defIcon","Array","nState","forEach","objStates","parseStates","keys","attr","_st","obj","Promise","resolve","getObject","parts","readTypeTimer","clearTimeout","getName","custom","newSettings","addBooleanStates","addNumericStates","readIconAndColor","result","ownIcon","ownColor","getSettings","catch","subscribe","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","word","lang","translations","w","stateVal","defaultBooleanIconTrue","defaultBooleanIconFalse","eventTemplate","valWithUnit","time","format","valText","getExampleText","duration2text","settings","enabled","it","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","ok","cancel","isYes","removeSettings","isBoolean","flex","Paper","paper","count","messengers","Telegram","messengersIcon","whatsAppIcon","Pushover","exampleColor","getExampleColor","field","error","examplePaper","exampleTitle","exampleText","getExampleIcon","exampleIcon","buildExample","Switch","renderStateSettings","renderState","renderMessengers","writeSettings","renderSelectId","renderConfirmExit","renderConfirmRemove","withWidth","marginLeft","flexGrow","SelectStateDialog","ids","reading","filter","promises","readIds","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","getSelectIdIcon","ListItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","searchedValue","dialogContent","dense","renderListItem","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","stateId","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","showEditButton","location","Router","getLocation","showDeleteConfirm","showSelectState","dialog","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","cell","component","tdIcons","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","pathname","now","focus","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","doNavigate","toolbarButton","Fab","buttonAddState","toolbarButtonText","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","LinearProgress","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","border","clip","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","textColor","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","PdfSettings","random","triggerTimer","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","fieldWide","toggleOrientation","onFocus","md","lg","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","RGB2hex","savedNative","AppBar","getSelectedTab","parentNode","dataset","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","getThemeName","log","version","host","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da143d29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_icon.e1916869.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.629c958a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pushover.e000ae58.svg\";","module.exports = __webpack_public_path__ + \"static/media/lamp_table.68480ce1.svg\";","module.exports = __webpack_public_path__ + \"static/media/lamp_ceiling.47b96a91.svg\";","/**\r\n * Copyright 2018-2020 bluefox <dogafox@gmail.com>\r\n *\r\n * Licensed under the Creative Commons Attribution-NonCommercial License, Version 4.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://creativecommons.org/licenses/by-nc/4.0/legalcode.txt\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n **/\r\nimport React from 'react';\r\nimport {ChromePicker} from 'react-color';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {MdDelete as IconDelete} from 'react-icons/md';\r\n\r\nconst styles = theme => ({\r\n    color: {\r\n        width: 36,\r\n        height: 14,\r\n        borderRadius: 2,\r\n    },\r\n    delButton: {\r\n        //width: 32,\r\n        //height: 32,\r\n        marginTop: 16,\r\n    },\r\n    swatch: {\r\n        marginTop: 16,\r\n        padding: 5,\r\n        background: '#fff',\r\n        borderRadius: 1,\r\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n        display: 'inline-block',\r\n        cursor: 'pointer',\r\n        verticalAlign: 'middle'\r\n    },\r\n    popover: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n    },\r\n    cover: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    }\r\n});\r\n\r\nclass ColorPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            color: this.props.color,\r\n        };\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const pColor = ColorPicker.getColor(props.color);\r\n        const sColor = ColorPicker.getColor(state.color);\r\n        if (pColor !== sColor) {\r\n            return {color: props.color}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({displayColorPicker: !this.state.displayColorPicker});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({displayColorPicker: false});\r\n    };\r\n\r\n    static getColor(color, isHex) {\r\n        if (color && typeof color === 'object') {\r\n            if (color.rgb) {\r\n                if (isHex) {\r\n                    return '#' + color.rgb.r.toString(16).padStart(2, '0') + color.rgb.g.toString(16).padStart(2, '0') + color.rgb.b.toString(16).padStart(2, '0');\r\n                } else {\r\n                    return 'rgba(' + color.rgb.r + ',' + color.rgb.g + ',' + color.rgb.b + ',' + color.rgb.a + ')';\r\n                }\r\n            } else {\r\n                if (isHex) {\r\n                    return '#' + color.r.toString(16).padStart(2, '0') + color.g.toString(16).padStart(2, '0') + color.b.toString(16).padStart(2, '0');\r\n                } else {\r\n                    return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\r\n                }\r\n            }\r\n        } else {\r\n            return isHex ? ColorPicker.rgb2hex(color || '') : color || '';\r\n        }\r\n    }\r\n\r\n    static rgb2hex(rgb){\r\n        const m = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n\r\n        return m && m.length === 4 ? '#' +\r\n            parseInt(m[1],10).toString(16).padStart(2, '0') +\r\n            parseInt(m[2],10).toString(16).padStart(2, '0') +\r\n            parseInt(m[3],10).toString(16).padStart(2, '0') : rgb;\r\n    }\r\n\r\n    handleChange = color => {\r\n        this.setState({color});\r\n        this.props.onChange && this.props.onChange(ColorPicker.getColor(color));\r\n    };\r\n\r\n    render() {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        let style = {};\r\n        if (this.state.displayColorPicker && this.props.openAbove) {\r\n            style = {\r\n                top: -241,\r\n            }\r\n        }\r\n        return <div\r\n            style={Object.assign({}, this.props.style || {}, {position: 'relative'})}\r\n            className={ this.props.className || ''}\r\n            ref={this.divRef}\r\n        >\r\n            <TextField\r\n                disabled={this.props.disabled}\r\n                id=\"name\"\r\n                style={{width: 'calc(100% - 80px)'}}\r\n                label={this.props.name || 'color'}\r\n                value={color}\r\n                margin=\"dense\"\r\n                classes={{root: this.props.classes.textDense}}\r\n                onChange={e => this.handleChange(e.target.value)}\r\n            />\r\n            <IconButton\r\n                disabled={this.props.disabled}\r\n                onClick={() => this.handleChange('')}\r\n                size=\"small\"\r\n                className={this.props.classes.delButton}\r\n                style={color ? {} : {opacity: 0, cursor: 'default'}}\r\n            ><IconDelete/></IconButton>\r\n            <div className={this.props.classes.swatch} onClick={() => this.handleClick()}>\r\n                <div className={this.props.classes.color}\r\n                     style={{background: color}} />\r\n            </div>\r\n            { this.state.displayColorPicker && !this.props.disabled ? <div className={this.props.classes.popover} style={style}>\r\n                <div className={this.props.classes.cover} onClick={() => this.handleClose()}/>\r\n                <ChromePicker color={ this.state.color } onChangeComplete={color => this.handleChange(color)} />\r\n            </div> : null }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nColorPicker.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    color: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    openAbove: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles)(ColorPicker);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport {MdClose as IconClose} from 'react-icons/md';\nimport {MdHelp as IconHelp} from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport ColorPicker from '../Components/ColorPicker';\nimport MessengerSelect from  '../Components/MessengerSelect';\n//import IconPicker from '../Components/IconPicker';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    input: {\n        minWidth: 300,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    inputMessengers: {\n        minWidth: 200,\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    card: {\n        maxWidth: 345,\n        textAlign: 'center'\n    },\n    media: {\n        height: 180,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnLogo: {\n        width: 350,\n        marginRight: 0\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    cannotUse: {\n        color: 'red',\n        fontWeight: 'bold',\n    },\n    hintUnsaved: {\n        fontSize: 12,\n        color: 'red',\n        fontStyle: 'italic',\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(2),\n    },\n    buttonFormat: {\n        marginTop: 20,\n    },\n    checkBoxLabel: {\n        whiteSpace: 'nowrap'\n    },\n    heading: {\n        fontWeight: 'bold',\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\n        try {\n            expanded = JSON.parse(expanded);\n        } catch (e) {\n            expanded = [];\n        }\n\n        this.state = {\n            inAction: false,\n            toast: '',\n            isInstanceAlive: false,\n            errorWithPercent: false,\n            expanded,\n        };\n\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\n\n        this.props.socket.getState(this.aliveId).then(state =>\n            this.setState({isInstanceAlive: state && state.val}));\n    }\n\n    componentDidMount() {\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    componentWillUnmount() {\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\n    }\n\n    onAliveChanged = (id, state) => {\n        if (id === this.aliveId) {\n            this.setState({isInstanceAlive: state && state.val});\n        }\n    };\n\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    onToggle(id) {\n        const expanded = [...this.state.expanded];\n        const pos = expanded.indexOf(id);\n        if (pos !== -1)  {\n            expanded.splice(pos, 1);\n        } else {\n            expanded.push(id);\n            expanded.sort();\n        }\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\n        this.setState({expanded});\n    }\n\n    render() {\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\n        return <form className={ this.props.classes.tab }>\n            <Logo\n                instance={ this.props.instance }\n                common={ this.props.common }\n                native={ this.props.native }\n                onError={ text => this.setState({errorText: text}) }\n                onLoad={ this.props.onLoad }\n            />\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\n                <TextField\n                    label={ I18n.t('Max list length') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.maxLength }\n                    type=\"number\"\n                    inputProps={{min: 1, max: 1000}}\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\n                    margin=\"normal\"\n                />\n                <br/>\n                <TextField\n                    label={ I18n.t('Date format') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.dateFormat }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\n                    margin=\"normal\"\n                />\n                <Button\n                    variant=\"contained\"\n                    className={this.props.classes.buttonFormat}\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\n                        <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Format description')}\n                </Button>\n                <br/>\n                <TextField\n                    label={ I18n.t('Show absolute time after seconds') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.relativeTime }\n                    type=\"number\"\n                    inputProps={{min: 0, max: 140000}}\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\n                    margin=\"normal\"\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\n                    label={I18n.t('Show icons in the list')}\n                />\n                {narrowWidth && <br/>}\n                <FormControlLabel\n                    classes={{label: this.props.classes.checkBoxLabel}}\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\n                    label={I18n.t('Show duration in the list')}\n                />\n                <Accordion\n                    expanded={this.state.expanded.includes('state_boolean')}\n                    onChange={() => this.onToggle('state_boolean')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <TextField\n                            label={ I18n.t('Default event text for boolean') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanText }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\n                            margin=\"normal\"\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                        />\n                        <br/>\n                        <TextField\n                            label={ I18n.t('Default text by TRUE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextTrue }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        {narrowWidth && <br/>}\n                        <TextField\n                            label={ I18n.t('Default text by FALSE') }\n                            className={ this.props.classes.input }\n                            value={ this.props.native.defaultBooleanTextFalse }\n                            type=\"text\"\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\n                            margin=\"normal\"\n                        />\n                        <br/>\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorTrue}\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\n                            name={I18n.t('Default color by TRUE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\n                        />\n                        {narrowWidth && <br/>}\n                        <ColorPicker\n                            className={ this.props.classes.input }\n                            color={this.props.native.defaultBooleanColorFalse}\n                            style={{width: 300, display: 'inline-block'}}\n                            name={I18n.t('Default color by FALSE')}\n                            openAbove={true}\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n\n                <TextField\n                    label={ I18n.t('Default event text for non boolean states') }\n                    className={ this.props.classes.input }\n                    value={ this.props.native.defaultNonBooleanText }\n                    type=\"text\"\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\n                    margin=\"normal\"\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\n                />\n                <br/>\n                <FormControl className={this.props.classes.input}>\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\n                    <Select\n                        value={this.props.native.language || 'system'}\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\n                    >\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\n                        <MenuItem value=\"en\">English</MenuItem>\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\n                        <MenuItem value=\"ru\">русский</MenuItem>\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\n                        <MenuItem value=\"fr\">français</MenuItem>\n                        <MenuItem value=\"it\">Italiano</MenuItem>\n                        <MenuItem value=\"es\">Espanol</MenuItem>\n                        <MenuItem value=\"pl\">Polski</MenuItem>\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\n                    </Select>\n                </FormControl>\n                <Accordion\n                    expanded={this.state.expanded.includes('state_messengers')}\n                    onChange={() => this.onToggle('state_messengers')}\n                >\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails style={{display: 'block'}}>\n                        <MessengerSelect\n                            label={ I18n.t('Telegram') }\n                            adapterName={'telegram'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultTelegram }\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('WhatsApp-CMB') }\n                            adapterName={'whatsapp-cmb'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultWhatsAppCMB }\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\n                            socket={this.props.socket}\n                        />\n                        {narrowWidth && <br/>}\n                        <MessengerSelect\n                            label={ I18n.t('Pushover') }\n                            adapterName={'pushover'}\n                            className={ this.props.classes.inputMessengers }\n                            selected={ this.props.native.defaultPushover }\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\n                            socket={this.props.socket}\n                        />\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n            { this.renderToast() }\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Options);\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React from 'react';\r\n\r\nimport IconNoIcon from './assets/no_icon.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction getElementFromSource(src) {\r\n    const svgContainer = document.createElement('div');\r\n    svgContainer.innerHTML = src;\r\n    const svg = svgContainer.firstElementChild;\r\n    if (svg.remove) {\r\n        svg.remove();\r\n    } else {\r\n        svgContainer.removeChild(svg);\r\n    }\r\n    svgContainer.remove();\r\n    return svg;\r\n}\r\n\r\nfunction serializeAttrs(map) {\r\n    const ret = {};\r\n    for (let prop, i = 0; i < map.length; i++) {\r\n        const key = map[i].name;\r\n        if (key === 'class') {\r\n            prop = 'className';\r\n        }\r\n        else if (!key.startsWith('data-')) {\r\n            prop = key.replace(/[-|:]([a-z])/g, g => g[1].toUpperCase());\r\n        } else {\r\n            prop = key;\r\n        }\r\n\r\n        ret[prop] = map[i].value;\r\n    }\r\n    return ret;\r\n}\r\n\r\nclass Image extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            svg: !!(this.props.src && this.props.src.startsWith('data:')),\r\n            created: true,\r\n            color: this.props.color || '',\r\n            src: this.props.src || '',\r\n            imgError: false,\r\n            showError: this.props.showError,\r\n        };\r\n\r\n        this.svg = this.state.svg ? this.getSvgFromData(this.state.src) : null;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n\r\n        if (props && state && props.src !== state.src) {\r\n            newState.src = props.src;\r\n            newState.svg = props.src && props.src.startsWith('data:');\r\n            newState.created = false;\r\n            changed = true;\r\n        }\r\n\r\n        if (props && state && props.color !== state.color) {\r\n            newState.color = props.color;\r\n            changed = true;\r\n        }\r\n        if (props && state && props.showError !== state.showError) {\r\n            newState.showError = props.showError;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }\r\n\r\n    getSvgFromData(src) {\r\n        const len = 'data:image/svg+xml;base64, ';\r\n        if (!src.startsWith(len)) {\r\n            return null;\r\n        }\r\n        src = src.substring(len.length);\r\n        try {\r\n            src = atob(src);\r\n            const svg = getElementFromSource(src);\r\n            const inner = svg.innerHTML;\r\n            const svgProps = serializeAttrs(svg.attributes || []);\r\n\r\n            svg.remove();\r\n\r\n            return <svg\r\n                className={this.props.className}\r\n                style={this.state.color ? {color: this.state.color} : {}}\r\n                {...svgProps}\r\n                dangerouslySetInnerHTML={{ __html: inner }}\r\n            />;\r\n        } catch (e) {\r\n\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.svg) {\r\n            if (!this.state.created) {\r\n                setTimeout(() => {\r\n                    this.svg = this.getSvgFromData(this.state.src);\r\n                    this.setState({created: true});\r\n                }, 50);\r\n            }\r\n\r\n            return this.svg\r\n        } else if (this.state.src) {\r\n            return <img\r\n                className={this.props.className}\r\n                src={this.state.imgError ? IconNoIcon : this.state.src || IconNoIcon}\r\n                alt=\"\"\r\n                onError={() => this.props.showError ? this.setState({imgError: true}) : this.setState({src: ''})}\r\n            />;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nImage.propTypes = {\r\n    color: PropTypes.string,\r\n    src: PropTypes.string,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default Image;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ClearIcon from '@material-ui/icons/Close';\r\nimport CancelIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SelectIcon from '@material-ui/icons/ViewModule';\r\n\r\nimport Image from './Image';\r\n\r\nimport IconLampTable from './assets/lamp_table.svg';\r\nimport IconLampCeiling from './assets/lamp_ceiling.svg';\r\n\r\nconst ICONS = [\r\n    {icon: IconLampTable, color: '#FFFFFF', name: 'Table lamp'},\r\n    {icon: IconLampCeiling, color: '#FFFFFF', name: 'Ceiling lamp'},\r\n];\r\n\r\nconst styles = theme => ({\r\n    div: {\r\n        width: 300,\r\n        lineHeight: '48px',\r\n    },\r\n    textField: {\r\n\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 102px)',\r\n        verticalAlign: 'bottom'\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        height: 32,\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.type === 'dark' ? '#FFF' : '#000'\r\n    },\r\n    grid: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    gridIcon: {\r\n        '&:hover': {\r\n            background: theme.palette.primary.dark,\r\n        },\r\n        textAlign: 'center',\r\n    },\r\n    selectButton: {\r\n        verticalAlign: 'bottom'\r\n    },\r\n    iconSelected: {\r\n        background: theme.palette.primary.main,\r\n        '&:hover': {\r\n            background: theme.palette.primary.light,\r\n        }\r\n    },\r\n    imagePreviewDiv: {\r\n        display: 'inline-block',\r\n        marginRight: theme.spacing(1),\r\n        verticalAlign: 'bottom',\r\n    },\r\n    imagePreview: {\r\n        width: 32,\r\n        height: 32,\r\n        color: theme.palette.type === 'dark' ? '#FFF' : '#000',\r\n    }\r\n});\r\n\r\nclass IconPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: this.props.color || '',\r\n            value: this.props.value || '',\r\n            dialogValue: '',\r\n            showDialog: false,\r\n            selectedTab: 0,\r\n            imgError: false,\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n\r\n        if (props && state && props.value !== state.value) {\r\n            newState.value = props.value;\r\n            changed = true;\r\n        }\r\n\r\n        if (props && state && props.color !== state.color) {\r\n            newState.color = props.color;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }\r\n\r\n    renderOneIcon(item, i) {\r\n        return <Grid\r\n             item\r\n             xs\r\n             key={item.name || i}\r\n             className={clsx(this.props.classes.gridIcon, this.state.dialogValue && this.state.dialogValue.startsWith('preset:') && this.state.dialogValue.endsWith(item.name) && this.props.classes.iconSelected)}\r\n             onClick={e => this.setState({dialogValue: 'preset:' + item.name})}\r\n             onDoubleClick={e => this.setState({dialogValue: 'preset:' + item.name}, () => this.onDialogClose(this.state.dialogValue))}\r\n        >\r\n            <img className={this.props.classes.icon} src={item.icon} alt={item.name} style={item.color ? {color: item.color} : {}}/>\r\n        </Grid>;\r\n    }\r\n\r\n    renderPredefinedIcons() {\r\n        return <Grid container spacing={2} justify=\"center\" className={this.props.classes.grid}>{\r\n            ICONS.map((item, i) => this.renderOneIcon(item, i))\r\n        }</Grid>;\r\n    }\r\n\r\n    fetchIcon(src) {\r\n        return fetch(src)\r\n            .then(response => response.text())\r\n    }\r\n\r\n    getIdFromSrc(svg) {\r\n        const len = 'data:image/svg+xml;base64, ';\r\n        if (!svg || !svg.startsWith(len)) {\r\n            return null;\r\n        }\r\n        svg = svg.substring(len.length);\r\n        try {\r\n            svg = atob(svg);\r\n            const m = svg.match(/<svg id=\"([^\"]+)\"/);\r\n            return m ? m[1] : null;\r\n        } catch (e) {\r\n            console.warn('Cannot decode ' + svg);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onDialogClose(value) {\r\n        if (value) {\r\n            if (value.startsWith('preset:')) {\r\n                value = value.substring(7);\r\n                const item = ICONS.find(item => item.name === value);\r\n                if (item) {\r\n                    //fetch icon\r\n                    this.fetchIcon(item.icon)\r\n                        .then(svg => {\r\n                            svg = svg.replace('<svg ', '<svg id=\"' + value + '\" ');\r\n                            const valueSvg = 'data:image/svg+xml;base64, ' + window.btoa(svg);\r\n                            this.setState({value: valueSvg, showDialog: false, imgError: false, dialogValue: '', dialogInitialValue: ''}, () => {\r\n                                this.props.onChange(valueSvg);\r\n                            });\r\n                        });\r\n                } else {\r\n                    this.setState({value: '', showDialog: false, imgError: false, dialogValue: '', dialogInitialValue: ''}, () =>\r\n                        this.props.onChange(''));\r\n                }\r\n            }\r\n        } else {\r\n            this.setState({showDialog: false});\r\n        }\r\n    }\r\n\r\n    renderDialog() {\r\n        if (!this.state.showDialog) {\r\n            return null;\r\n        }\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth\r\n            maxWidth=\"lg\"\r\n            onClose={() => this.setState({showDialog: false})}\r\n        >\r\n            <DialogTitle>{I18n.t('Select icon...')}</DialogTitle>\r\n            <DialogContent>\r\n                <Tabs value={this.state.selectedTab} onChange={(e, selectedTab) => this.setState({selectedTab})}>\r\n                    <Tab label={I18n.t('Predefined')} />\r\n                    <Tab label={I18n.t('User defined')} />\r\n                </Tabs>\r\n                {this.state.selectedTab === 0 && <div>\r\n                    {this.renderPredefinedIcons()}\r\n                </div>}\r\n                {this.state.selectedTab === 1 && <div>\r\n                </div>}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.onDialogClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}</Button>\r\n                <Button onClick={() => this.onDialogClose(this.state.dialogValue)}\r\n                        color=\"primary\"\r\n                        disabled={!this.state.dialogValue || this.state.dialogInitialValue === this.state.dialogValue}\r\n                        autoFocus\r\n                >\r\n                    <CheckIcon className={this.props.classes.buttonIcon}/>{I18n.t('Select')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    }\r\n\r\n    render() {\r\n        return <div\r\n            style={this.props.style || {}}\r\n            className={ clsx(this.props.classes.div, this.props.className)}\r\n        >\r\n            <div className={this.props.classes.imagePreviewDiv}>\r\n                <Image\r\n                    showError={true}\r\n                    color={this.state.color}\r\n                    className={this.props.classes.imagePreview}\r\n                    src={this.state.value}\r\n                    alt=\"preview\"\r\n                />\r\n            </div>\r\n            <TextField\r\n                margin=\"dense\"\r\n                label={this.props.label || I18n.t('Icon')}\r\n                value={this.state.value}\r\n                onChange={e => this.setState({value: e.target.value, imgError: false}, () => this.props.onChange(this.state.value))}\r\n                type=\"text\"\r\n                InputProps={{\r\n                    endAdornment: this.state.value ? (\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                this.setState({value: '', imgError: false}, () => this.props.onChange(''));\r\n                            }}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                className={this.props.classes.textFieldWithButton}\r\n            />\r\n            <IconButton\r\n                className={this.props.classes.selectButton}\r\n                onClick={() => {\r\n                let id = this.getIdFromSrc(this.state.value);\r\n                if (id) {\r\n                    id = 'preset:' + id;\r\n                } else {\r\n                    id = this.state.value;\r\n                }\r\n                this.setState({showDialog: true, dialogValue: id, dialogInitialValue: id});\r\n            }}>\r\n                <SelectIcon/>\r\n            </IconButton>\r\n            {this.renderDialog()}\r\n        </div>\r\n    }\r\n}\r\n\r\nIconPicker.propTypes = {\r\n    color: PropTypes.string,\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IconPicker);","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\r\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\r\nimport Telegram from '../assets/telegram.svg';\r\nimport Pushover from '../assets/pushover.svg';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport IconPicker from '../Components/IconPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport Image from '../Components/Image';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    flex: {\r\n        flexGrow: 1,\r\n    },\r\n    messengersIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    whatsAppIcon: {\r\n        color: '#45c655'\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\nconst DISABLED_TEXT = '-------------';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n            alarmsOnly: false,\r\n\r\n            defaultMessengers: true,\r\n            messagesInAlarmsOnly: false,\r\n            whatsAppCMB: [],\r\n            pushover: [],\r\n            telegram: [],\r\n\r\n            states: null,\r\n            color: '',\r\n            icon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n            expanded,\r\n\r\n            simulateState: '',\r\n            exists: false,\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n        };\r\n\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings();\r\n                } else {\r\n                    this.setState({showSelectId: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = this.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;\r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readIconAndColor(id, obj) {\r\n        return new Promise(resolve => {\r\n            if (obj) {\r\n                resolve(obj);\r\n            } else {\r\n                return this.props.socket.getObject(id);\r\n            }\r\n        })\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.icon) {\r\n                    return {icon: obj.common.icon, color: obj.common.color};\r\n                } else {\r\n                    const parts = id.split('.');\r\n                    parts.pop();\r\n                    return this.props.socket.getObject(parts.join('.'))\r\n                        .then(obj => {\r\n                            if (obj && obj.type === 'channel') {\r\n                                if (obj.common && obj.common.icon) {\r\n                                    return {icon: obj.common.icon, color: obj.common.color};\r\n                                } else {\r\n                                    const parts = obj._id.split('.');\r\n                                    parts.pop();\r\n                                    return this.props.socket.getObject(parts.join('.'))\r\n                                        .then(obj => {\r\n                                            if (obj && (obj.type === 'channel' || obj.type === 'device')) {\r\n                                                if (obj.common && obj.common.icon) {\r\n                                                    return {icon: obj.common.icon, color: obj.common.color};\r\n                                                } else {\r\n                                                    return null;\r\n                                                }\r\n                                            } else {\r\n                                                return null;\r\n                                            }\r\n                                        });\r\n                                }\r\n                            } else if (obj && obj.type === 'device' && obj.common) {\r\n                                return {icon: obj.common.icon, color: obj.common.color};\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    readSettings(id) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type:        (obj && obj.common && obj.common.type) || '',\r\n                        unknownId:   !obj || !obj.common || !obj.common.type,\r\n                        name:        this.getName(obj),\r\n                        unit:        (obj && obj.common && obj.common.unit) || '',\r\n                        whatsAppCMB: [],\r\n                        pushover:    [],\r\n                        telegram:    [],\r\n                        event:       '',\r\n                        icon:        '',\r\n                        color:       '',\r\n                        alarmsOnly:  false,\r\n                        messagesInAlarmsOnly: false,\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n\r\n                        newState.event        = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n                        newState.icon         = newSettings.icon;\r\n                        newState.color        = newSettings.color;\r\n                        newState.states       = newSettings.states;\r\n                        newState.alarmsOnly   = newSettings.alarmsOnly;\r\n                        newState.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                        newState.whatsAppCMB  = newSettings.whatsAppCMB || [];\r\n                        newState.pushover     = newSettings.pushover || [];\r\n                        newState.telegram     = newSettings.telegram || [];\r\n                        newState.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    } else {\r\n                        newState.defaultMessengers = true;\r\n                        newState.whatsAppCMB = this.props.native.defaultWhatsAppCMB || [];\r\n                        newState.pushover    = this.props.native.defaultPushover    || [];\r\n                        newState.telegram    = this.props.native.defaultTelegram    || [];\r\n\r\n                        newState.exists = false;\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    }\r\n\r\n                    return this.readIconAndColor(id, obj)\r\n                        .then(result => {\r\n                            if (result && result.icon) {\r\n                                // we must get from /icons/113_hmip-psm_thumb.png => /adapter/hm-rpc/icons/113_hmip-psm_thumb.png\r\n                                // or                                                  /hm-rpc.admin/icons/113_hmip-psm_thumb.png\r\n                                newState.ownIcon = `/adapter/${id.split('.')[0]}${result.icon}`;\r\n                            }\r\n                            if (result && result.color) {\r\n                                newState.ownColor = result.color;\r\n                            }\r\n                            this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                        });\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: ''}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = this.state.ownColor || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.color && ColorPicker.getColor(this.state.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.icon || this.state.ownIcon;\r\n        let icon = defIcon || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defIcon) {\r\n                icon = (stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse) || this.state.ownIcon || '';\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.type === 'boolean' ? false : null);\r\n        if (this.state.states) {\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.disabled) {\r\n                return DISABLED_TEXT;\r\n            }\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (valText === DISABLED_TEXT) {\r\n            return I18n.t('DISABLED');\r\n        }\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n            if (this.state.states) {\r\n                if (!this.state.eventDefault && !this.state.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly,\r\n            defaultMessengers: !!this.state.defaultMessengers\r\n        };\r\n        if (this.state.color && ColorPicker.getColor(this.state.color)) {\r\n            settings.color = ColorPicker.getColor(this.state.color);\r\n        }\r\n        if (this.state.icon) {\r\n            settings.icon = this.state.icon;\r\n        }\r\n        if (this.state.alarmsOnly) {\r\n            settings.alarmsOnly = true;\r\n        }\r\n        if (this.state.messagesInAlarmsOnly) {\r\n            settings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (this.state.pushover && this.state.pushover.length && !this.state.defaultMessengers) {\r\n            settings.pushover = this.state.pushover;\r\n        }\r\n        if (this.state.telegram && this.state.telegram.length && !this.state.defaultMessengers) {\r\n            settings.telegram = this.state.telegram;\r\n        }\r\n        if (this.state.whatsAppCMB && this.state.whatsAppCMB.length && !this.state.defaultMessengers) {\r\n            settings.whatsAppCMB = this.state.whatsAppCMB;\r\n        }\r\n\r\n        this.state.states && this.state.states.forEach(item => {\r\n            settings.states = settings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.disabled)  {\r\n                it.disabled = true;\r\n                return;\r\n            }\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            settings.states.push(it);\r\n        });\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\r\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</span></Typography>\r\n                <div className={this.props.classes.flex}/>\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={!!state.disabled}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].disabled = e.target.checked;\r\n                            this.setState({states});\r\n                        }} />\r\n                    }\r\n                    label={I18n.t('Disable logging')}\r\n                />\r\n            </AccordionSummary>\r\n            {!state.disabled && <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].color = color;\r\n                                this.setState({states});\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        color={color}\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={icon => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].icon = icon;\r\n                            this.setState({states});\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        const text = this.state.eventDefault ? (this.state.type === 'boolean' ? this.props.native.defaultBooleanText : this.props.native.defaultNonBooleanText) : this.state.event || I18n.t('Use the specific state texts');\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}\r\n                    {!narrowWidth ? <span style={{color: color || undefined, fontStyle: 'italic'}}>{' - ' + text}</span> : null}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox\r\n                            checked={this.state.eventDefault}\r\n                            onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                        }\r\n                        label={<span>\r\n                            <span>{I18n.t('Default text')}</span>\r\n                        </span>}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.eventDefault ? <TextField\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.event}\r\n                        onChange={e => this.setState({event: e.target.value})}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={ this.state.type === 'number' ?\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\r\n                            :\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        color={this.state.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setState({color})}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        color={this.state.color}\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.icon}\r\n                        onChange={icon => this.setState({icon: icon})}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const count = (this.state.telegram ? this.state.telegram.length : 0) +\r\n            (this.state.whatsAppCMB ? this.state.whatsAppCMB.length : 0) +\r\n            (this.state.pushover ? this.state.pushover.length : 0);\r\n\r\n        const messengers = [\r\n            this.state.telegram    && this.state.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.telegram.join(', ')    + ')'}</span>] : null,\r\n            this.state.whatsAppCMB && this.state.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.whatsAppCMB.join(', ') + ')'}</span>] : null,\r\n            this.state.pushover    && this.state.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.pushover.join(', ')    + ')'}</span>] : null,\r\n        ];\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\r\n                    {messengers}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        disabled={this.state.alarmsOnly}\r\n                        checked={this.state.messagesInAlarmsOnly || this.state.alarmsOnly}\r\n                        onChange={e => this.setState({messagesInAlarmsOnly: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={this.state.defaultMessengers}\r\n                        onChange={e => this.setState({defaultMessengers: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({telegram: value})}\r\n                    selected={ this.state.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({whatsAppCMB: value})}\r\n                    selected={ this.state.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({pushover: value})}\r\n                    selected={ this.state.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        let val = '';\r\n        if (this.state.state && this.state.state.val) {\r\n            if (this.state.state.val === null || this.state.state.val === undefined) {\r\n                val = ' - --';\r\n            } else {\r\n                val = ' - ' + this.state.state.val.toString();\r\n            }\r\n        }\r\n\r\n        const changed = !this.state.exists || JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings());\r\n        const exampleColor = this.getExampleColor() || undefined;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: exampleColor}}>\r\n                            {this.props.native.icons ? <Image src={this.getExampleIcon()} className={this.props.classes.exampleIcon} color={exampleColor}/>: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={!!this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                        {this.state.type === 'number' && this.state.states ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControl className={this.props.classes.formControl}>\r\n                                    <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                    <Select\r\n                                        value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                    >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\r\n                                    {this.state.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                                </FormControl>\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <>\r\n                        <br/>\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={!!this.state.alarmsOnly}\r\n                                onChange={e => this.setState({alarmsOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only in alarm state')}\r\n                        />\r\n                    </> : null}\r\n                {this.state.id     ? this.renderStateSettings() : null }\r\n                {this.state.states ? this.state.states.map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n                {this.state.id     ? this.renderMessengers(narrowWidth) : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{!changed ? I18n.t('Close') : I18n.t('Cancel')}</Button>\r\n                {this.state.exists ? <Button\r\n                    disabled={!this.state.id || !this.state.type}\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || !changed}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.8,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <ListItemIcon><AddIcon /></ListItemIcon>\r\n                        <ListItemText primary={I18n.t('Add new state')} classes={{primary: this.props.classes.newState}}/>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport Image from '../Components/Image';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    buttonAddState: {\r\n        minWidth: '120px !important',\r\n    },\r\n    icon: {\r\n        width: 28,\r\n        height: 28,\r\n        verticalAlign: 'middle',\r\n    }\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        const location = Router.getLocation();\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showSelectState: location.dialog === 'selectState',\r\n            showAddIdDialog: location.dialog === 'addId' ? location.id || true : false,\r\n            showAddEventDialog: location.dialog === 'addEvent',\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'icon'},\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {this.headCells.map(cell =>\r\n                    cell.id === 'icon' ?  (\r\n                            this.props.native.icons ? <TableCell\r\n                                key={cell.id}\r\n                                component=\"th\"\r\n                                className={this.props.classes.tdIcons}\r\n                                align=\"left\"\r\n                                padding=\"none\"\r\n                            /> : null\r\n                        )\r\n                    :\r\n                    <TableCell\r\n                        key={cell.id}\r\n                        className={this.props.classes['td' + cell.id[0].toUpperCase() + cell.id.substring(1)]}\r\n                        align={cell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === cell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === cell.id}\r\n                            direction={this.state.orderBy === cell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(cell.id)}\r\n                        >\r\n                            {cell.label}\r\n                            {this.state.orderBy === cell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                )}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => {\r\n                                Router.doNavigate(null, 'addId', this.state.selectedId);\r\n                                this.setState({showAddIdDialog: this.state.selectedId})\r\n                            }}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => {\r\n                            Router.doNavigate(null, 'selectState', '');\r\n                            this.setState({showSelectState: true});\r\n                        }}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.showSelectState) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    Router.doNavigate(null, 'addId', id);\r\n                    this.setState({showAddIdDialog: id, showSelectState: false});\r\n                } else {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showSelectState: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n                <Table\r\n                    className={this.props.classes.table}\r\n                    size=\"small\"\r\n                >\r\n                    {this.renderHeader()}\r\n                    <TableBody>\r\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                            .map((row, index) => {\r\n                                const isItemSelected = this.state.selected.includes(row._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return <TableRow\r\n                                    hover\r\n                                    onClick={() => this.handleClick(row._id)}\r\n                                    style={row._style || undefined}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row._id}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                    {this.props.native.icons ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                            {row.icon ? <Image\r\n                                                src={row.icon}\r\n                                                className={this.props.classes.icon}\r\n                                                color={(row._style && row._style.color) || ''}\r\n                                            /> : null}\r\n                                        </TableCell>\r\n                                        : null}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                    {this.props.native.duration ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\r\n                                            {row.duration || ''}</TableCell>\r\n                                        : null}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                                e.stopPropagation();\r\n                                                Router.doNavigate(null, 'addId', row.stateId);\r\n                                                this.setState({showAddIdDialog: row.stateId});\r\n                                            }}><IconEdit/></IconButton>\r\n                                        </Tooltip>: null}\r\n                                    </TableCell>}\r\n                                </TableRow>;\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n                {this.renderToolbar()}\r\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n                {this.renderToast()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderAddEventDialog()}\r\n                {this.renderAddIdDialog()}\r\n                {this.renderSelectState()}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ColorPicker from '../Components/ColorPicker';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fieldWide: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        paddingRight: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    orientation: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fontSize: {\r\n        marginTop: -3,\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    titleText: {\r\n        width: 310,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 105,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list on {{YYYY MM DD H:mm:ss}}',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\r\n                Object.keys(settings).forEach(attr => {\r\n                    if (attr.toLowerCase().includes('color')) {\r\n                        if (typeof settings[attr] === 'object') {\r\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\r\n                        }\r\n                        if (settings[attr].startsWith('rgb')) {\r\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    try {\r\n                                        this.lastElement.focus();\r\n                                    } catch (e) {\r\n\r\n                                    }\r\n\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e && e.target) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        let expanded;\r\n        if (name === true) {\r\n            expanded = ['sizes', 'enabledTitle', 'enabledHeader', 'margins', 'text', 'enabledTime', 'enabledEvent', 'enabledValue', 'enabledDuration', 'pageNumberEnabled'];\r\n        } else if (name === false) {\r\n            expanded = [];\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            if (ex) {\r\n                !expanded.includes(name) && expanded.push(name);\r\n            } else {\r\n                const pos = expanded.indexOf(name);\r\n                pos !== -1 && expanded.splice(pos, 1);\r\n            }\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    toggleOrientation(orientation, e) {\r\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\r\n            const native = JSON.parse(JSON.stringify(this.props.native));\r\n            const pageWidth = native.pdfSettings.pageWidth;\r\n            const top = native.pdfSettings.margins.top;\r\n            const bottom = native.pdfSettings.margins.bottom;\r\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\r\n            native.pdfSettings.pageHeight = pageWidth;\r\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\r\n            native.pdfSettings.margins.left = top;\r\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\r\n            native.pdfSettings.margins.right = bottom;\r\n            native.pdfSettings.orientation = orientation;\r\n            this.props.updateNative(native);\r\n        }\r\n    }\r\n\r\n    renderPageSize(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('sizes')}\r\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControl className={clsx(this.props.classes.fieldWide, this.props.classes.orientation)}>\r\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                    <Select\r\n                        disabled={this.state.pdfInGeneration}\r\n                        value={settings.orientation || 'portrait'}\r\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\r\n                    >\r\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Width')}\r\n                    value={settings.pageWidth}\r\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Height')}\r\n                    value={settings.pageHeight}\r\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for first page')}\r\n                    value={settings.paddingTopFirst}\r\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for other pages')}\r\n                    value={settings.paddingTop}\r\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Padding left')}\r\n                    value={settings.paddingLeft}\r\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={clsx(this.props.classes.titleText)}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                    helperText={I18n.t('You can add time with {{YYYY MM DD}}')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                    <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Time format description')}\r\n                </Button>\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={clsx(this.props.classes.field, this.props.classes.fontSize)}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 408, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 400, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    key=\"pdfButton\"\r\n                    control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                    label={I18n.t('Show PDF generate button on list')}\r\n                />\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton onClick={() => this.onExpand(false)} title={I18n.t('Collapse all')} disabled={!this.state.expanded.length}><ExpandLessIcon /></IconButton>\r\n                <IconButton onClick={() => this.onExpand(true)} title={I18n.t('Expand all')} disabled={this.state.expanded.length === 10}><ExpandMoreIcon /></IconButton>\r\n            </Grid>\r\n            {this.renderPageSize(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={'/files/eventlist/report.pdf?q=' + this.state.random} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    updateNative: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\nimport ColorPicker from './Components/ColorPicker';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n\r\n        Object.keys(native.pdfSettings).forEach(attr => {\r\n            if (attr.toLowerCase().includes('color')) {\r\n                if (typeof native.pdfSettings[attr] === 'object') {\r\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\r\n                }\r\n                if (native.pdfSettings[attr].startsWith('rgb')) {\r\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\r\n                }\r\n            }\r\n        });\r\n\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    updateNative(native, cb) {\r\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n        this.setState({native, changed}, cb);\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => Router.doNavigate(e.target.parentNode.dataset.name)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}