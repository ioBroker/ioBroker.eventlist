{"version":3,"sources":["assets/telegram.svg","assets/pushover.svg","Components/MessengerSelect.js","Tabs/Options.js","Dialogs/AddEvent.js","Dialogs/AddId.js","Dialogs/SelectState.js","Tabs/List.js","Tabs/PdfSettings.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MessengerSelect","props","state","selected","instances","adapterName","loadedAdapterName","names","loadData","this","socket","getAdapterInstances","then","systemLang","I18n","getLanguage","map","item","title","common","titleLang","name","en","setState","_id","split","pop","setTimeout","length","FormControl","className","classes","formControl","style","InputLabel","label","t","Select","multiple","value","onChange","event","target","input","Input","renderValue","join","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","i","MenuItem","key","Checkbox","checked","includes","ListItemText","primary","CircularProgress","React","Component","withStyles","theme","Options","onAliveChanged","id","aliveId","isInstanceAlive","val","expanded","window","localStorage","getItem","JSON","parse","e","inAction","toast","errorWithPercent","instance","getState","subscribeState","unsubscribeState","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","action","IconButton","aria-label","color","close","onClick","pos","indexOf","splice","push","sort","setItem","stringify","narrowWidth","tab","native","onError","text","errorText","onLoad","column","columnSettings","TextField","maxLength","type","inputProps","min","max","margin","dateFormat","Button","variant","buttonFormat","buttonIcon","relativeTime","helperText","FormControlLabel","checkBoxLabel","control","icons","duration","deleteAlarmsByDisable","Accordion","onToggle","AccordionSummary","expandIcon","Typography","heading","AccordionDetails","display","defaultBooleanText","defaultBooleanTextTrue","defaultBooleanTextFalse","defaultBooleanColorTrue","marginRight","openAbove","defaultBooleanColorFalse","defaultNonBooleanText","language","inputMessengers","defaultTelegram","values","defaultWhatsAppCMB","defaultPushover","renderToast","minHeight","minWidth","spacing","marginBottom","button","card","maxWidth","textAlign","media","height","verticalAlign","columnLogo","cannotUse","fontWeight","hintUnsaved","fontSize","fontStyle","marginTop","whiteSpace","AddEventDialog","showTime","ts","parseFloat","toString","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","textField","onKeyUp","keyCode","onOk","fullWidth","Date","toISOString","InputLabelProps","shrink","DialogActions","disabled","AddIdDialog","onStateChanged","unit","eventDefault","alarmsOnly","defaultMessengers","messagesInAlarmsOnly","whatsAppCMB","pushover","telegram","states","icon","changesOnly","showSelectId","unknownId","simulateState","exists","confirmExit","confirmRemove","imagePrefix","moment","locale","textSwitchedOn","translate","textSwitchedOff","textDeviceChangedStatus","namespace","subscribed","originalSettings","getSystemConfig","systemConfig","isFloatComma","readSettings","newState","changed","trueState","find","original","falseState","newVal","defText","defColor","defIcon","Array","nState","forEach","objStates","parseStates","Object","keys","attr","_st","obj","Promise","resolve","getObject","parts","noWait","readTypeTimer","clearTimeout","reading","getName","custom","newSettings","undefined","addBooleanStates","addNumericStates","readIconAndColor","result","ownIcon","ownColor","getSettings","catch","subscribe","statesOnly","showExpertButton","multiSelect","notEditable","dialogName","themeName","themeType","word","lang","translations","w","stateVal","ColorPicker","getColor","defaultBooleanIconTrue","defaultBooleanIconFalse","replace","eventTemplate","valWithUnit","time","format","valText","getExampleText","duration2text","fromNow","settings","enabled","it","ms","withSpaces","Math","round","floor","hours","minutes","seconds","cb","setObject","ok","cancel","isYes","removeSettings","isBoolean","toUpperCase","flex","Paper","paper","root","textDense","width100minus32","count","messengers","src","Telegram","alt","messengersIcon","clsx","whatsAppIcon","Pushover","exampleColor","getExampleColor","field","error","textFieldWithButton","LinearProgress","examplePaper","exampleTitle","exampleText","getExampleIcon","exampleIcon","buildExample","Switch","width100","iconOpenAll","iconCloseAll","renderStateSettings","a","b","renderState","renderMessengers","writeSettings","renderSelectId","renderConfirmExit","renderConfirmRemove","withWidth","background","palette","marginLeft","padding","flexGrow","float","SelectStateDialog","ids","filter","promises","readIds","reject","getRawSocket","emit","startkey","endkey","err","res","rows","Utils","getObjectNameFromObj","toLowerCase","prefix","adapter","aIcon","startsWith","getSelectIdIcon","ListItem","ListItemIcon","emptyIcon","secondary","listPrimary","listSecondary","InputProps","endAdornment","searchedValue","size","dialogContent","dense","renderListItem","opacity","main","List","triggerPDFId","pdfInGeneration","eventListId","eventList","eventRawList","raw","stateId","eventRawListId","onRequestSort","property","isAsc","orderBy","order","editEnabled","editAvailable","showEditButton","location","Router","getLocation","showDeleteConfirm","showSelectState","dialog","showAddIdDialog","showAddEventDialog","selectedId","headCells","align","aliveState","rawState","readStatus","TableHead","TableRow","TableCell","indeterminate","n","cell","component","tdIcons","substring","sortDirection","TableSortLabel","active","direction","visuallyHidden","tdDuration","tdID","tdEdit","sendTo","pdfSettings","myWindow","pathname","now","focus","Toolbar","toolbarRoot","toolbarHighlight","toolbarTitle","instanceNotOnline","Tooltip","doNavigate","toolbarButton","Fab","buttonAddState","toolbarButtonText","pdfButton","triggerPdf","array","comparator","stabilizedThis","el","index","descendingComparator","selectedIndex","newSelected","concat","slice","SelectState","TableContainer","tableContainer","Table","table","renderHeader","TableBody","stableSort","getComparator","row","isItemSelected","labelId","hover","handleClick","_style","role","aria-checked","tabIndex","tdTs","scope","tdEvent","tdVal","editButton","stopPropagation","deleteEntries","AddEvent","AddId","tabMargins","renderToolbar","renderList","renderConfirmDialog","renderAddEventDialog","renderAddIdDialog","renderSelectState","overflow","paddingLeft","paddingRight","backgroundColor","lighten","light","dark","border","clip","position","top","lineHeight","SETTINGS","orientation","enabledTime","enabledValue","enabledDuration","widthTime","widthEvent","widthValue","widthDuration","textTime","textEvent","textValue","textDuration","paddingTopFirst","paddingTop","pageWidth","pageHeight","textColor","colorLineOdd","colorLineEven","colorHeaderBackground","colorHeader","fontSizeHeader","enabledHeader","titleColor","titleText","titleFontSize","pageNumberOffsetX","pageNumberOffsetY","pageNumberFontSize","pageNumberColor","pageNumberEnabled","margins","bottom","left","right","PdfSettings","random","triggerTimer","rgb2hex","lastElement","ex","updateNative","onExpand","content","accordionContent","noCheckbox","fieldWide","toggleOrientation","onFocus","assign","Grid","xs","md","lg","container","renderPageSize","renderSettingsTitle","renderPageHeader","renderPageMargins","renderSettingsText","renderSettingsTime","renderSettingsEvent","renderSettingsValue","renderSettingsDuration","renderPageNumbers","iframePdfLandscape","messageText","gridContainer","renderSettings","renderPdfFile","settingsDivLandscape","App","extendedProps","require","bottomButtons","port","isTab","isWeb","socketUrl","selectedTab","RGB2hex","savedNative","AppBar","Tabs","getSelectedTab","parentNode","dataset","Tab","data-name","isIFrame","tabContentIFrame","tabContent","onLoadConfig","updateNativeValue","renderEventList","renderSaveCloseButtons","loaded","default","renderTabsForConfig","renderError","GenericApp","Boolean","hostname","match","getThemeName","console","log","version","host","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16f3c648.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telegram.629c958a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pushover.f4e27e9f.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n\r\n});\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\n\r\nclass MessengerSelect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: this.props.selected || [],\r\n            instances: null,\r\n            adapterName: this.props.adapterName,\r\n            loadedAdapterName: this.props.adapterName,\r\n            names: [],\r\n        };\r\n\r\n        this.loadData(this.state.adapterName);\r\n    }\r\n\r\n    loadData(adapterName) {\r\n        return this.props.socket.getAdapterInstances(adapterName)\r\n            .then(instances => {\r\n                const systemLang = I18n.getLanguage();\r\n                const names = instances.map(item => {\r\n                    const title = (item && item.common && (item.common.titleLang || item.common.title)) || item.common.name;\r\n                    if (typeof title === 'object') {\r\n                        return title[systemLang] || title.en;\r\n                    } else {\r\n                        return title;\r\n                    }\r\n                });\r\n                return this.setState({instances: instances.map(item => item._id.split('.').pop()), names, loadedAdapterName: adapterName});\r\n            });\r\n    }\r\n\r\n    /*static getDerivedStateFromProps(props, state) {\r\n        const newState = {};\r\n        let changed = false;\r\n        if (props.selected && JSON.stringify(props.selected) !== JSON.stringify(state.selected)) {\r\n            newState.selected = props.selected ? JSON.parse(JSON.stringify(props.selected)) : [];\r\n            changed = true;\r\n        }\r\n        if (props.adapterName && props.adapterName !== state.adapterName) {\r\n            newState.adapterName = props.adapterName;\r\n            changed = true;\r\n        }\r\n\r\n        return changed ? newState : null;\r\n    }*/\r\n\r\n\r\n    render() {\r\n        if (this.state.loadedAdapterName !== this.state.adapterName) {\r\n            setTimeout(() => this.loadData(this.state.adapterName), 100);\r\n        }\r\n\r\n        if (this.state.instances && !this.state.instances.length) {\r\n            return null;\r\n        }\r\n\r\n        return <FormControl className={(this.props.classes.formControl || '') + ' ' + this.props.className} style={this.props.style || {}}>\r\n            {!this.state.instances ?\r\n                <CircularProgress/> :\r\n                <>\r\n                    <InputLabel>{this.props.label || I18n.t('Send to messenger')}</InputLabel>\r\n                    <Select\r\n                        multiple\r\n                        value={this.state.selected}\r\n                        onChange={event => {\r\n                            this.setState({selected: event.target.value}, () => this.props.onChange(this.state.selected))\r\n                        }}\r\n                        input={<Input />}\r\n                        renderValue={selected => selected.join(', ')}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n                                    width: 250\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {this.state.instances.map((name, i) =>\r\n                            <MenuItem key={name} value={name}>\r\n                                <Checkbox checked={this.state.selected.includes(name)} />\r\n                                <ListItemText primary={(this.state.names[i] || this.props.adapterName) + '.' + name} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </>}\r\n            </FormControl>;\r\n    }\r\n}\r\n\r\nMessengerSelect.propTypes = {\r\n    selected: PropTypes.array,\r\n    adapterName: PropTypes.string.isRequired, // telegram, whatsapp-cmb, pushover, ...\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MessengerSelect);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Logo from '@iobroker/adapter-react/Components/Logo';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\n\r\nimport MessengerSelect from  '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    input: {\r\n        minWidth: 300,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n        marginBottom: 40,\r\n    },\r\n    card: {\r\n        maxWidth: 345,\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n        height: 180,\r\n    },\r\n    column: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'top',\r\n        marginRight: 20\r\n    },\r\n    columnLogo: {\r\n        width: 350,\r\n        marginRight: 0\r\n    },\r\n    columnSettings: {\r\n        width: 'calc(100% - 10px)',\r\n    },\r\n    cannotUse: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n    },\r\n    hintUnsaved: {\r\n        fontSize: 12,\r\n        color: 'red',\r\n        fontStyle: 'italic',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    checkBoxLabel: {\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    heading: {\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.options.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            inAction: false,\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            errorWithPercent: false,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n\r\n        this.props.socket.getState(this.aliveId).then(state =>\r\n            this.setState({isInstanceAlive: state && state.val}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onAliveChanged);\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onToggle(id) {\r\n        const expanded = [...this.state.expanded];\r\n        const pos = expanded.indexOf(id);\r\n        if (pos !== -1)  {\r\n            expanded.splice(pos, 1);\r\n        } else {\r\n            expanded.push(id);\r\n            expanded.sort();\r\n        }\r\n        window.localStorage.setItem('eventlist.options.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        return <form className={ this.props.classes.tab }>\r\n            <Logo\r\n                instance={ this.props.instance }\r\n                common={ this.props.common }\r\n                native={ this.props.native }\r\n                onError={ text => this.setState({errorText: text}) }\r\n                onLoad={ this.props.onLoad }\r\n            />\r\n            <div className={ this.props.classes.column + ' ' + this.props.classes.columnSettings }>\r\n                <TextField\r\n                    label={ I18n.t('Max list length') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.maxLength }\r\n                    type=\"number\"\r\n                    inputProps={{min: 1, max: 1000}}\r\n                    onChange={ e => this.props.onChange('maxLength', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Date format') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.dateFormat }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('dateFormat', e.target.value) }\r\n                    margin=\"normal\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                        <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Format description')}\r\n                </Button>\r\n                <br/>\r\n                <TextField\r\n                    label={ I18n.t('Show absolute time after seconds') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.relativeTime }\r\n                    type=\"number\"\r\n                    inputProps={{min: 0, max: 140000}}\r\n                    onChange={ e => this.props.onChange('relativeTime', e.target.value) }\r\n                    helperText={I18n.t('All older entries will be shown with absolute time, newer with relative time')}\r\n                    margin=\"normal\"\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.icons || false} onChange={e => this.props.onChange('icons', e.target.checked)} />}\r\n                    label={I18n.t('Show icons in the list')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.duration || false} onChange={e => this.props.onChange('duration', e.target.checked)} />}\r\n                    label={I18n.t('Show duration in the list')}\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    classes={{label: this.props.classes.checkBoxLabel}}\r\n                    control={<Checkbox checked={this.props.native.deleteAlarmsByDisable || false} onChange={e => this.props.onChange('deleteAlarmsByDisable', e.target.checked)} />}\r\n                    label={I18n.t('Remove alarm events from list by the alarm mode deactivating')}\r\n                />\r\n\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_boolean')}\r\n                    onChange={() => this.onToggle('state_boolean')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Boolean settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <TextField\r\n                            label={ I18n.t('Default event text for boolean') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanText }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanText', e.target.value) }\r\n                            margin=\"normal\"\r\n                            helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        />\r\n                        <br/>\r\n                        <TextField\r\n                            label={ I18n.t('Default text by TRUE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextTrue }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextTrue', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <TextField\r\n                            label={ I18n.t('Default text by FALSE') }\r\n                            className={ this.props.classes.input }\r\n                            value={ this.props.native.defaultBooleanTextFalse }\r\n                            type=\"text\"\r\n                            onChange={ e => this.props.onChange('defaultBooleanTextFalse', e.target.value) }\r\n                            margin=\"normal\"\r\n                        />\r\n                        <br/>\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorTrue}\r\n                            style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                            name={I18n.t('Default color by TRUE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorTrue', color)}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <ColorPicker\r\n                            className={ this.props.classes.input }\r\n                            color={this.props.native.defaultBooleanColorFalse}\r\n                            style={{width: 300, display: 'inline-block'}}\r\n                            name={I18n.t('Default color by FALSE')}\r\n                            openAbove={true}\r\n                            onChange={color => this.props.onChange('defaultBooleanColorFalse', color)}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <TextField\r\n                    label={ I18n.t('Default event text for non boolean states') }\r\n                    className={ this.props.classes.input }\r\n                    value={ this.props.native.defaultNonBooleanText }\r\n                    type=\"text\"\r\n                    onChange={ e => this.props.onChange('defaultNonBooleanText', e.target.value) }\r\n                    margin=\"normal\"\r\n                    helperText={I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                />\r\n                <br/>\r\n                <FormControl className={this.props.classes.input}>\r\n                    <InputLabel>{I18n.t('Language')}</InputLabel>\r\n                    <Select\r\n                        value={this.props.native.language || 'system'}\r\n                        onChange={ e => this.props.onChange('language', e.target.value === 'system' ? '' : e.target.value) }\r\n                    >\r\n                        <MenuItem value=\"system\">{I18n.t('System language')}</MenuItem>\r\n                        <MenuItem value=\"en\">English</MenuItem>\r\n                        <MenuItem value=\"de\">Deutsch</MenuItem>\r\n                        <MenuItem value=\"ru\">русский</MenuItem>\r\n                        <MenuItem value=\"pt\">Portugues</MenuItem>\r\n                        <MenuItem value=\"nl\">Nederlands</MenuItem>\r\n                        <MenuItem value=\"fr\">français</MenuItem>\r\n                        <MenuItem value=\"it\">Italiano</MenuItem>\r\n                        <MenuItem value=\"es\">Espanol</MenuItem>\r\n                        <MenuItem value=\"pl\">Polski</MenuItem>\r\n                        <MenuItem value=\"zh-cn\">简体中文</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <Accordion\r\n                    expanded={this.state.expanded.includes('state_messengers')}\r\n                    onChange={() => this.onToggle('state_messengers')}\r\n                >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography className={this.props.classes.heading}>{I18n.t('Default messenger\\'s settings')}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{display: 'block'}}>\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Telegram') }\r\n                            adapterName={'telegram'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultTelegram }\r\n                            onChange={ values => this.props.onChange('defaultTelegram', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('WhatsApp-CMB') }\r\n                            adapterName={'whatsapp-cmb'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultWhatsAppCMB }\r\n                            onChange={ values => this.props.onChange('defaultWhatsAppCMB', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <MessengerSelect\r\n                            label={ I18n.t('Pushover') }\r\n                            adapterName={'pushover'}\r\n                            className={ this.props.classes.inputMessengers }\r\n                            selected={ this.props.native.defaultPushover }\r\n                            onChange={ values => this.props.onChange('defaultPushover', values) }\r\n                            socket={this.props.socket}\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n            { this.renderToast() }\r\n        </form>;\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n});\r\n\r\nclass AddEventDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showTime: false,\r\n            event: '',\r\n            val: '',\r\n            ts: ''\r\n        };\r\n    }\r\n\r\n    onOk() {\r\n        const event = {event: this.state.event};\r\n        if (this.state.ts) {\r\n            event.ts = this.state.ts;\r\n        }\r\n        if (this.state.val) {\r\n            if (parseFloat(this.state.val).toString() === this.state.val) {\r\n                event.val = parseFloat(this.state.val);\r\n            } else if (this.state.val === 'true') {\r\n                event.val = true;\r\n            } else if (this.state.val === 'false') {\r\n                event.val = false;\r\n            } else  {\r\n                event.val = this.state.val;\r\n            }\r\n        }\r\n        this.props.onClose(event);\r\n    }\r\n\r\n    render() {\r\n        return <Dialog open={true} onClose={() => this.props.onClose()} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add event to table, e.g. some comment.')}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Event text')}\r\n                    className={this.props.classes.textField}\r\n                    value={this.state.event}\r\n                    onKeyUp={e =>\r\n                        e.keyCode === 13 && this.state.event && (!this.state.showTime || this.state.ts) && this.onOk()}\r\n                    onChange={e => this.setState({event: e.target.value})}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    label={I18n.t('Value')}\r\n                    value={this.state.val}\r\n                    onChange={e => this.setState({val: e.target.value})}\r\n                    type=\"text\"\r\n                    className={this.props.classes.textField}\r\n                    helperText={I18n.t('optional')}\r\n                    fullWidth\r\n                />\r\n                <br/>\r\n                <FormControlLabel\r\n                    control={<Checkbox checked={this.state.showTime} onChange={e =>\r\n                        this.setState({showTime: e.target.checked, ts: e.target.checked ? new Date().toISOString() : ''})\r\n                    } />}\r\n                    label={I18n.t('Set time')}\r\n                />\r\n                <br/>\r\n                {this.state.showTime ? <TextField\r\n                    label={I18n.t('Time')}\r\n                    type=\"datetime-local\"\r\n                    value={this.state.ts}\r\n                    onChange={e => this.setState({ts: e.target.value})}\r\n                    className={this.props.classes.textField}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /> : null }\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n                <Button\r\n                    disabled={!this.state.event || (this.state.showTime && !this.state.ts)}\r\n                    onClick={() => this.onOk()}\r\n                    color=\"primary\">\r\n                    <AddIcon className={this.props.classes.buttonIcon}/>{I18n.t('Insert')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddEventDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddEventDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment'\r\nimport clsx from 'clsx'\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport 'moment/locale/fr';\r\nimport 'moment/locale/de';\r\nimport 'moment/locale/en-gb';\r\nimport 'moment/locale/ru';\r\nimport 'moment/locale/it';\r\nimport 'moment/locale/es';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/zh-cn';\r\nimport 'moment/locale/pl';\r\nimport 'moment/locale/pt';\r\nimport 'moment/locale/nl';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {FaEraser as RemoveIcon} from 'react-icons/fa';\r\nimport {FaMinus as EmptyIcon} from 'react-icons/fa';\r\nimport {FaWhatsapp as WhatsappIcon} from 'react-icons/fa';\r\nimport Telegram from '../assets/telegram.svg';\r\nimport Pushover from '../assets/pushover.svg';\r\n\r\n//import IconPicker from '../Components/IconPicker';\r\nimport IconPicker from '@iobroker/adapter-react/Components/IconPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport SelectIDDialog from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\n\r\nimport MessengerSelect from '../Components/MessengerSelect';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    textFieldWithButton: {\r\n        width: 'calc(100% - 70px)'\r\n    },\r\n    examplePaper: {\r\n        marginBottom: theme.spacing(2),\r\n        background: theme.palette.type === 'dark' ? '#5f5f5f' : '#d8d8d8'\r\n    },\r\n    exampleTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    exampleText: {\r\n        marginLeft: theme.spacing(1),\r\n        fontStyle: 'italic',\r\n        fontSize: 20,\r\n    },\r\n    exampleIcon: {\r\n        maxWidth: 32,\r\n        maxHeight: 32,\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    textDense: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        width: 'calc(100% - ' + theme.spacing(2) + 'px)',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        width: 200\r\n    },\r\n    inputMessengers: {\r\n        minWidth: 200,\r\n        marginRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    flex: {\r\n        flexGrow: 1,\r\n    },\r\n    messengersIcon: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    whatsAppIcon: {\r\n        color: '#45c655'\r\n    },\r\n    width100: {\r\n        width: '100%',\r\n    },\r\n    width100minus32: {\r\n        width: 'calc(100% - 32px)',\r\n    },\r\n    iconOpenAll: {\r\n        float: 'right',\r\n        marginRight: 4,\r\n    },\r\n    iconCloseAll: {\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nconst DEFAULT_TEMPLATE = 'default';\r\nconst DISABLED_TEXT = '-------------';\r\n\r\nclass AddIdDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.addid.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n            expanded = [];\r\n        }\r\n\r\n        this.state = {\r\n            id: this.props.id || '',\r\n            type: '',\r\n            unit: '',\r\n            name: '',\r\n\r\n            event: '',\r\n            eventDefault: true,\r\n            alarmsOnly: false,\r\n\r\n            defaultMessengers: true,\r\n            messagesInAlarmsOnly: false,\r\n            whatsAppCMB: [],\r\n            pushover: [],\r\n            telegram: [],\r\n\r\n            states: null,\r\n            color: '',\r\n            icon: '',\r\n\r\n            changesOnly: true,\r\n            showSelectId: false,\r\n            unknownId: true,\r\n            expanded,\r\n\r\n            simulateState: '',\r\n            exists: false,\r\n            confirmExit: false,\r\n            confirmRemove: false,\r\n        };\r\n\r\n        this.imagePrefix = this.props.imagePrefix || './files';\r\n        this.language = this.props.native.language || I18n.getLanguage();\r\n        moment.locale(this.language === 'en' ? 'en-gb' : this.language);\r\n\r\n        this.textSwitchedOn = this.translate('switched on', this.language);\r\n        this.textSwitchedOff = this.translate('switched off', this.language);\r\n        this.textDeviceChangedStatus = this.translate('Device %n changed status:', this.language);\r\n\r\n        this.namespace = `${this.props.adapterName}.${this.props.instance}`;\r\n\r\n        this.subscribed = '';\r\n        this.originalSettings = {};\r\n\r\n        this.props.socket.getSystemConfig()\r\n            .then(systemConfig => {\r\n                this.isFloatComma = systemConfig.common.isFloatComma;\r\n                if (this.state.id) {\r\n                    this.readSettings(null, true);\r\n                } else {\r\n                    this.setState({showSelectId: true});\r\n                }\r\n            });\r\n    }\r\n\r\n    addBooleanStates(newState) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        let trueState = states.find(item => item.val === 'true');\r\n        if (!trueState) {\r\n            trueState = {val: 'true',  text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'true', disabled: false};\r\n            states.push(trueState);\r\n            changed = true;\r\n        } else {\r\n            trueState.original = 'true';\r\n        }\r\n        let falseState = states.find(item => item.val === 'false');\r\n        if (!falseState) {\r\n            falseState = {val: 'false', text: DEFAULT_TEMPLATE, color: DEFAULT_TEMPLATE, icon: DEFAULT_TEMPLATE, original: 'false', disabled: false};\r\n            states.push(falseState);\r\n            changed = true;\r\n        } else {\r\n            falseState.original = 'false';\r\n        }\r\n\r\n        let newVal = trueState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defText) {\r\n            changed = true;\r\n            trueState.defText = newVal;\r\n        }\r\n        newVal = trueState.text === DEFAULT_TEMPLATE ? '' : trueState.text;\r\n        if (newVal !== trueState.text) {\r\n            changed = true;\r\n            trueState.text = newVal;\r\n        }\r\n\r\n        newVal = trueState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defColor) {\r\n            changed = true;\r\n            trueState.defColor = newVal;\r\n        }\r\n        newVal = trueState.color === DEFAULT_TEMPLATE ? '' : trueState.color;\r\n        if (newVal !== trueState.color) {\r\n            changed = true;\r\n            trueState.color = newVal;\r\n        }\r\n\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== trueState.defIcon) {\r\n            changed = true;\r\n            trueState.defIcon = newVal;\r\n        }\r\n        newVal = trueState.icon === DEFAULT_TEMPLATE ? '' : trueState.icon;\r\n        if (newVal !== trueState.icon) {\r\n            changed = true;\r\n            trueState.icon = newVal;\r\n        }\r\n\r\n        newVal = falseState.text === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defText) {\r\n            changed = true;\r\n            falseState.defText = newVal;\r\n        }\r\n        newVal = falseState.text === DEFAULT_TEMPLATE ? '' : falseState.text;\r\n        if (newVal !== falseState.text) {\r\n            changed = true;\r\n            falseState.text = newVal;\r\n        }\r\n\r\n        newVal = falseState.color === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defColor) {\r\n            changed = true;\r\n            falseState.defColor = newVal;\r\n        }\r\n        newVal = falseState.color === DEFAULT_TEMPLATE ? '' : falseState.color;\r\n        if (newVal !== falseState.color) {\r\n            changed = true;\r\n            falseState.color = newVal;\r\n        }\r\n\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE;\r\n        if (newVal !== falseState.defIcon) {\r\n            changed = true;\r\n            falseState.defIcon = newVal;\r\n        }\r\n        newVal = falseState.icon === DEFAULT_TEMPLATE ? '' : falseState.icon;\r\n        if (newVal !== falseState.icon) {\r\n            changed = true;\r\n            falseState.icon = newVal;\r\n        }\r\n\r\n        if (changed) {\r\n            newState.states = states;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    parseStates(states) {\r\n        // convert ['zero', 'one', two'] => {'0': 'zero', '1': 'one', '2': 'two']\r\n        if (states instanceof Array) {\r\n            const nState = {};\r\n            states.forEach((val, i) => nState[i] = val);\r\n            return nState;\r\n        } else if (typeof states !== 'object') {\r\n            return null;\r\n        } else {\r\n            return states;\r\n        }\r\n    }\r\n\r\n    addNumericStates(newState, objStates) {\r\n        const states = JSON.parse(JSON.stringify(newState.states || []));\r\n        let changed;\r\n        objStates = this.parseStates(objStates);\r\n        if (objStates) {\r\n            // {'value': 'valueName', 'value2': 'valueName2', 0: 'OFF', 1: 'ON'}\r\n            Object.keys(objStates).forEach(attr => {\r\n                let _st = states.find(item => item.val === attr);\r\n                if (!_st) {\r\n                    _st = {val: attr,  text: objStates[attr], color: '', icon: '', disabled: false};\r\n                    states.push(_st);\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            states.forEach(item => {\r\n                if (item.original !== objStates[item.val]) {\r\n                    item.original = objStates[item.val];\r\n                    changed = true;\r\n                }\r\n            });\r\n\r\n            if (changed) {\r\n                newState.states = states;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (newState.states) {\r\n            newState.states = null;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    subscribe() {\r\n        if (this.state.id !== this.subscribed) {\r\n            this.subscribed && this.props.socket.unsubscribeState(this.subscribed, this.onStateChanged);\r\n            if (this.state.type) {\r\n                this.state.id && this.props.socket.subscribeState(this.state.id, this.onStateChanged);\r\n                this.subscribed = this.state.id;\r\n            } else {\r\n                this.subscribed = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        this.setState({state: state || null});\r\n    };\r\n\r\n    readIconAndColor(id, obj) {\r\n        return new Promise(resolve => {\r\n            if (obj) {\r\n                resolve(obj);\r\n            } else {\r\n                return this.props.socket.getObject(id);\r\n            }\r\n        })\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.icon) {\r\n                    return {icon: obj.common.icon, color: obj.common.color};\r\n                } else {\r\n                    const parts = id.split('.');\r\n                    parts.pop();\r\n                    return this.props.socket.getObject(parts.join('.'))\r\n                        .then(obj => {\r\n                            if (obj && obj.type === 'channel') {\r\n                                if (obj.common && obj.common.icon) {\r\n                                    return {icon: obj.common.icon, color: obj.common.color};\r\n                                } else {\r\n                                    const parts = obj._id.split('.');\r\n                                    parts.pop();\r\n                                    return this.props.socket.getObject(parts.join('.'))\r\n                                        .then(obj => {\r\n                                            if (obj && (obj.type === 'channel' || obj.type === 'device')) {\r\n                                                if (obj.common && obj.common.icon) {\r\n                                                    return {icon: obj.common.icon, color: obj.common.color};\r\n                                                } else {\r\n                                                    return null;\r\n                                                }\r\n                                            } else {\r\n                                                return null;\r\n                                            }\r\n                                        });\r\n                                }\r\n                            } else if (obj && obj.type === 'device' && obj.common) {\r\n                                return {icon: obj.common.icon, color: obj.common.color};\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    readSettings(id, noWait) {\r\n        id = id || this.state.id;\r\n        if (this.readTypeTimer) {\r\n            clearTimeout(this.readTypeTimer);\r\n        }\r\n        this.setState({reading: true});\r\n        this.readTypeTimer = setTimeout(() =>\r\n            this.props.socket.getObject(id)\r\n                .then(obj => {\r\n                    const newState = {\r\n                        type:        (obj && obj.common && obj.common.type) || '',\r\n                        unknownId:   !obj || !obj.common || !obj.common.type,\r\n                        name:        this.getName(obj),\r\n                        unit:        (obj && obj.common && obj.common.unit) || '',\r\n                        whatsAppCMB: [],\r\n                        pushover:    [],\r\n                        telegram:    [],\r\n                        event:       '',\r\n                        icon:        '',\r\n                        color:       '',\r\n                        alarmsOnly:  false,\r\n                        messagesInAlarmsOnly: false,\r\n                        reading: false,\r\n                    };\r\n\r\n                    if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                        const newSettings = obj.common.custom[this.namespace];\r\n                        newState.exists = true;\r\n\r\n                        newState.event        = newSettings.event === DEFAULT_TEMPLATE ? '' : newSettings.event;\r\n                        newState.eventDefault = newSettings.event === DEFAULT_TEMPLATE;\r\n                        newState.icon         = newSettings.icon;\r\n                        newState.color        = newSettings.color;\r\n                        newState.states       = newSettings.states;\r\n                        newState.alarmsOnly   = newSettings.alarmsOnly;\r\n                        newState.messagesInAlarmsOnly = newSettings.messagesInAlarmsOnly;\r\n                        newState.whatsAppCMB  = newSettings.whatsAppCMB || [];\r\n                        newState.pushover     = newSettings.pushover || [];\r\n                        newState.telegram     = newSettings.telegram || [];\r\n                        newState.defaultMessengers = newSettings.defaultMessengers === undefined ? true : newSettings.defaultMessengers;\r\n\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    } else {\r\n                        newState.defaultMessengers = true;\r\n                        newState.whatsAppCMB = this.props.native.defaultWhatsAppCMB || [];\r\n                        newState.pushover    = this.props.native.defaultPushover    || [];\r\n                        newState.telegram    = this.props.native.defaultTelegram    || [];\r\n\r\n                        newState.exists = false;\r\n                        if (newState.type === 'boolean') {\r\n                            this.addBooleanStates(newState);\r\n                            newState.simulateState = false;\r\n                        } else if (newState.type === 'number' && obj && obj.common && obj.common.states && typeof obj.common.states === 'object') {\r\n                            this.addNumericStates(newState, obj.common.states);\r\n                            newState.simulateState = null;\r\n                        } else {\r\n                            newState.states = null;\r\n                            newState.simulateState = null;\r\n                        }\r\n                    }\r\n\r\n                    return this.readIconAndColor(id, obj)\r\n                        .then(result => {\r\n                            if (result && result.icon) {\r\n                                // we must get from /icons/113_hmip-psm_thumb.png => /adapter/hm-rpc/icons/113_hmip-psm_thumb.png\r\n                                // or                                                  /hm-rpc.admin/icons/113_hmip-psm_thumb.png\r\n                                newState.ownIcon = `/adapter/${id.split('.')[0]}${result.icon}`;\r\n                            }\r\n                            if (result && result.color) {\r\n                                newState.ownColor = result.color;\r\n                            }\r\n                            this.setState(newState, () => this.originalSettings = this.getSettings());\r\n                        });\r\n                })\r\n                .catch(e => this.setState({type: '', unknownId: true, name: '', unit: '', reading: false}))\r\n                .then(() => {\r\n                    this.readTypeTimer = null;\r\n                    this.subscribe();\r\n                })\r\n        ,noWait ? 0 : 500);\r\n    }\r\n\r\n    getName(obj) {\r\n        let name = obj.common.name;\r\n        if (typeof name === 'object') {\r\n            name = name[this.props.native.language] || name.en;\r\n        }\r\n        return name || obj._id;\r\n    }\r\n\r\n    renderSelectId() {\r\n        if (!this.state.showSelectId) {\r\n            return null;\r\n        }\r\n\r\n        return <SelectIDDialog\r\n            statesOnly={true}\r\n            imagePrefix={'../..'}\r\n            showExpertButton={true}\r\n            multiSelect={false}\r\n            notEditable={true}\r\n            dialogName={I18n.t('Define state ID for event list')}\r\n            socket={this.props.socket}\r\n            selected={this.state.id}\r\n            themeName={this.props.themeName}\r\n            themeType={this.props.themeType}\r\n            onOk={id => this.setState({id}, () => this.readSettings(id))}\r\n            onClose={() => this.setState({showSelectId: false})}\r\n        />;\r\n    }\r\n\r\n    translate(word, lang) {\r\n        lang = lang || I18n.lang;\r\n        if (I18n.translations[lang]) {\r\n            const w = I18n.translations[lang][word] || I18n.translations.en[word];\r\n            if (w) {\r\n                word = w;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    getExampleColor() {\r\n        let color = this.state.ownColor || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defColor) {\r\n                color = stateVal === 'true' ? ColorPicker.getColor(this.props.native.defaultBooleanColorTrue) : ColorPicker.getColor(this.props.native.defaultBooleanColorFalse);\r\n            } else if (item && item.color && ColorPicker.getColor(item.color)) {\r\n                color = ColorPicker.getColor(item.color);\r\n            }\r\n        }\r\n        color = color || (this.state.color && ColorPicker.getColor(this.state.color)) || '';\r\n\r\n        return color;\r\n    }\r\n\r\n    getExampleIcon() {\r\n        const defIcon = this.state.icon || this.state.ownIcon;\r\n        let icon = defIcon || '';\r\n        if (this.state.states) {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.defIcon) {\r\n                icon = (stateVal === 'true' ? this.props.native.defaultBooleanIconTrue : this.props.native.defaultBooleanIconFalse) || this.state.ownIcon || '';\r\n            } else if (item && item.icon) {\r\n                icon = item.icon;\r\n            }\r\n        }\r\n\r\n        return icon;\r\n    }\r\n\r\n    getExampleText() {\r\n        let text = '';\r\n        let stateVal = this.state.state ? this.state.state.val : (this.state.type === 'boolean' ? false : null);\r\n        if (this.state.states) {\r\n            if (this.state.type === 'boolean' && this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            } else\r\n            if (this.state.type !== 'boolean' && this.state.simulateState !== null) {\r\n                stateVal = this.state.simulateState;\r\n            }\r\n            stateVal = stateVal === undefined || stateVal === null ? '' : stateVal.toString();\r\n            const item = this.state.states.find(item => item.val === stateVal);\r\n\r\n            if (item && item.disabled) {\r\n                return DISABLED_TEXT;\r\n            }\r\n\r\n            if (stateVal === 'true' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextTrue || this.textSwitchedOn : item.text || this.textSwitchedOn;\r\n            } else if (stateVal === 'false' && item) {\r\n                text = item.defText ? this.props.native.defaultBooleanTextFalse || this.textSwitchedOff : item.text || this.textSwitchedOff;\r\n            } else {\r\n                if (item && item.defText) {\r\n                    text = stateVal === 'true' ? this.props.native.defaultBooleanTextTrue : this.props.native.defaultBooleanTextFalse;\r\n                } else if (item && item.text) {\r\n                    text = item.text;\r\n                } else {\r\n                    text = stateVal;\r\n                }\r\n            }\r\n        } else {\r\n            if (stateVal === null || stateVal === undefined) {\r\n                text = 'null';\r\n            } else if (typeof stateVal === 'number') {\r\n                text = stateVal.toString();\r\n                if (this.isFloatComma) {\r\n                    text = text.replace('.', ',');\r\n                }\r\n            } else {\r\n                text = stateVal.toString();\r\n            }\r\n        }\r\n\r\n        return text || '';\r\n    }\r\n\r\n    buildExample() {\r\n        let eventTemplate = '';\r\n        let valWithUnit = '';\r\n        let time = this.state.state && this.state.state.ts ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat;\r\n\r\n        let valText = this.getExampleText();\r\n\r\n        if (valText === DISABLED_TEXT) {\r\n            return I18n.t('DISABLED');\r\n        }\r\n\r\n        if (this.state.type === 'boolean') {\r\n            let stateVal = !!(this.state.state && this.state.state.val);\r\n            if (this.state.simulateState) {\r\n                stateVal = !stateVal;\r\n            }\r\n\r\n            if (!this.state.eventDefault && !this.state.event && stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else if (!this.state.eventDefault && !this.state.event && !stateVal && valText) {\r\n                eventTemplate = valText;\r\n            } else {\r\n                if (this.state.event === DEFAULT_TEMPLATE || this.state.eventDefault) {\r\n                    eventTemplate = this.props.native.defaultBooleanText || this.textDeviceChangedStatus;\r\n                } else {\r\n                    eventTemplate = this.state.event;\r\n                }\r\n                eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n                eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n                valWithUnit = valText || (stateVal ? this.textSwitchedOn : this.textSwitchedOff);\r\n            }\r\n        } else {\r\n            eventTemplate = this.state.event === DEFAULT_TEMPLATE ? this.props.native.defaultNonBooleanText || this.textDeviceChangedStatus : this.state.event || this.textDeviceChangedStatus;\r\n\r\n            valWithUnit = valText;\r\n            if (valWithUnit !== '' && this.state.unit) {\r\n                valWithUnit += this.state.unit;\r\n            }\r\n            if (this.state.states) {\r\n                if (!this.state.eventDefault && !this.state.event) {\r\n                    eventTemplate = valWithUnit;\r\n                    valWithUnit = '';\r\n                }\r\n            }\r\n            eventTemplate = eventTemplate.replace(/%u/g, this.state.unit || '');\r\n            eventTemplate = eventTemplate.replace(/%n/g, this.state.name || this.state.id);\r\n        }\r\n\r\n        if (eventTemplate.includes('%d')) {\r\n            let text;\r\n            text = this.duration2text(5000);\r\n            eventTemplate = eventTemplate.replace(/%d/g, text);\r\n        }\r\n\r\n        if (eventTemplate.includes('%s')) {\r\n            eventTemplate = eventTemplate.replace(/%s/g, valText);\r\n            valWithUnit = '';\r\n        }\r\n\r\n        if (eventTemplate.includes('%t')) {\r\n            eventTemplate = eventTemplate.replace(/%t/g, this.state.state ? moment(new Date(this.state.state.ts)).format(this.props.native.dateFormat) : this.props.native.dateFormat);\r\n        }\r\n\r\n        if (eventTemplate.includes('%r')) {\r\n            eventTemplate = eventTemplate.replace(/%r/g, this.state.state ? moment(new Date(this.state.state.ts)).fromNow() : moment(new Date()).fromNow());\r\n        }\r\n\r\n        if (eventTemplate.includes('%o')) {\r\n            eventTemplate = eventTemplate.replace(/%o/g, '_');\r\n        }\r\n\r\n        return `${time} | ${eventTemplate} | ${valWithUnit}`;\r\n    }\r\n\r\n    getSettings() {\r\n        const settings = {\r\n            enabled: true,\r\n            event: this.state.eventDefault ? DEFAULT_TEMPLATE : this.state.event,\r\n            changesOnly: !!this.state.changesOnly,\r\n            defaultMessengers: !!this.state.defaultMessengers\r\n        };\r\n        if (this.state.color && ColorPicker.getColor(this.state.color)) {\r\n            settings.color = ColorPicker.getColor(this.state.color);\r\n        }\r\n        if (this.state.icon) {\r\n            settings.icon = this.state.icon;\r\n        }\r\n        if (this.state.alarmsOnly) {\r\n            settings.alarmsOnly = true;\r\n        }\r\n        if (this.state.messagesInAlarmsOnly) {\r\n            settings.messagesInAlarmsOnly = true;\r\n        }\r\n        if (this.state.pushover && this.state.pushover.length && !this.state.defaultMessengers) {\r\n            settings.pushover = this.state.pushover;\r\n        }\r\n        if (this.state.telegram && this.state.telegram.length && !this.state.defaultMessengers) {\r\n            settings.telegram = this.state.telegram;\r\n        }\r\n        if (this.state.whatsAppCMB && this.state.whatsAppCMB.length && !this.state.defaultMessengers) {\r\n            settings.whatsAppCMB = this.state.whatsAppCMB;\r\n        }\r\n\r\n        this.state.states && this.state.states.forEach(item => {\r\n            settings.states = settings.states || [];\r\n            const it = {val: item.val};\r\n\r\n            if (item.disabled)  {\r\n                it.disabled = true;\r\n                settings.states.push(it);\r\n                return;\r\n            }\r\n\r\n            if (item.val === 'true' || item.val === 'false') {\r\n                it.text  = item.defText  ? DEFAULT_TEMPLATE : item.text || '';\r\n                if (item.defColor || (item.color && ColorPicker.getColor(item.color))) {\r\n                    it.color = item.defColor ? DEFAULT_TEMPLATE : ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.defIcon || item.icon) {\r\n                    it.icon = item.defIcon  ? DEFAULT_TEMPLATE : item.icon;\r\n                }\r\n            } else {\r\n                it.text  = item.text || '';\r\n                if (item.color && ColorPicker.getColor(item.color))  {\r\n                    it.color = ColorPicker.getColor(item.color);\r\n                }\r\n                if (item.icon)  {\r\n                    it.icon = item.icon;\r\n                }\r\n            }\r\n\r\n            settings.states.push(it);\r\n        });\r\n\r\n        return settings;\r\n    }\r\n\r\n    duration2text(ms, withSpaces) {\r\n        if (ms < 1000) {\r\n            return `${ms}${withSpaces ? ' ' : ''}${I18n.t('ms')}`;\r\n        } else if (ms < 90000) {\r\n            return `${this.isFloatComma ? (Math.round((ms / 100)) / 10).toString().replace('.', ',') : (Math.round((ms / 100)) / 10).toString()}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else if (ms < 3600000) {\r\n            return `${Math.floor(ms / 60000)}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${Math.round((ms % 60000) / 1000)}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        } else {\r\n            const hours = Math.floor(ms / 3600000);\r\n            const minutes = Math.floor(ms / 60000) % 60;\r\n            const seconds = Math.round(Math.floor(ms % 60000) / 1000);\r\n            return `${hours}${withSpaces ? ' ' : ''}${I18n.t('hours')} ${minutes}${withSpaces ? ' ' : ''}${I18n.t('minutes')} ${seconds}${withSpaces ? ' ' : ''}${I18n.t('seconds')}`;\r\n        }\r\n    }\r\n\r\n    writeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common) {\r\n                    obj.common.custom = obj.common.custom || {};\r\n                    obj.common.custom[this.namespace] = this.getSettings();\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    removeSettings(cb) {\r\n        this.props.socket.getObject(this.state.id)\r\n            .then(obj => {\r\n                if (obj && obj.common && obj.common.custom && obj.common.custom[this.namespace]) {\r\n                    obj.common.custom[this.namespace] = null;\r\n                    this.props.socket.setObject(this.state.id, obj)\r\n                        .then(() => cb && cb());\r\n                } else {\r\n                    cb && cb();\r\n                }\r\n            });\r\n    }\r\n\r\n    onClose() {\r\n        if (this.state.id && JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings())) {\r\n            this.setState({confirmExit: true});\r\n        } else {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    onToggle(id) {\r\n        let expanded;\r\n        if (id === false) {\r\n            expanded = [];\r\n        } else if (id === true) {\r\n            expanded = ['state_settings', 'state_messengers'];\r\n            this.state.states && this.state.states.forEach(state => expanded.push('state_' + state.val));\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            const pos = expanded.indexOf(id);\r\n            if (pos !== -1)  {\r\n                expanded.splice(pos, 1);\r\n            } else {\r\n                expanded.push(id);\r\n                expanded.sort();\r\n            }\r\n        }\r\n\r\n        window.localStorage.setItem('eventlist.addid.expanded', JSON.stringify(expanded));\r\n\r\n        this.setState({expanded});\r\n    }\r\n\r\n    renderConfirmExit() {\r\n        if (!this.state.confirmExit) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Changes not saved.') }\r\n                text={ I18n.t('All changes will be lost. Exit?') }\r\n                ok={ I18n.t('Yes') }\r\n                cancel={ I18n.t('No') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmExit: false} );\r\n                    isYes && this.props.onClose();\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderConfirmRemove() {\r\n        if (!this.state.confirmRemove) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={ I18n.t('Settings will be erased.') }\r\n                text={ I18n.t('The state will be removed from event list and all settings erased. Are you sure?') }\r\n                ok={ I18n.t('Remove from list') }\r\n                cancel={ I18n.t('Cancel') }\r\n                onClose={isYes => {\r\n                    this.setState({ confirmRemove: false} );\r\n                    if (isYes) {\r\n                        this.removeSettings();\r\n                        this.props.onClose();\r\n                    }\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderState(i, narrowWidth) {\r\n        const state = this.state.states[i];\r\n        const isBoolean = state.val === 'true' || state.val === 'false';\r\n\r\n        let color = state.defColor ? (state.val === 'true' ? this.props.native.defaultBooleanColorTrue : this.props.native.defaultBooleanColorFalse) : state.color;\r\n        color = !state.disabled && color ? ColorPicker.getColor(color) : '';\r\n\r\n        return <Accordion\r\n            key={state.val}\r\n            expanded={this.state.expanded.includes('state_' + state.val) && !state.disabled}\r\n            onChange={() => this.onToggle('state_' + state.val)}\r\n        >\r\n            <AccordionSummary expandIcon={!state.disabled ? <ExpandMoreIcon /> : <EmptyIcon/>}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('State')} <span style={{color: color || undefined, fontWeight: 'bold'}}>{\r\n                    state.original === 'true' || state.original === 'false' ?\r\n                        `${state.original.toUpperCase()}${state.text ? ' - ' + state.text : ''}`\r\n                        :\r\n                        `${state.original}(${state.val})${state.text ? ' - ' + state.text : ''}`\r\n                }</span></Typography>\r\n                <div className={this.props.classes.flex}/>\r\n                <FormControlLabel\r\n                    disabled={this.state.reading}\r\n                    control={<Checkbox\r\n                        checked={!!state.disabled}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].disabled = e.target.checked;\r\n                            this.setState({states});\r\n                        }} />\r\n                    }\r\n                    label={I18n.t('Disable logging')}\r\n                />\r\n            </AccordionSummary>\r\n            {!state.disabled && <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defText}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defText = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default text')}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defText ? <TextField\r\n                        disabled={this.state.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Text')}\r\n                        value={state.text}\r\n                        classes={{root: this.props.classes.textDense}}\r\n                        onChange={e => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].text = e.target.value;\r\n                            this.setState({states});\r\n                        }}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defColor}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defColor = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default color', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defColor ?\r\n                        <ColorPicker\r\n                            disabled={this.state.reading}\r\n                            openAbove={true}\r\n                            color={state.color}\r\n                            style={{width: 250, display: 'inline-block'}}\r\n                            name={I18n.t('Color')}\r\n                            onChange={color => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].color = color;\r\n                                this.setState({states});\r\n                            }}\r\n                        /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                    {isBoolean ? <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={state.defIcon}\r\n                            onChange={e => {\r\n                                const states = JSON.parse(JSON.stringify(this.state.states));\r\n                                states[i].defIcon = e.target.checked;\r\n                                this.setState({states});\r\n                            }} />\r\n                        }\r\n                        label={I18n.t('Use default icon', state.val.toUpperCase())}\r\n                    /> : null}\r\n                    {!isBoolean || !state.defIcon ? <IconPicker\r\n                        disabled={this.state.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.state.id + this.state.type + state.original}\r\n                        color={color}\r\n                        label={I18n.t('Icon')}\r\n                        socket={this.props.socket}\r\n                        value={state.icon}\r\n                        onChange={icon => {\r\n                            const states = JSON.parse(JSON.stringify(this.state.states));\r\n                            states[i].icon = icon;\r\n                            this.setState({states});\r\n                        }}\r\n                    /> : null}\r\n                    {narrowWidth ? <br/> : null}\r\n                </Paper>\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderStateSettings(narrowWidth) {\r\n        const color = ColorPicker.getColor(this.state.color);\r\n        const text = this.state.eventDefault ? (this.state.type === 'boolean' ? this.props.native.defaultBooleanText : this.props.native.defaultNonBooleanText) : this.state.event || I18n.t('Use the specific state texts');\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_settings')}\r\n            onChange={() => this.onToggle('state_settings')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{root: this.props.classes.width100minus32}}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Event settings')}\r\n                    {!narrowWidth ? <span style={{color: color || undefined, fontStyle: 'italic'}}>{' - ' + text}</span> : null}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Paper className={this.props.classes.paper}>\r\n                    <FormControlLabel\r\n                        disabled={this.state.reading}\r\n                        control={<Checkbox\r\n                            checked={this.state.eventDefault}\r\n                            onChange={e => this.setState({eventDefault: e.target.checked})} />\r\n                        }\r\n                        label={<span>\r\n                            <span>{I18n.t('Default text')}</span>\r\n                        </span>}\r\n                    />\r\n                    {narrowWidth ? <br/> : null}\r\n                    {!this.state.eventDefault ? <TextField\r\n                        disabled={this.state.reading}\r\n                        margin=\"dense\"\r\n                        label={I18n.t('Event text')}\r\n                        value={this.state.event}\r\n                        onChange={e => this.setState({event: e.target.value})}\r\n                        type=\"text\"\r\n                        className={this.props.classes.textField}\r\n                        helperText={ this.state.type === 'number' ?\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration, %g - value difference')\r\n                            :\r\n                            I18n.t('You can use patterns: %s - value, %u - unit, %n - name, %t - time, %d - duration')}\r\n                        fullWidth\r\n                    /> : null}\r\n                    <br/>\r\n                    <ColorPicker\r\n                        disabled={this.state.reading}\r\n                        color={this.state.color}\r\n                        style={{width: 250, display: 'inline-block'}}\r\n                        name={I18n.t('Event color')}\r\n                        openAbove={true}\r\n                        onChange={color => this.setState({color})}\r\n                    />\r\n                    <br/>\r\n                    <IconPicker\r\n                        disabled={this.state.reading}\r\n                        imagePrefix={this.imagePrefix}\r\n                        key={this.state.id + this.state.type}\r\n                        color={this.state.color}\r\n                        socket={this.props.socket}\r\n                        label={I18n.t('Event icon')}\r\n                        value={this.state.icon}\r\n                        onChange={icon => this.setState({icon: icon})}\r\n                    />\r\n                </Paper>\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderMessengers(narrowWidth) {\r\n        const count = (this.state.telegram ? this.state.telegram.length : 0) +\r\n            (this.state.whatsAppCMB ? this.state.whatsAppCMB.length : 0) +\r\n            (this.state.pushover ? this.state.pushover.length : 0);\r\n\r\n        const messengers = [\r\n            this.state.telegram    && this.state.telegram.length    ? [<img src={Telegram} key=\"icon\" alt=\"telegram\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'(' + this.state.telegram.join(', ')    + ')'}</span>] : null,\r\n            this.state.whatsAppCMB && this.state.whatsAppCMB.length ? [<WhatsappIcon key=\"icon\" className={clsx(this.props.classes.messengersIcon, this.props.classes.whatsAppIcon)}/>, <span key=\"text\">{'(' + this.state.whatsAppCMB.join(', ') + ')'}</span>] : null,\r\n            this.state.pushover    && this.state.pushover.length    ? [<img src={Pushover} key=\"icon\" alt=\"pushover\" className={this.props.classes.messengersIcon}/>, <span key=\"text\">{'('    + this.state.pushover.join(', ')    + ')'}</span>] : null,\r\n        ];\r\n\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('state_messengers')}\r\n            onChange={() => this.onToggle('state_messengers')}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={this.props.classes.heading}>{I18n.t('Messengers') + (count ? ' - ' : '')}\r\n                    {messengers}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.reading}\r\n                    control={<Checkbox\r\n                        disabled={!!this.state.alarmsOnly}\r\n                        checked={!!(this.state.messagesInAlarmsOnly || this.state.alarmsOnly)}\r\n                        onChange={e => this.setState({messagesInAlarmsOnly: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Only in alarm state')}\r\n                />\r\n                {narrowWidth && <br/>}\r\n                <FormControlLabel\r\n                    disabled={this.state.reading}\r\n                    control={<Checkbox\r\n                        checked={this.state.defaultMessengers}\r\n                        onChange={e => this.setState({defaultMessengers: e.target.checked})} />\r\n                    }\r\n                    label={I18n.t('Default messengers')}\r\n                />\r\n                <br/>\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Telegram') }\r\n                    adapterName={'telegram'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({telegram: value})}\r\n                    selected={ this.state.telegram }\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('WhatsApp-CMB') }\r\n                    adapterName={'whatsapp-cmb'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({whatsAppCMB: value})}\r\n                    selected={ this.state.whatsAppCMB}\r\n                    socket={this.props.socket}\r\n                />}\r\n                {narrowWidth && !this.state.defaultMessengers && <br/>}\r\n                {this.state.defaultMessengers ? null : <MessengerSelect\r\n                    label={ I18n.t('Pushover') }\r\n                    adapterName={'pushover'}\r\n                    className={ this.props.classes.inputMessengers }\r\n                    onChange={value => this.setState({pushover: value})}\r\n                    selected={ this.state.pushover}\r\n                    socket={this.props.socket}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    render() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm' || this.props.width === 'md';\r\n        let val = '';\r\n        if (this.state.state && this.state.state.val) {\r\n            if (this.state.state.val === null || this.state.state.val === undefined) {\r\n                val = ' - --';\r\n            } else {\r\n                val = ' - ' + this.state.state.val.toString();\r\n            }\r\n        }\r\n\r\n        const changed = !this.state.exists || JSON.stringify(this.originalSettings) !== JSON.stringify(this.getSettings());\r\n        const exampleColor = this.getExampleColor() || undefined;\r\n\r\n        return <Dialog\r\n            open={true}\r\n            onClose={() => this.onClose()}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth=\"lg\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">{I18n.t('Add event')}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {I18n.t('You can add state to the event list, so the changes will be monitored.')}\r\n                </DialogContentText>\r\n                <div className={this.props.classes.field}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label={I18n.t('State ID')}\r\n                        error={!!(this.state.id && this.state.unknownId)}\r\n                        className={this.props.classes.textFieldWithButton}\r\n                        value={this.state.id}\r\n                        onChange={e => this.setState({id: e.target.value}, () => this.readSettings())}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <Button style={{marginTop: 8}} variant=\"contained\" color=\"secondary\" onClick={() => this.setState({showSelectId: true})}>...</Button>\r\n                </div>\r\n                {this.state.reading ? <LinearProgress/> : <div style={{height: 4, width: '100%'}}/>}\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <Paper className={clsx(this.props.classes.paper, this.props.classes.examplePaper)}>\r\n                        <span className={this.props.classes.exampleTitle}>{I18n.t('Example event:')}</span>\r\n                        <span className={this.props.classes.exampleText} style={{color: exampleColor}}>\r\n                            {this.props.native.icons ? <Image\r\n                                src={this.getExampleIcon()}\r\n                                className={this.props.classes.exampleIcon}\r\n                                color={exampleColor}\r\n                                imagePrefix={this.imagePrefix}\r\n                            />: null}\r\n                            {this.buildExample()}\r\n                        </span>\r\n                        {this.state.type === 'boolean' ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControlLabel\r\n                                    disabled={this.state.reading}\r\n                                    control={<Switch\r\n                                        checked={!!this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.checked})}/>\r\n                                    }\r\n                                    label={I18n.t('Toggle state to simulate')}\r\n                                />\r\n                            </>\r\n                            : null\r\n                        }\r\n                        {this.state.type === 'number' && this.state.states ?\r\n                            <>\r\n                                <br/>\r\n                                <FormControl className={this.props.classes.formControl} disabled={this.state.reading}>\r\n                                    <InputLabel>{I18n.t('Simulate value')}</InputLabel>\r\n                                    <Select\r\n                                        value={this.state.simulateState === null ? '_current_' : this.state.simulateState}\r\n                                        onChange={e => this.setState({simulateState: e.target.value === '_current_' ? null : e.target.value})}\r\n                                    >\r\n                                    <MenuItem value={'_current_'}>{I18n.t('current') + val}</MenuItem>\r\n                                    {this.state.states.map(item =>\r\n                                        <MenuItem value={item.val}>{item.original}({item.val})</MenuItem>)}\r\n                                </Select>\r\n                                </FormControl>\r\n                            </>\r\n                            : null\r\n                        }\r\n                    </Paper>\r\n                    : null }\r\n\r\n                {this.state.id && this.state.type ?\r\n                    <div className={this.props.classes.width100}>\r\n                        <FormControlLabel\r\n                            disabled={this.state.reading}\r\n                            control={<Checkbox\r\n                                checked={this.state.changesOnly}\r\n                                onChange={e => this.setState({changesOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only changes')}\r\n                        />\r\n                        {narrowWidth && <br/>}\r\n                        <FormControlLabel\r\n                            disabled={this.state.reading}\r\n                            control={<Checkbox\r\n                                checked={!!this.state.alarmsOnly}\r\n                                onChange={e => this.setState({alarmsOnly: e.target.checked})} />\r\n                            }\r\n                            label={I18n.t('Only in alarm state')}\r\n                        />\r\n                        <IconButton disabled={this.state.expanded.length === (this.state.states ? this.state.states.length : 0 ) + 2} className={this.props.classes.iconOpenAll} onClick={() => this.onToggle(true)}><ExpandMoreIcon/></IconButton>\r\n                        <IconButton disabled={!this.state.expanded.length} className={this.props.classes.iconCloseAll} onClick={() => this.onToggle(false)}> <ExpandLessIcon/></IconButton>\r\n                    </div> : null}\r\n                {this.state.id     ? this.renderStateSettings() : null }\r\n                {this.state.states ? this.state.states.sort((a, b) => a.val > b.val ? 1 : (a.val < b.val ? -1 : 0)).map((item, i) => this.renderState(i, narrowWidth)) : null }\r\n                {this.state.id     ? this.renderMessengers(narrowWidth) : null}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()}><CancelIcon className={this.props.classes.buttonIcon}/>{!changed ? I18n.t('Close') : I18n.t('Cancel')}</Button>\r\n                {this.state.exists ? <Button\r\n                    disabled={!this.state.id || !this.state.type}\r\n                    onClick={() => this.setState({confirmRemove: true})}\r\n                ><RemoveIcon className={this.props.classes.buttonIcon}/>{I18n.t('Remove')}</Button> : null}\r\n                <Button\r\n                    disabled={!this.state.id || !this.state.type || !changed}\r\n                    onClick={() =>\r\n                        this.writeSettings(() =>\r\n                            this.props.onClose())\r\n                    }\r\n                    color=\"primary\"\r\n                ><SaveIcon className={this.props.classes.buttonIcon}/>{this.state.exists ? I18n.t('Update') : I18n.t('Add')}</Button>\r\n            </DialogActions>\r\n            {this.renderSelectId()}\r\n            {this.renderConfirmExit()}\r\n            {this.renderConfirmRemove()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nAddIdDialog.propTypes = {\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    socket: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(AddIdDialog));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n\r\n    },\r\n    buttonIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    icon: {\r\n        width: 32,\r\n        maxHeight: 32\r\n    },\r\n    emptyIcon: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    listPrimary: {\r\n\r\n    },\r\n    listSecondary: {\r\n        opacity: 0.8,\r\n        fontStyle: 'italic',\r\n        fontSize: 'smaller',\r\n    },\r\n    newState: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 'greater',\r\n        fontWeight: 'bold'\r\n    }\r\n});\r\n\r\nfunction getSelectIdIcon(obj, prefix) {\r\n    prefix = prefix || '.';//http://localhost:8081';\r\n    let src = '';\r\n    let id = obj._id.replace('system.adapter.');\r\n    let adapter = id.split('.')[0];\r\n\r\n    const aIcon = obj && obj.common && obj.common.icon;\r\n    if (aIcon) {\r\n        // if not BASE64\r\n        if (!aIcon.startsWith('data:image/')) {\r\n            if (aIcon.includes('.')) {\r\n                src = prefix + '/adapter/' + adapter + '/' + aIcon;\r\n            } else {\r\n                return null; //'<i class=\"material-icons iob-list-icon\">' + obj.common.icon + '</i>';\r\n            }\r\n        } else {\r\n            src = aIcon;\r\n        }\r\n    }\r\n\r\n    return src || null;\r\n}\r\n\r\nclass SelectStateDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected: '',\r\n            ids: [],\r\n            reading: true,\r\n            filter: '',\r\n        };\r\n\r\n        this.promises = {};\r\n\r\n        this.readIds()\r\n            .then(ids => this.setState({ids}));\r\n    }\r\n\r\n    readIds() {\r\n        return new Promise((resolve, reject) => {\r\n            this.props.socket.getRawSocket().emit('getObjectView', 'custom', 'state', {startkey: '', endkey: '\\u9999'}, (err, res) => {\r\n                if (!err) {\r\n                    const namespace = `${this.props.adapterName}.${this.props.instance || 0}`;\r\n                    const ids = [];\r\n                    if (res && res.rows) {\r\n                        for (let i = 0; i < res.rows.length; i++) {\r\n                            const obj = res.rows[i].value;\r\n                            if (obj[namespace]) {\r\n                                ids.push(res.rows[i].id);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve(ids);\r\n                } else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    getObject(id) {\r\n        return this.props.socket.getObject(id)\r\n            .then(obj =>\r\n                this.setState({[obj._id]: obj}));\r\n    }\r\n\r\n    renderListItem(id, filter) {\r\n        const obj = this.state[id];\r\n        if (obj) {\r\n            const name = Utils.getObjectNameFromObj(obj, null, { language: this.state.lang }) || obj;\r\n            if (filter && !id.toLowerCase().includes(filter) && !name.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n\r\n            const icon = getSelectIdIcon(obj);\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    {icon ? <img src={icon} className={this.props.classes.icon} alt=\"state\"/> : <div className={this.props.classes.emptyIcon}>&nbsp;</div>}\r\n                </ListItemIcon>\r\n                <ListItemText primary={name} secondary={id !== name ? id : ''} classes={{primary: this.props.classes.listPrimary, secondary: this.props.classes.listSecondary}}/>\r\n            </ListItem>;\r\n        } else {\r\n            this.promises[id] = this.promises[id] || this.getObject(id);\r\n            if (filter && !id.toLowerCase().includes(filter)) {\r\n                return null;\r\n            }\r\n            return <ListItem button onClick={() => this.props.onClose(id)} key={id}>\r\n                <ListItemIcon>\r\n                    <div className={this.props.classes.emptyIcon}>&nbsp;</div>\r\n                </ListItemIcon>\r\n                <ListItemText primary={id} classes={{primary: this.props.classes.listPrimary}}/>\r\n            </ListItem>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const filter = this.state.filter.toLowerCase();\r\n        return <Dialog\r\n            open={true}\r\n            fullWidth={true}\r\n            maxWidth=\"md\"\r\n            onClose={() => this.props.onClose()}>\r\n            <DialogTitle>{I18n.t('Select state')}<TextField\r\n                label={I18n.t('Filter')}\r\n                InputLabelProps={ {shrink: true} }\r\n                InputProps={{\r\n                    endAdornment: this.state.searchedValue ? (\r\n                        <IconButton\r\n                            onClick={() => this.setState({ searchedValue: '' })}>\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    ) : undefined,\r\n                }}\r\n                autoFocus\r\n                value={this.state.filter}\r\n                onChange={e => this.setState({filter: e.target.value})}\r\n                fullWidth\r\n                size=\"small\"\r\n            /></DialogTitle>\r\n            <DialogContent className={this.props.classes.dialogContent}>\r\n                <List dense={true}>\r\n                    {!filter && <ListItem button onClick={() => this.props.onClose(true)}>\r\n                        <ListItemIcon><AddIcon /></ListItemIcon>\r\n                        <ListItemText primary={I18n.t('Add new state')} classes={{primary: this.props.classes.newState}}/>\r\n                    </ListItem>}\r\n                    {this.state.ids.map(item => this.renderListItem(item, filter))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => this.props.onClose()} color=\"primary\">\r\n                    <CancelIcon className={this.props.classes.buttonIcon}/>{I18n.t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nSelectStateDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SelectStateDialog);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten } from '@material-ui/core/styles';\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\n\r\nimport {MdRefresh as IconReload} from 'react-icons/md';\r\nimport {MdClose as IconClose} from 'react-icons/md';\r\nimport {MdQuestionAnswer as IconQuestion} from 'react-icons/md';\r\nimport {MdAdd as IconAddEvent} from 'react-icons/md';\r\nimport {MdEdit as IconEdit} from 'react-icons/md';\r\nimport {FaFilePdf as IconPdf} from 'react-icons/fa';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport ConfirmDialog from '@iobroker/adapter-react/Dialogs/Confirm';\r\nimport AddEventDialog from '../Dialogs/AddEvent';\r\nimport AddIdDialog from '../Dialogs/AddId';\r\nimport SelectStateDialog from '../Dialogs/SelectState';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport Image from '@iobroker/adapter-react/Components/Image';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    instanceNotOnline: {\r\n        color: '#883333',\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    toolbarRoot: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    toolbarHighlight: theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    toolbarTitle: {\r\n        flex: '1 1 100%',\r\n    },\r\n    toolbarButton: {\r\n        marginRight: theme.spacing(1),\r\n        //height: 37.25,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    tableContainer: {\r\n        height: '100%',\r\n        overflow: 'auto'\r\n    },\r\n    table:{\r\n        width: 'auto',\r\n    },\r\n    tdIcons: {\r\n        textAlign: 'right',\r\n        marginRight: theme.spacing(1),\r\n        marginTop: 2,\r\n    },\r\n    tdTs: {\r\n        //width: 100\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdEvent: {\r\n        //width: `calc(100% - 250px - 52px)`,\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    tdVal: {\r\n        //width: 150,\r\n    },\r\n    tdDuration: {\r\n        //paddingRight: theme.spacing(1),\r\n    },\r\n    tdID: {\r\n        opacity: 0.3\r\n    },\r\n    tdEdit: {\r\n\r\n    },\r\n    editButton: {\r\n        height: 16,\r\n        opacity: 0.3,\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    toolbarButtonText: {\r\n        whiteSpace: 'nowrap',\r\n        marginLeft: 16,\r\n        marginRight: 16,\r\n        lineHeight: 24,\r\n        display: 'inline-block'\r\n    },\r\n    tabMargins: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    buttonAddState: {\r\n        minWidth: '120px !important',\r\n    },\r\n    icon: {\r\n        width: 28,\r\n        height: 28,\r\n        verticalAlign: 'middle',\r\n    }\r\n});\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let editEnabled   = window.localStorage.getItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`) || null;\r\n        let editAvailable = props.editAvailable !== undefined ? props.editAvailable : true;\r\n\r\n        if (!editAvailable) {\r\n            editEnabled = false;\r\n        } else if (!this.props.showEditButton || editEnabled === null) {\r\n            editEnabled = props.editEnabled !== undefined ? props.editEnabled : true;\r\n        } else if (editEnabled === 'true') {\r\n            editEnabled = true;\r\n        } else if (editEnabled === 'false') {\r\n            editEnabled = false;\r\n        }\r\n\r\n        const location = Router.getLocation();\r\n\r\n        this.state = {\r\n            toast: '',\r\n            isInstanceAlive: false,\r\n            eventList: false,\r\n            eventRawList: false,\r\n            order: 'desc',\r\n            orderBy: 'ts',\r\n            selected: [],\r\n            showDeleteConfirm: false,\r\n            showSelectState: location.dialog === 'selectState',\r\n            showAddIdDialog: location.dialog === 'addId' ? location.id || true : false,\r\n            showAddEventDialog: location.dialog === 'addEvent',\r\n            selectedId: '',\r\n            editEnabled,\r\n            editAvailable,\r\n            pdfInGeneration: false,\r\n        };\r\n\r\n        this.imagePrefix    = this.props.imagePrefix || 'files/'; // by default is admin\r\n        this.aliveId        = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.eventListId    = `${this.props.adapterName}.${this.props.instance}.eventJSONList`;\r\n        this.eventRawListId = `${this.props.adapterName}.${this.props.instance}.eventListRaw`;\r\n        this.triggerPDFId   = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n\r\n        this.headCells = [\r\n            { id: 'ts',    label: I18n.t('Time'),  align: 'right' },\r\n            { id: 'icon'},\r\n            { id: 'event', label: I18n.t('Event'), align: 'center' },\r\n            { id: 'val',   label: I18n.t('Value'), align: 'left' },\r\n        ];\r\n    }\r\n\r\n    readStatus(cb) {\r\n        this.props.socket.getState(this.aliveId)\r\n            .then(aliveState =>\r\n                this.props.socket.getState(this.eventListId)\r\n                    .then(state =>\r\n                        this.props.socket.getState(this.eventRawListId)\r\n                            .then(rawState => {\r\n                                let eventList;\r\n                                try {\r\n                                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                                } catch (e) {\r\n                                    eventList = [];\r\n                                }\r\n                                let eventRawList;\r\n                                try {\r\n                                    eventRawList = rawState && rawState.val ? JSON.parse(rawState.val) : []\r\n                                } catch (e) {\r\n                                    eventRawList = [];\r\n                                }\r\n\r\n                                // merge together\r\n                                eventList.forEach(item => {\r\n                                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                                    if (raw) {\r\n                                        item.stateId = raw.id;\r\n                                    }\r\n                                });\r\n\r\n                                this.setState({isInstanceAlive: aliveState && aliveState.val, eventList, eventRawList}, () => cb && cb());\r\n                            })));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.readStatus(() => {\r\n            this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.eventRawListId, this.onStateChanged);\r\n            this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n        });\r\n   }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.eventRawListId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            this.setState({isInstanceAlive: state && state.val});\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        } else if (id === this.eventListId) {\r\n            let eventList;\r\n            try {\r\n                eventList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventList = [];\r\n            }\r\n            // merge together\r\n            this.state.eventRawList && eventList.forEach(item => {\r\n                const raw = this.state.eventRawList.find(it => it.ts === item._id);\r\n                if (raw) {\r\n                    item.stateId = raw.id;\r\n                }\r\n            });\r\n            this.setState({eventList});\r\n        } else if (id === this.eventRawListId) {\r\n            let eventRawList;\r\n            try {\r\n                eventRawList = state && state.val ? JSON.parse(state.val) : []\r\n            } catch (e) {\r\n                eventRawList = [];\r\n            }\r\n            // merge together\r\n            let eventList = null;\r\n            this.state.eventList && this.state.eventList.forEach((item, i) => {\r\n                if (!item.stateId) {\r\n                    const raw = eventRawList.find(it => it.ts === item._id);\r\n                    if (raw) {\r\n                        eventList = eventList || JSON.parse(JSON.stringify(this.state.eventList));\r\n                        eventList[i].stateId = raw.id;\r\n                    }\r\n                }\r\n            });\r\n            const newState = {eventRawList};\r\n            if (eventList) {\r\n                newState.eventList = eventList;\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    renderToast() {\r\n        if (!this.state.toast) return null;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={6000}\r\n                onClose={() => this.setState({toast: ''})}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{this.state.toast}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        className={this.props.classes.close}\r\n                        onClick={() => this.setState({toast: ''})}\r\n                    >\r\n                        <IconClose />\r\n                    </IconButton>,\r\n                ]}\r\n            />);\r\n    }\r\n\r\n    onRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({order: isAsc ? 'desc' : 'asc', orderBy: property});\r\n    };\r\n\r\n    renderHeader() {\r\n        const createSortHandler = (property) => event =>\r\n            this.onRequestSort(event, property);\r\n\r\n        return <TableHead>\r\n            <TableRow>\r\n                {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={!!this.state.selected.length && this.state.selected.length < this.state.eventList.length}\r\n                        checked={this.state.eventList.length > 0 && this.state.selected.length === this.state.eventList.length}\r\n                        disabled={!this.state.eventList.length}\r\n                        onChange={e => {\r\n                            if (e.target.checked) {\r\n                                const selected = this.state.eventList.map(n => n._id);\r\n                                const selectedId = selected.length === 1 ? this.state.eventList.find(item => item._id === selected[0]).stateId : '';\r\n                                this.setState({selected, selectedId});\r\n                            } else {\r\n                                this.setState({selected: [], selectedId: ''});\r\n                            }\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>}\r\n                {this.headCells.map(cell =>\r\n                    cell.id === 'icon' ?  (\r\n                            this.props.native.icons ? <TableCell\r\n                                key={cell.id}\r\n                                component=\"th\"\r\n                                className={this.props.classes.tdIcons}\r\n                                align=\"left\"\r\n                                padding=\"none\"\r\n                            /> : null\r\n                        )\r\n                    :\r\n                    <TableCell\r\n                        key={cell.id}\r\n                        className={this.props.classes['td' + cell.id[0].toUpperCase() + cell.id.substring(1)]}\r\n                        align={cell.align}\r\n                        padding=\"none\"\r\n                        component=\"th\"\r\n                        sortDirection={this.state.orderBy === cell.id ? this.state.order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={this.state.orderBy === cell.id}\r\n                            direction={this.state.orderBy === cell.id ? this.state.order : 'asc'}\r\n                            onClick={createSortHandler(cell.id)}\r\n                        >\r\n                            {cell.label}\r\n                            {this.state.orderBy === cell.id ?\r\n                                <span className={this.props.classes.visuallyHidden}>{this.state.order === 'desc' ? I18n.t('sorted descending') : I18n.t('sorted ascending')}</span>\r\n                                : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                )}\r\n                {this.props.native.duration ?\r\n                    <TableCell className={this.props.classes.tdDuration} component=\"th\" padding=\"none\" align=\"right\">\r\n                        {I18n.t('Duration')}</TableCell>\r\n                    : null}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">State ID</TableCell>}\r\n                {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\"/>}\r\n            </TableRow>\r\n        </TableHead>;\r\n    }\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive) {\r\n            this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', this.props.native.pdfSettings)\r\n                .then(() => {\r\n                    let myWindow;\r\n                    if (!window.location.pathname.includes('adapter/')) {\r\n                        myWindow = window.open('/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    } else {\r\n                        myWindow = window.open('/files/eventlist/report.pdf?q=' + Date.now(), 'pdf');\r\n                    }\r\n\r\n                    myWindow && myWindow.focus();\r\n                });\r\n        }\r\n    }\r\n\r\n    renderToolbar() {\r\n        const narrowWidth = this.props.width === 'xs' || this.props.width === 'sm';\r\n        return <Toolbar className={clsx(this.props.classes.toolbarRoot, this.state.selected.length && this.props.classes.toolbarHighlight)}>\r\n            {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <Typography className={this.props.classes.toolbarTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {this.state.selected.length} {I18n.t('selected')}\r\n                </Typography>\r\n            :\r\n                <Typography className={this.props.classes.toolbarTitle} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    <span>{I18n.t('Event list')}</span>\r\n                    <span className={this.props.classes.instanceNotOnline}>{!this.state.isInstanceAlive ? I18n.t('(Instance not running)') : ''}</span>\r\n                </Typography>\r\n            }\r\n\r\n            {this.state.editAvailable && this.state.editEnabled && this.state.selected.length ?\r\n                <>\r\n                    <Tooltip title={I18n.t('Delete')}>\r\n                        <IconButton aria-label=\"delete\" onClick={() => this.setState({showDeleteConfirm: true})}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    {this.state.selectedId ?\r\n                        <Tooltip title={I18n.t('Edit settings for state')}>\r\n                            <IconButton aria-label=\"edit\" onClick={() => {\r\n                                Router.doNavigate(null, 'addId', this.state.selectedId);\r\n                                this.setState({showAddIdDialog: this.state.selectedId})\r\n                            }}>\r\n                                <IconEdit />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null}\r\n                </>\r\n                :\r\n                <>\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Add state to event list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" size=\"small\" aria-label=\"add\" color=\"secondary\" classes={{root: this.props.classes.buttonAddState}} onClick={() => {\r\n                            Router.doNavigate(null, 'selectState', '');\r\n                            this.setState({showSelectState: true});\r\n                        }}>\r\n                            <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                <IconEdit style={{verticalAlign: 'middle', marginRight: 8}}/>\r\n                                {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('States')}</span>}\r\n                            </div>\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.state.editEnabled && <Tooltip title={I18n.t('Insert custom event into list')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab variant=\"extended\" aria-label=\"add\" size=\"small\" color=\"primary\" disabled={!this.state.isInstanceAlive} onClick={() => this.setState({showAddEventDialog: true})}>\r\n                                <div className={clsx(!narrowWidth && this.props.classes.toolbarButtonText)}>\r\n                                    <IconAddEvent style={{verticalAlign: 'middle'}} />\r\n                                    {narrowWidth ? null : <span style={{verticalAlign: 'middle'}}>{I18n.t('Custom Event')}</span>}\r\n                                </div>\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    {this.state.editAvailable && this.props.showEditButton && <Tooltip title={I18n.t('Edit mode')} className={this.props.classes.toolbarButton}>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            aria-label=\"enable-edit\"\r\n                            size=\"small\"\r\n                            style={this.state.editEnabled ? {background: 'red'} : {}}\r\n                            onClick={() => {\r\n                                window.localStorage.setItem(`${this.props.adapterName}-${this.props.instance || 0}-adapter.editEnabled`, this.state.editEnabled ? 'false' : 'true');\r\n                                this.setState({editEnabled: !this.state.editEnabled});\r\n                            }}>\r\n                            <IconEdit />\r\n                        </Fab>\r\n                    </Tooltip>}\r\n                    {this.props.native.pdfButton && <Tooltip title={I18n.t('Generate PDF file')} className={this.props.classes.toolbarButton}>\r\n                        <span>\r\n                            <Fab\r\n                                variant=\"extended\"\r\n                                aria-label=\"generate-pdf\"\r\n                                size=\"small\"\r\n                                disabled={!this.state.isInstanceAlive || this.state.pdfInGeneration}\r\n                                onClick={() => this.triggerPdf()}>\r\n                                <IconPdf />\r\n                            </Fab>\r\n                        </span>\r\n                    </Tooltip>}\r\n                    <Tooltip title={I18n.t('Refresh list')} className={this.props.classes.toolbarButton}>\r\n                        <Fab variant=\"extended\" aria-label=\"refresh\" size=\"small\" onClick={() => this.readStatus()}>\r\n                            <IconReload />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </>\r\n            }\r\n        </Toolbar>;\r\n    }\r\n\r\n    stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) {\r\n                return order;\r\n            } else {\r\n                return a[1] - b[1];\r\n            }\r\n        });\r\n        return stabilizedThis.map(el => el[0]);\r\n    }\r\n\r\n    descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy)\r\n            : (a, b) => -this.descendingComparator(a, b, orderBy === 'ts' ? '_id' : orderBy);\r\n    }\r\n\r\n    handleClick(id) {\r\n        const selectedIndex = this.state.selected.indexOf(id);\r\n        let newSelected = [];\r\n        let selectedId = '';\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(this.state.selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(1));\r\n        } else if (selectedIndex === this.state.selected.length - 1) {\r\n            newSelected = newSelected.concat(this.state.selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                this.state.selected.slice(0, selectedIndex),\r\n                this.state.selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        if (newSelected.length === 1) {\r\n            selectedId = this.state.eventList.find(item => item._id === newSelected[0]).stateId;\r\n        }\r\n\r\n        this.setState({selected: newSelected, selectedId});\r\n    };\r\n\r\n    deleteEntries(cb) {\r\n        this.props.socket.getState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`)\r\n            .then(state => {\r\n                let eventList;\r\n                try {\r\n                    eventList = state && state.val ? JSON.parse(state.val) : []\r\n                } catch (e) {\r\n                    eventList = [];\r\n                }\r\n\r\n                eventList = eventList.filter(item => !this.state.selected.includes(item.ts));\r\n\r\n                this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.eventListRaw`, JSON.stringify(eventList))\r\n                    .then(() =>\r\n                        this.setState({selected: [], selectedId: ''}, () => cb && cb()));\r\n            });\r\n    }\r\n\r\n    renderSelectState() {\r\n        if (!this.state.showSelectState) {\r\n            return null;\r\n        }\r\n        return <SelectStateDialog\r\n            socket={this.props.socket}\r\n            adapterName={this.props.adapterName}\r\n            instance={this.props.instance}\r\n            onClose={id => {\r\n                if (id) {\r\n                    Router.doNavigate(null, 'addId', id);\r\n                    this.setState({showAddIdDialog: id, showSelectState: false});\r\n                } else {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showSelectState: false});\r\n                }\r\n            }}\r\n            />;\r\n    }\r\n\r\n    renderList() {\r\n        return <TableContainer className={this.props.classes.tableContainer}>\r\n                <Table\r\n                    className={this.props.classes.table}\r\n                    size=\"small\"\r\n                >\r\n                    {this.renderHeader()}\r\n                    <TableBody>\r\n                        {this.stableSort(this.state.eventList, this.getComparator(this.state.order, this.state.orderBy))\r\n                            .map((row, index) => {\r\n                                const isItemSelected = this.state.selected.includes(row._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return <TableRow\r\n                                    hover\r\n                                    onClick={() => this.handleClick(row._id)}\r\n                                    style={row._style || undefined}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row._id}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    {this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled && <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                        />\r\n                                    </TableCell>}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdTs} scope=\"row\" padding=\"none\" align=\"right\">{row.ts}</TableCell>\r\n                                    {this.props.native.icons ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdIcons} component=\"td\" padding=\"none\" align=\"center\">\r\n                                            {row.icon ? <Image\r\n                                                imagePrefix={this.imagePrefix}\r\n                                                src={row.icon}\r\n                                                className={this.props.classes.icon}\r\n                                                color={(row._style && row._style.color) || ''}\r\n                                            /> : null}\r\n                                        </TableCell>\r\n                                        : null}\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdEvent} align=\"right\">{row.event}</TableCell>\r\n                                    <TableCell style={row._style || undefined } className={this.props.classes.tdVal} align=\"left\">{row.val === undefined ? '' : row.val.toString()}</TableCell>\r\n                                    {this.props.native.duration ?\r\n                                        <TableCell style={row._style || undefined } className={this.props.classes.tdDuration} component=\"td\" padding=\"none\" align=\"right\">\r\n                                            {row.duration || ''}</TableCell>\r\n                                        : null}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdID} align=\"left\">{row.stateId}</TableCell>}\r\n                                    {this.state.editAvailable && this.state.editEnabled && <TableCell className={this.props.classes.tdEdit} align=\"left\">{row.stateId ?\r\n                                        <Tooltip title={I18n.t('Edit settings for state')} className={this.props.classes.toolbarButton}>\r\n                                            <IconButton className={this.props.classes.editButton} onClick={e => {\r\n                                                e.stopPropagation();\r\n                                                Router.doNavigate(null, 'addId', row.stateId);\r\n                                                this.setState({showAddIdDialog: row.stateId});\r\n                                            }}><IconEdit/></IconButton>\r\n                                        </Tooltip>: null}\r\n                                    </TableCell>}\r\n                                </TableRow>;\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        if (!this.state.showDeleteConfirm) {\r\n            return null;\r\n        } else {\r\n            return <ConfirmDialog\r\n                title={I18n.t('Please confirm')}\r\n                text={I18n.t('Are you sure to delete events from list?')}\r\n                ok={I18n.t('Ok')}\r\n                cancel={I18n.t('Cancel')}\r\n                icon={<IconQuestion/>}\r\n                onClose={result =>\r\n                    this.setState({showDeleteConfirm: false}, () =>\r\n                        result && this.deleteEntries())}\r\n                />\r\n        }\r\n    }\r\n\r\n    renderAddEventDialog() {\r\n        if (!this.state.showAddEventDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddEventDialog\r\n                onClose={event => {\r\n                    this.setState({showAddEventDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    renderAddIdDialog() {\r\n        if (!this.state.showAddIdDialog) {\r\n            return null;\r\n        } else {\r\n            return <AddIdDialog\r\n                imagePrefix={this.imagePrefix}\r\n                instance={this.props.instance}\r\n                adapterName={this.props.adapterName}\r\n                themeName={this.props.themeName}\r\n                themeType={this.props.themeType}\r\n                socket={this.props.socket}\r\n                native={this.props.native}\r\n                id={typeof this.state.showAddIdDialog === 'string' ? this.state.showAddIdDialog : ''}\r\n                onClose={event => {\r\n                    Router.doNavigate(null, '', '');\r\n                    this.setState({showAddIdDialog: false}, () =>\r\n                        event && this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'insert', event))\r\n                }}\r\n            />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper className={ clsx(this.props.classes.tab, !(this.state.isInstanceAlive && this.state.editAvailable && this.state.editEnabled) && this.props.classes.tabMargins) }>\r\n                {this.renderToolbar()}\r\n                {this.state.eventList ? this.renderList() : <LinearProgress />}\r\n                {this.renderToast()}\r\n                {this.renderConfirmDialog()}\r\n                {this.renderAddEventDialog()}\r\n                {this.renderAddIdDialog()}\r\n                {this.renderSelectState()}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nList.propTypes = {\r\n    editAvailable: PropTypes.bool,\r\n    editEnabled: PropTypes.bool,\r\n    showEditButton: PropTypes.bool,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    themeName: PropTypes.string,\r\n    themeType: PropTypes.string,\r\n    native: PropTypes.object.isRequired,\r\n    imagePrefix: PropTypes.string,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles)(List));","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogMessage from '@iobroker/adapter-react/Dialogs/Message';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {MdHelp as IconHelp} from 'react-icons/md';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    tab: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    gridContainer: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        marginRight: 20,\r\n    },\r\n    settingsDivLandscape: {\r\n    },\r\n    iframePdfLandscape: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    field: {\r\n        width: 100,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fieldWide: {\r\n        width: 250,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    accordionContent: {\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n    },\r\n    noCheckbox: {\r\n        paddingLeft: 32,\r\n    },\r\n    formControl: {\r\n        paddingRight: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    orientation: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    fontSize: {\r\n        marginTop: -3,\r\n    },\r\n    buttonFormat: {\r\n        marginTop: 20,\r\n    },\r\n    titleText: {\r\n        width: 310,\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    }\r\n});\r\n\r\nconst SETTINGS = {\r\n    orientation: 'portrait',\r\n    enabledTime: true,\r\n    enabledValue: true,\r\n    enabledDuration: true,\r\n    widthTime: 105,\r\n    widthEvent: 200,\r\n    widthValue: 110,\r\n    widthDuration: 100,\r\n    textTime: 'Time',\r\n    textEvent: 'Event',\r\n    textValue: 'Value',\r\n    textDuration: 'Duration',\r\n    paddingLeft: 60,\r\n    paddingTopFirst: 120,\r\n    paddingTop: 60,\r\n    pageWidth: 510,\r\n    pageHeight: 740,\r\n\r\n    textColor: '#000000',\r\n    fontSize: 10,\r\n    colorLineOdd: '#E8E8E8',\r\n    colorLineEven: '#FFFFFF',\r\n    lineHeight: 18,\r\n\r\n    colorHeaderBackground: '#888888',\r\n    colorHeader: '#FFFFFF',\r\n    fontSizeHeader: 13,\r\n    enabledHeader: true,\r\n\r\n    titleColor: '#000000',\r\n    titleText: 'Event list on {{YYYY MM DD H:mm:ss}}',\r\n    titleFontSize: 18,\r\n\r\n    pageNumberOffsetX: 50,\r\n    pageNumberOffsetY: 10,\r\n    pageNumberFontSize: 10,\r\n    pageNumberColor: '#000000',\r\n    pageNumberEnabled: true,\r\n\r\n    margins: {\r\n        top: 30,\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 30,\r\n    }\r\n};\r\n\r\nclass PdfSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let expanded = window.localStorage.getItem('eventlist.app.expanded') || '[]';\r\n        try {\r\n            expanded = JSON.parse(expanded);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.state = {\r\n            isInstanceAlive: false,\r\n            pdfInGeneration: false,\r\n            random: 0,\r\n            expanded,\r\n        };\r\n\r\n        this.aliveId = `system.adapter.${this.props.adapterName}.${this.props.instance}.alive`;\r\n        this.triggerPDFId = `${this.props.adapterName}.${this.props.instance}.triggerPDF`;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.subscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(this.aliveId, this.onStateChanged);\r\n        this.props.socket.unsubscribeState(this.triggerPDFId, this.onStateChanged);\r\n    }\r\n\r\n    onStateChanged = (id, state) => {\r\n        if (id === this.aliveId) {\r\n            if (this.state.isInstanceAlive !== (state ? state.val : false)) {\r\n                this.setState({isInstanceAlive: state && state.val}, () => this.triggerPdf());\r\n            }\r\n        } if (id === this.triggerPDFId) {\r\n            this.setState({pdfInGeneration: state && state.val});\r\n        }\r\n    };\r\n\r\n    triggerPdf() {\r\n        if (this.state.isInstanceAlive && !this.state.pdfInGeneration) {\r\n            this.triggerTimer && clearTimeout(this.triggerTimer);\r\n            this.triggerTimer = setTimeout(() => {\r\n                this.triggerTimer = null;\r\n                this.setState({pdfInGeneration: true});\r\n                const settings = JSON.parse(JSON.stringify(this.props.native.pdfSettings));\r\n                Object.keys(settings).forEach(attr => {\r\n                    if (attr.toLowerCase().includes('color')) {\r\n                        if (typeof settings[attr] === 'object') {\r\n                            settings[attr] = ColorPicker.getColor(settings[attr], true);\r\n                        }\r\n                        if (settings[attr].startsWith('rgb')) {\r\n                            settings[attr] = ColorPicker.rgb2hex(settings[attr]);\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'pdf', settings)\r\n                    .then(() =>\r\n                        this.setState({pdfInGeneration: false, random: this.state.random + 1}, () =>\r\n                            setTimeout(() => {\r\n                                if (this.lastElement) {\r\n                                    try {\r\n                                        this.lastElement.focus();\r\n                                    } catch (e) {\r\n\r\n                                    }\r\n\r\n                                    this.lastElement = null;\r\n                                }\r\n                            })));\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    onChange(attr, value, e) {\r\n        if (e && e.target) {\r\n            this.lastElement = e.target;\r\n            //e.stopPropagation();\r\n        }\r\n        this.props.onChange('pdfSettings.' + attr, value, () =>\r\n            this.triggerPdf());\r\n    }\r\n\r\n    onExpand(name, ex) {\r\n        let expanded;\r\n        if (name === true) {\r\n            expanded = ['sizes', 'enabledTitle', 'enabledHeader', 'margins', 'text', 'enabledTime', 'enabledEvent', 'enabledValue', 'enabledDuration', 'pageNumberEnabled'];\r\n        } else if (name === false) {\r\n            expanded = [];\r\n        } else {\r\n            expanded = [...this.state.expanded];\r\n            if (ex) {\r\n                !expanded.includes(name) && expanded.push(name);\r\n            } else {\r\n                const pos = expanded.indexOf(name);\r\n                pos !== -1 && expanded.splice(pos, 1);\r\n            }\r\n        }\r\n        window.localStorage.setItem('eventlist.app.expanded', JSON.stringify(expanded));\r\n        this.setState({expanded});\r\n    }\r\n\r\n    toggleOrientation(orientation, e) {\r\n        if (orientation && orientation !== (this.props.native.pdfSettings.orientation || 'portrait')) {\r\n            const native = JSON.parse(JSON.stringify(this.props.native));\r\n            const pageWidth = native.pdfSettings.pageWidth;\r\n            const top = native.pdfSettings.margins.top;\r\n            const bottom = native.pdfSettings.margins.bottom;\r\n            native.pdfSettings.pageWidth = native.pdfSettings.pageHeight;\r\n            native.pdfSettings.pageHeight = pageWidth;\r\n            native.pdfSettings.margins.top = native.pdfSettings.margins.left;\r\n            native.pdfSettings.margins.left = top;\r\n            native.pdfSettings.margins.bottom = native.pdfSettings.margins.right;\r\n            native.pdfSettings.margins.right = bottom;\r\n            native.pdfSettings.orientation = orientation;\r\n            this.props.updateNative(native);\r\n        }\r\n    }\r\n\r\n    renderPageSize(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('sizes')}\r\n            onChange={(event, ex) => this.onExpand('sizes', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Page size')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                <FormControl className={clsx(this.props.classes.fieldWide, this.props.classes.orientation)}>\r\n                    <InputLabel>{I18n.t('Page orientation')}</InputLabel>\r\n                    <Select\r\n                        disabled={this.state.pdfInGeneration}\r\n                        value={settings.orientation || 'portrait'}\r\n                        onChange={e => this.toggleOrientation(e.target.value, e)}\r\n                    >\r\n                        <MenuItem value=\"portrait\">{I18n.t('Portrait')}</MenuItem>\r\n                        <MenuItem value=\"landscape\">{I18n.t('Landscape')}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Width')}\r\n                    value={settings.pageWidth}\r\n                    onChange={e => this.onChange('pageWidth', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Height')}\r\n                    value={settings.pageHeight}\r\n                    onChange={e => this.onChange('pageHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for first page')}\r\n                    value={settings.paddingTopFirst}\r\n                    onChange={e => this.onChange('paddingTopFirst', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.fieldWide}\r\n                    label={I18n.t('Padding top for other pages')}\r\n                    value={settings.paddingTop}\r\n                    onChange={e => this.onChange('paddingTop', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Padding left')}\r\n                    value={settings.paddingLeft}\r\n                    onChange={e => this.onChange('paddingLeft', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTitle(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledTitle')}\r\n            onChange={(event, ex) => this.onExpand('enabledTitle', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Title')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleText\"\r\n                    type=\"text\"\r\n                    className={clsx(this.props.classes.titleText)}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleText}\r\n                    onChange={e => this.onChange('titleText', e.target.value, e)}\r\n                    helperText={I18n.t('You can add time with {{YYYY MM DD}}')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={this.props.classes.buttonFormat}\r\n                    onClick={() => window.open('https://momentjs.com/docs/#/displaying/format/', 'momentHelp')}>\r\n                    <IconHelp className={this.props.classes.buttonIcon}/>{I18n.t('Time format description')}\r\n                </Button>\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.titleColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('titleColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"titleFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Title')}\r\n                    value={settings.titleFontSize}\r\n                    onChange={e => this.onChange('titleFontSize', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageHeader(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledHeader && this.state.expanded.includes('enabledHeader')}\r\n            onChange={(event, ex) => this.onExpand('enabledHeader', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledHeader ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledHeader\"\r\n                    control={<Checkbox checked={settings.enabledHeader || false} onChange={e => this.onChange('enabledHeader', e.target.checked, e)} />}\r\n                    label={I18n.t('Show table header')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledHeader && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSizeHeader\"\r\n                    type=\"number\"\r\n                    className={clsx(this.props.classes.field, this.props.classes.fontSize)}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSizeHeader}\r\n                    onChange={e => this.onChange('fontSizeHeader', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeaderBackground}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Background')}\r\n                    onChange={color => this.onChange('colorHeaderBackground', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorHeader}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Text color')}\r\n                    onChange={color => this.onChange('colorHeader', color)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageMargins(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('margins')}\r\n            onChange={(event, ex) => this.onExpand('margins', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Margins')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"top\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Top')}\r\n                    value={settings.margins.top}\r\n                    onChange={e => this.onChange('margins.top', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"left\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Left')}\r\n                    value={settings.margins.left}\r\n                    onChange={e => this.onChange('margins.left', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"bottom\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Bottom')}\r\n                    value={settings.margins.bottom}\r\n                    onChange={e => this.onChange('margins.bottom', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"right\"\r\n                    type=\"right\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Right')}\r\n                    value={settings.margins.right}\r\n                    onChange={e => this.onChange('margins.right', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsText(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('text')}\r\n            onChange={(event, ex) => this.onExpand('text', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Text settings')}</AccordionSummary>\r\n            <AccordionDetails style={{display: 'inline-block'}}>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"fontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.fontSize}\r\n                    onChange={e => this.onChange('fontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.textColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16, marginTop: 10}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('textColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"lineHeight\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Line height')}\r\n                    value={settings.lineHeight}\r\n                    onChange={e => this.onChange('lineHeight', e.target.value, e)}\r\n                />\r\n                <br/>\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineOdd}\r\n                    style={{width: 408, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Odd line background')}\r\n                    onChange={color => this.onChange('colorLineOdd', color)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.colorLineEven}\r\n                    style={{width: 400, display: 'inline-block', marginRight: 16, marginTop: 8}}\r\n                    name={I18n.t('Even line background')}\r\n                    onChange={color => this.onChange('colorLineEven', color)}\r\n                />\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsTime(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledTime && this.state.expanded.includes('enabledTime')}\r\n            onChange={(event, ex) => this.onExpand('enabledTime', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledTime ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"enabledTime\"\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    control={<Checkbox checked={settings.enabledTime || false} onChange={e => this.onChange('enabledTime', e.target.checked, e)} />}\r\n                    label={I18n.t('Show time')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledTime && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthTime\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthTime}\r\n                    onChange={e => this.onChange('widthTime', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textTime\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textTime}\r\n                    onChange={e => this.onChange('textTime', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>\r\n    }\r\n\r\n    renderSettingsEvent(settings) {\r\n        return <Accordion\r\n            expanded={this.state.expanded.includes('enabledEvent')}\r\n            onChange={(event, ex) => this.onExpand('enabledEvent', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{content: clsx(this.props.classes.accordionContent, this.props.classes.noCheckbox)}}>{I18n.t('Event')}</AccordionSummary>\r\n            <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthEvent\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthEvent}\r\n                    onChange={e => this.onChange('widthEvent', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textEvent\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textEvent}\r\n                    onChange={e => this.onChange('textEvent', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsValue(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledValue && this.state.expanded.includes('enabledValue')}\r\n            onChange={(event, ex) => this.onExpand('enabledValue', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledValue ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledValue\"\r\n                    control={<Checkbox checked={settings.enabledValue || false} onChange={e => this.onChange('enabledValue', e.target.checked, e)} />}\r\n                    label={I18n.t('Show value')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledValue && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthValue\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthValue}\r\n                    onChange={e => this.onChange('widthValue', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader &&  <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textValue\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textValue}\r\n                    onChange={e => this.onChange('textValue', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettingsDuration(settings) {\r\n        return <Accordion\r\n            expanded={settings.enabledDuration && this.state.expanded.includes('enabledDuration')}\r\n            onChange={(event, ex) => this.onExpand('enabledDuration', ex)}\r\n\r\n        >\r\n            <AccordionSummary expandIcon={settings.enabledDuration ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"enabledDuration\"\r\n                    control={<Checkbox checked={settings.enabledDuration || false} onChange={e => {\r\n                        this.onChange('enabledDuration', e.target.checked, e)\r\n                    }} />}\r\n                    label={I18n.t('Show duration')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.enabledDuration && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"widthDuration\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Column width')}\r\n                    value={settings.widthDuration}\r\n                    onChange={e => this.onChange('widthDuration', e.target.value, e)}\r\n                />\r\n                {!!settings.enabledHeader && <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"textDuration\"\r\n                    type=\"text\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Header text')}\r\n                    value={settings.textDuration}\r\n                    onChange={e => this.onChange('textDuration', e.target.value, e)}\r\n                />}\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderPageNumbers(settings) {\r\n        return <Accordion\r\n            expanded={settings.pageNumberEnabled && this.state.expanded.includes('pageNumberEnabled')}\r\n            onChange={(event, ex) => this.onExpand('pageNumberEnabled', ex)}\r\n        >\r\n            <AccordionSummary expandIcon={settings.pageNumberEnabled ? <ExpandMoreIcon /> : null} classes={{content: this.props.classes.accordionContent}}>\r\n                <FormControlLabel\r\n                    disabled={this.state.pdfInGeneration}\r\n                    onFocus={event => event.stopPropagation()}\r\n                    onClick={event => event.stopPropagation()}\r\n                    key=\"pageNumberEnabled\"\r\n                    control={<Checkbox checked={settings.pageNumberEnabled || false} onChange={e => this.onChange('pageNumberEnabled', e.target.checked, e)} />}\r\n                    label={I18n.t('Show page numbers')}\r\n                />\r\n            </AccordionSummary>\r\n            {!!settings.pageNumberEnabled && <AccordionDetails>\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberFontSize\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Font size')}\r\n                    value={settings.pageNumberFontSize}\r\n                    onChange={e => this.onChange('pageNumberFontSize', e.target.value, e)}\r\n                />\r\n                <ColorPicker\r\n                    disabled={this.state.pdfInGeneration}\r\n                    color={settings.pageNumberColor}\r\n                    style={{width: 300, display: 'inline-block', marginRight: 16}}\r\n                    name={I18n.t('Color')}\r\n                    onChange={color => this.onChange('pageNumberColor', color)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetX\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('X Offset')}\r\n                    value={settings.pageNumberOffsetX}\r\n                    onChange={e => this.onChange('pageNumberOffsetX', e.target.value, e)}\r\n                />\r\n                <TextField\r\n                    disabled={this.state.pdfInGeneration}\r\n                    key=\"pageNumberOffsetY\"\r\n                    type=\"number\"\r\n                    className={this.props.classes.field}\r\n                    label={I18n.t('Y Offset')}\r\n                    value={settings.pageNumberOffsetY}\r\n                    onChange={e => this.onChange('pageNumberOffsetY', e.target.value, e)}\r\n                />\r\n            </AccordionDetails>}\r\n        </Accordion>;\r\n    }\r\n\r\n    renderSettings() {\r\n        const settings = Object.assign({}, SETTINGS, this.props.native.pdfSettings);\r\n\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <Grid container>\r\n                <FormControlLabel\r\n                    key=\"pdfButton\"\r\n                    control={<Checkbox checked={this.props.native.pdfButton || false} onChange={e => this.props.onChange('pdfButton', e.target.checked)} />}\r\n                    label={I18n.t('Show PDF generate button on list')}\r\n                />\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton onClick={() => this.onExpand(false)} title={I18n.t('Collapse all')} disabled={!this.state.expanded.length}><ExpandLessIcon /></IconButton>\r\n                <IconButton onClick={() => this.onExpand(true)} title={I18n.t('Expand all')} disabled={this.state.expanded.length === 10}><ExpandMoreIcon /></IconButton>\r\n            </Grid>\r\n            {this.renderPageSize(settings)}\r\n            {this.renderSettingsTitle(settings)}\r\n            {this.renderPageHeader(settings)}\r\n            {this.renderPageMargins(settings)}\r\n            {this.renderSettingsText(settings)}\r\n            {this.renderSettingsTime(settings)}\r\n            {this.renderSettingsEvent(settings)}\r\n            {this.renderSettingsValue(settings)}\r\n            {this.renderSettingsDuration(settings)}\r\n            {this.renderPageNumbers(settings)}\r\n\r\n        </Grid>;\r\n    }\r\n\r\n    renderPdfFile() {\r\n        return <Grid item xs={12} md={12} lg={6}>\r\n            <iframe title=\"pdf\" className={this.props.classes.iframePdfLandscape} src={'/files/eventlist/report.pdf?q=' + this.state.random} />\r\n        </Grid>\r\n    }\r\n\r\n    renderMessage() {\r\n        if (!this.state.messageText) {\r\n            return null;\r\n        }\r\n        return <DialogMessage title={I18n.t('Success')} onClose={() => this.setState({messageText: ''})}>{this.state.messageText}</DialogMessage>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={this.props.classes.tab}>\r\n                <Grid container spacing={1} className={this.props.classes.gridContainer}>\r\n                    {this.renderSettings()}\r\n                    {this.renderPdfFile()}\r\n                </Grid>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nPdfSettings.propTypes = {\r\n    native: PropTypes.object.isRequired,\r\n    onChange: PropTypes.func,\r\n    updateNative: PropTypes.func,\r\n    socket: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PdfSettings);\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport ColorPicker from '@iobroker/adapter-react/Components/ColorPicker';\r\nimport Router from '@iobroker/adapter-react/Components/Router';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabList from './Tabs/List';\r\nimport TabPDF from './Tabs/PdfSettings';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto'\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n        extendedProps.bottomButtons = true;\r\n\r\n        if (!window.location.pathname.includes('adapter/') && window.location.port !== '3000') {\r\n            extendedProps.bottomButtons = false;\r\n        } else if (window.location.pathname.includes('/tab.html') || window.location.pathname.includes('/tab_m.html')) {\r\n            extendedProps.bottomButtons = false;\r\n        }\r\n\r\n        super(props, extendedProps);\r\n\r\n        this.isTab = !extendedProps.bottomButtons;\r\n        this.isWeb = window.socketUrl !== undefined;\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const tab = this.state.selectedTab;\r\n        if (!tab || tab === 'options') {\r\n            return 0;\r\n        } else\r\n        if (tab === 'list') {\r\n            return 1;\r\n        } else\r\n        if (tab === 'pdf') {\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onPrepareSave(native) {\r\n        if (native.defaultBooleanColorTrue) {\r\n            native.defaultBooleanColorTrue = ColorPicker.getColor(native.defaultBooleanColorTrue);\r\n        }\r\n        if (native.defaultBooleanColorFalse) {\r\n            native.defaultBooleanColorFalse = ColorPicker.getColor(native.defaultBooleanColorFalse);\r\n        }\r\n\r\n        Object.keys(native.pdfSettings).forEach(attr => {\r\n            if (attr.toLowerCase().includes('color')) {\r\n                if (typeof native.pdfSettings[attr] === 'object') {\r\n                    native.pdfSettings[attr] = ColorPicker.getColor(native.pdfSettings[attr], true);\r\n                }\r\n                if (native.pdfSettings[attr].startsWith('rgb')) {\r\n                    native.pdfSettings[attr] = ColorPicker.RGB2hex(native.pdfSettings[attr]);\r\n                }\r\n            }\r\n        });\r\n\r\n        super.onPrepareSave();\r\n    }\r\n\r\n    updateNative(native, cb) {\r\n        const changed = JSON.stringify(native) !== JSON.stringify(this.savedNative);\r\n        this.setState({native, changed}, cb);\r\n    }\r\n\r\n    renderTabsForConfig() {\r\n        return <>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={this.getSelectedTab()} onChange={(e, index) => Router.doNavigate(e.target.parentNode.dataset.name)}>\r\n                    <Tab label={I18n.t('Options')}    data-name=\"options\" />\r\n                    <Tab label={I18n.t('Event list')} data-name=\"list\" />\r\n                    <Tab label={I18n.t('PDF')}        data-name=\"pdf\" />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                {(this.state.selectedTab === 'options' || !this.state.selectedTab) && <TabOptions\r\n                    key=\"options\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                    onLoad={native => this.onLoadConfig(native)}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    changed={this.state.changed}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                />}\r\n                {this.state.selectedTab === 'list' && this.renderEventList()}\r\n                {this.state.selectedTab === 'pdf' && <TabPDF\r\n                    key=\"pdf\"\r\n                    common={this.common}\r\n                    socket={this.socket}\r\n                    native={this.state.native}\r\n                    onError={text => this.setState({errorText: text})}\r\n                    instance={this.instance}\r\n                    adapterName={this.adapterName}\r\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                    updateNative={(native, cb) => this.updateNative(native, cb)}\r\n                />}\r\n            </div>\r\n            {this.renderSaveCloseButtons()}\r\n        </>;\r\n    }\r\n\r\n    renderEventList() {\r\n        return <TabList\r\n            key=\"enums\"\r\n            imagePrefix={this.isWeb ? '../' : '../../files/'}\r\n            editEnabled={!this.isTab}\r\n            showEditButton={this.isTab}\r\n            themeName={this.state.themeName}\r\n            themeType={this.state.themeType}\r\n            common={this.common}\r\n            socket={this.socket}\r\n            native={this.state.native}\r\n            onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n            instance={this.instance}\r\n            adapterName={this.adapterName}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader themeType={this.state.themeType} />\r\n            </MuiThemeProvider>\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                {!this.isTab ?\r\n                    this.renderTabsForConfig()\r\n                    :\r\n                    this.renderEventList()\r\n                }\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'eventlist';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (window.location.host !== 'localhost:3000' && false) {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}